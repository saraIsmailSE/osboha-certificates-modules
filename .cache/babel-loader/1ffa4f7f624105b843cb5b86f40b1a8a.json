{"ast":null,"code":"import useVuelidate from \"@vuelidate/core\";\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\nimport questionServices from '../../api/questionServices';\nimport ListQuestion from '../../components/Questions/ListQuestion.vue';\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  name: 'Questions',\n  mounted: function mounted() {},\n  validations: function validations() {\n    return {\n      questionForm: {\n        components: {\n          ListQuestion: ListQuestion\n        },\n        question: {\n          required: required,\n          minLength: minLength(100),\n          maxLength: maxLength(250)\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required,\n          valdiatePages: this.validatePages\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(250)\n            }\n          }\n        }\n      }\n    };\n  },\n  data: function data() {\n    return {\n      auditable: false,\n      pageError: '',\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: null,\n        quotes: [{\n          text: ''\n        }]\n      },\n      questions: [],\n      show: false\n    };\n  },\n  methods: {}\n};","map":{"version":3,"mappings":"AA6CA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,uBAA/C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AAEA,eAAe;EACXC,KADW,mBACH;IACJ,OAAO;MAAEC,EAAE,EAAEP,YAAY;IAAlB,CAAP;EACH,CAHU;EAIXQ,IAAI,EAAE,WAJK;EAKXC,OALW,qBAKD,CACT,CANU;EAOXC,WAPW,yBAOG;IACV,OAAO;MACHC,YAAY,EAAE;QACVC,UAAU,EAAE;UACRP,YAAY,EAAZA;QADQ,CADF;QAIVQ,QAAQ,EAAE;UACNZ,QAAQ,EAARA,QADM;UAENC,SAAS,EAAEA,SAAS,CAAC,GAAD,CAFd;UAGNC,SAAS,EAAEA,SAAS,CAAC,GAAD;QAHd,CAJA;QASPW,aAAa,EAAE;UACdb,QAAO,EAAPA;QADc,CATR;QAYVc,WAAW,EAAE;UACTd,QAAQ,EAARA,QADS;UACCe,aAAa,EAAE,KAAKC;QADrB,CAZH;QAcPC,MAAM,EAAE;UACPjB,QAAQ,EAARA,QADO;UAEPC,SAAS,EAAEA,SAAS,CAAC,CAAD,CAFb;UAGPiB,KAAK,EAAE;YACHC,IAAI,EAAE;cAEFlB,SAAS,EAAEA,SAAS,CAAC,GAAD;YAFlB;UADH;QAHA;MAdD;IADX,CAAP;EA2BH,CAnCU;EAoCXmB,IApCW,kBAoCJ;IACH,OAAO;MACHC,SAAS,EAAE,KADR;MAEHC,SAAS,EAAE,EAFR;MAGHZ,YAAY,EAAE;QACVE,QAAQ,EAAE,EADA;QAEVC,aAAa,EAAE,EAFL;QAGVC,WAAW,EAAE,EAHH;QAIVS,YAAY,EAAE,IAJJ;QAKVN,MAAM,EAAE,CACJ;UAAEE,IAAI,EAAE;QAAR,CADI;MALE,CAHX;MAYHK,SAAS,EAAE,EAZR;MAaHC,IAAI,EAAE;IAbH,CAAP;EAeH,CApDU;EAqDXC,OAAO,EAAE;AArDE,CAAf","names":["useVuelidate","required","minLength","maxLength","questionServices","ListQuestion","setup","v$","name","mounted","validations","questionForm","components","question","starting_page","ending_page","valdiatePages","validatePages","quotes","$each","text","data","auditable","pageError","user_book_id","questions","show","methods"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Achievement\\Questions.vue"],"sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <iq-card>\r\n                <div class=\"iq-card-body profile-page p-0\">\r\n                    <div class=\"profile-header\">\r\n                        <div class=\"cover-container\">\r\n                            <img src=\"../../assets/images/book-banner.png\" alt=\"profile-bg\" class=\"rounded img-fluid\" />\r\n                        </div>\r\n                        <div class=\"user-detail text-center mb-3\">\r\n                            <div class=\"profile-img\">\r\n                                <img src=\"../../assets/images/reader.png\" alt=\"profile-img\"\r\n                                    class=\"avatar-130 img-fluid\" />\r\n                            </div>\r\n                            <div class=\"profile-detail mt-1\">\r\n                                <br />\r\n                                <h3 class=\"\" v-if=\"book\">{{book.book_name}} - قسم التلخيص والفكرة العامة</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n            <iq-card class=\"iq-card\">\r\n                <div class=\"iq-card-body p-0\">\r\n                    <div class=\"user-tabing\">\r\n                        <tab-nav :pills=\"true\" id=\"pills-tab\"\r\n                            class=\"nav nav-pills d-flex align-items-center justify-content-center profile-feed-items p-0 m-0\">\r\n                            <tab-nav-items class=\"w-100 p-0\" :active=\"true\" id=\"pills-feed-tab\" href=\"#theses_container\"\r\n                                ariaControls=\"pills-home\" role=\"tab\" :ariaSelected=\"true\"\r\n                                title=\"المرحلة الثانية - التلخيص والفكرة العامة\" />\r\n                        </tab-nav>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"tab-content\">\r\n                <!-- START QUESTIONS -->\r\nhello\r\n                <!-- END QUESTIONS -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices'\r\nimport ListQuestion from '../../components/Questions/ListQuestion.vue'\r\n\r\nexport default {\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n    name: 'Questions',\r\n    mounted() {\r\n    },\r\n    validations() {\r\n        return {\r\n            questionForm: {\r\n                components: {\r\n                    ListQuestion,\r\n                },\r\n                question: {\r\n                    required,\r\n                    minLength: minLength(100),\r\n                    maxLength: maxLength(250)\r\n\r\n                }, starting_page: {\r\n                    required\r\n                },\r\n                ending_page: {\r\n                    required, valdiatePages: this.validatePages\r\n                }, quotes: {\r\n                    required,\r\n                    minLength: minLength(1),\r\n                    $each: {\r\n                        text: {\r\n\r\n                            minLength: minLength(250)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            auditable: false,\r\n            pageError: '',\r\n            questionForm: {\r\n                question: '',\r\n                starting_page: \"\",\r\n                ending_page: \"\",\r\n                user_book_id: null,\r\n                quotes: [\r\n                    { text: '' }\r\n                ]\r\n            },\r\n            questions: [],\r\n            show: false,\r\n        }\r\n    },\r\n    methods: {\r\n        },\r\n}\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module"}