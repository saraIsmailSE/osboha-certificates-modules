{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\nimport questionServices from '../../api/questionServices';\nexport default {\n  name: \"UpdateQuestion\",\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQuestion(_this.$route.params.id);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  components: {},\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data: function data() {\n    return {\n      questionToupdate: {},\n      book: []\n    };\n  },\n  validations: function validations() {\n    return {\n      updateQuestionForm: {\n        question: {\n          required: required\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required\n        },\n        quotation: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(2)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    getQuestion: function getQuestion(id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return questionServices.getById(id);\n\n              case 2:\n                _this2.questionToupdate = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;AAeA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,eAAe;EACbC,IAAI,EAAE,gBADO;EAEPC,OAFO,qBAEG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACJ,KAAI,CAACC,WAAL,CAAiB,KAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,EAApC,CADI;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEb,CAJU;EAKbC,UAAU,EAAE,EALC;EAObC,KAPa,mBAOL;IACN,OAAO;MAAEC,EAAE,EAAEZ,YAAY;IAAlB,CAAP;EACD,CATY;EAUba,IAVa,kBAUN;IACL,OAAO;MACLC,gBAAgB,EAAE,EADb;MAGLC,IAAI,EAAE;IAHD,CAAP;EAKD,CAhBY;EAiBbC,WAjBa,yBAiBC;IACZ,OAAO;MACLC,kBAAkB,EAAE;QAClBC,QAAQ,EAAE;UACRjB,QAAO,EAAPA;QADQ,CADQ;QAGfkB,aAAa,EAAE;UAChBlB,QAAO,EAAPA;QADgB,CAHA;QAKfmB,WAAW,EAAE;UACdnB,QAAO,EAAPA;QADc,CALE;QAOfoB,SAAS,EAAE;UACZpB,QAAQ,EAARA,QADY;UAEZC,SAAS,EAAEA,SAAS,CAAC,CAAD,CAFR;UAGZoB,KAAK,EAAE;YACLC,IAAI,EAAE;cAEJrB,SAAS,EAAEA,SAAS,CAAC,CAAD;YAFhB;UADD;QAHK;MAPI;IADf,CAAP;EAoBD,CAtCY;EAuCbsB,OAAO,EAAE;IACDlB,WADC,uBACWG,EADX,EACe;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACgBN,gBAAgB,CAACsB,OAAjB,CAAyBhB,EAAzB,CADhB;;cAAA;gBACd,MAAI,CAACK,gBADS;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEjB;EAHE;AAvCI,CAAf","names":["useVuelidate","required","minLength","questionServices","name","created","getQuestion","$route","params","id","components","setup","v$","data","questionToupdate","book","validations","updateQuestionForm","question","starting_page","ending_page","quotation","$each","text","methods","getById"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Questions\\update.vue"],"sourcesContent":["<template>\r\n  <modal id=\"UpdateQuestionmodal\" dialogClass=\"modal-fullscreen-sm-down\" tabindex=\"-1\" title=\"Create Post\"\r\n    aria-labelledby=\"modalsLabel\">\r\n    <model-header>\r\n      <h5 class=\"modal-title\" id=\"modalsLabel\">تعديل السؤال</h5>\r\n      <a href=\"javascript:void(0);\" class=\"lh-1\" data-bs-dismiss=\"modal\">\r\n        <span class=\"material-symbols-outlined\">close</span>\r\n      </a>\r\n    </model-header>\r\n    <model-body>\r\n    </model-body>\r\n  </modal>\r\n\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices';\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  async created() {\r\n        await this.getQuestion(this.$route.params.id)\r\n    },\r\n  components: {\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  data() {\r\n    return {\r\n      questionToupdate: {\r\n      },\r\n      book: []\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      updateQuestionForm: {\r\n        question: {\r\n          required\r\n        }, starting_page: {\r\n          required\r\n        }, ending_page: {\r\n          required\r\n        }, quotation: {\r\n          required,\r\n          minLength: minLength(1),\r\n          $each: {\r\n            text: {\r\n\r\n              minLength: minLength(2)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async getQuestion(id) {\r\n            this.questionToupdate = await questionServices.getById(id)\r\n        }, \r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}