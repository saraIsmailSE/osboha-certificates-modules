{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { Offcanvas } from 'bootstrap';\nexport default {\n  name: 'offcanvas',\n  props: {\n    mainClass: {\n      type: String,\n      \"default\": 'bottom'\n    },\n    backdrop: {\n      type: String,\n      \"default\": 'false'\n    },\n    tabindex: {\n      type: Number\n    },\n    id: {\n      type: String\n    },\n    ariaLabelled: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    this.elem = new Offcanvas(this.$refs.offcanvas);\n    this.initShow();\n    this.initShown();\n    this.initHide();\n    this.initHidden();\n  },\n  methods: {\n    initShow: function initShow() {\n      var _this = this;\n\n      this.$refs.offcanvas.addEventListener('show.bs.offcanvas', function () {\n        _this.$emit('show');\n      });\n    },\n    initShown: function initShown() {\n      var _this2 = this;\n\n      this.$refs.offcanvas.addEventListener('shown.bs.offcanvas', function () {\n        _this2.$emit('shown');\n      });\n    },\n    initHide: function initHide() {\n      var _this3 = this;\n\n      this.$refs.offcanvas.addEventListener('hide.bs.offcanvas', function () {\n        _this3.$emit('hide');\n      });\n    },\n    initHidden: function initHidden() {\n      var _this4 = this;\n\n      this.$refs.offcanvas.addEventListener('hidden.bs.offcanvas', function () {\n        _this4.$emit('hidden');\n      });\n    },\n    destroyShow: function destroyShow() {\n      this.$refs.offcanvas.removeListener('show.bs.offcanvas');\n    },\n    destroyShown: function destroyShown() {\n      this.$refs.offcanvas.removeListener('shown.bs.offcanvas');\n    },\n    destroyHide: function destroyHide() {\n      this.$refs.offcanvas.removeListener('hide.bs.offcanvas');\n    },\n    destroyHidden: function destroyHidden() {\n      this.$refs.offcanvas.removeListener('hidden.bs.offcanvas');\n    }\n  }\n};","map":{"version":3,"mappings":";AAMA,SAASA,SAAT,QAA0B,WAA1B;AACA,eAAe;EACbC,IAAI,EAAE,WADO;EAEbC,KAAK,EAAE;IACLC,SAAS,EAAE;MAAEC,IAAI,EAAEC,MAAR;MAAgB,WAAS;IAAzB,CADN;IAELC,QAAQ,EAAE;MAAEF,IAAI,EAAEC,MAAR;MAAgB,WAAS;IAAzB,CAFL;IAGLE,QAAQ,EAAE;MAAEH,IAAI,EAAEI;IAAR,CAHL;IAILC,EAAE,EAAE;MAAEL,IAAI,EAAEC;IAAR,CAJC;IAKLK,YAAY,EAAE;MAAEN,IAAI,EAAEC;IAAR;EALT,CAFM;EASbM,OATa,qBASF;IACT,KAAKC,IAAL,GAAY,IAAIZ,SAAJ,CAAc,KAAKa,KAAL,CAAWC,SAAzB,CAAZ;IACA,KAAKC,QAAL;IACA,KAAKC,SAAL;IACA,KAAKC,QAAL;IACA,KAAKC,UAAL;EACD,CAfY;EAgBbC,OAAO,EAAE;IACPJ,QADO,sBACK;MAAA;;MACV,KAAKF,KAAL,CAAWC,SAAX,CAAqBM,gBAArB,CAAsC,mBAAtC,EAA2D,YAAM;QAC/D,KAAI,CAACC,KAAL,CAAW,MAAX;MACD,CAFD;IAGD,CALM;IAMPL,SANO,uBAMM;MAAA;;MACX,KAAKH,KAAL,CAAWC,SAAX,CAAqBM,gBAArB,CAAsC,oBAAtC,EAA4D,YAAM;QAChE,MAAI,CAACC,KAAL,CAAW,OAAX;MACD,CAFD;IAGD,CAVM;IAWPJ,QAXO,sBAWK;MAAA;;MACV,KAAKJ,KAAL,CAAWC,SAAX,CAAqBM,gBAArB,CAAsC,mBAAtC,EAA2D,YAAM;QAC/D,MAAI,CAACC,KAAL,CAAW,MAAX;MACD,CAFD;IAGD,CAfM;IAgBPH,UAhBO,wBAgBO;MAAA;;MACZ,KAAKL,KAAL,CAAWC,SAAX,CAAqBM,gBAArB,CAAsC,qBAAtC,EAA6D,YAAM;QACjE,MAAI,CAACC,KAAL,CAAW,QAAX;MACD,CAFD;IAGD,CApBM;IAqBPC,WArBO,yBAqBQ;MACb,KAAKT,KAAL,CAAWC,SAAX,CAAqBS,cAArB,CAAoC,mBAApC;IACD,CAvBM;IAwBPC,YAxBO,0BAwBS;MACd,KAAKX,KAAL,CAAWC,SAAX,CAAqBS,cAArB,CAAoC,oBAApC;IACD,CA1BM;IA2BPE,WA3BO,yBA2BQ;MACb,KAAKZ,KAAL,CAAWC,SAAX,CAAqBS,cAArB,CAAoC,mBAApC;IACD,CA7BM;IA8BPG,aA9BO,2BA8BU;MACf,KAAKb,KAAL,CAAWC,SAAX,CAAqBS,cAArB,CAAoC,qBAApC;IACF;EAhCO;AAhBI,CAAf","names":["Offcanvas","name","props","mainClass","type","String","backdrop","tabindex","Number","id","ariaLabelled","mounted","elem","$refs","offcanvas","initShow","initShown","initHide","initHidden","methods","addEventListener","$emit","destroyShow","removeListener","destroyShown","destroyHide","destroyHidden"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\bootstrap\\offcanvas\\offcanvas.vue"],"sourcesContent":["<template>\n<div :class=\"`offcanvas offcanvas-${mainClass}`\"  :tabindex=\"tabindex\" :id=\"id\" :aria-labelledby=\"ariaLabelled\" ref=\"offcanvas\">\n    <slot/>\n</div>\n</template>\n<script>\nimport { Offcanvas } from 'bootstrap'\nexport default {\n  name: 'offcanvas',\n  props: {\n    mainClass: { type: String, default: 'bottom' },\n    backdrop: { type: String, default: 'false' },\n    tabindex: { type: Number },\n    id: { type: String },\n    ariaLabelled: { type: String }\n  },\n  mounted () {\n    this.elem = new Offcanvas(this.$refs.offcanvas)\n    this.initShow()\n    this.initShown()\n    this.initHide()\n    this.initHidden()\n  },\n  methods: {\n    initShow () {\n      this.$refs.offcanvas.addEventListener('show.bs.offcanvas', () => {\n        this.$emit('show')\n      })\n    },\n    initShown () {\n      this.$refs.offcanvas.addEventListener('shown.bs.offcanvas', () => {\n        this.$emit('shown')\n      })\n    },\n    initHide () {\n      this.$refs.offcanvas.addEventListener('hide.bs.offcanvas', () => {\n        this.$emit('hide')\n      })\n    },\n    initHidden () {\n      this.$refs.offcanvas.addEventListener('hidden.bs.offcanvas', () => {\n        this.$emit('hidden')\n      })\n    },\n    destroyShow () {\n      this.$refs.offcanvas.removeListener('show.bs.offcanvas')\n    },\n    destroyShown () {\n      this.$refs.offcanvas.removeListener('shown.bs.offcanvas')\n    },\n    destroyHide () {\n      this.$refs.offcanvas.removeListener('hide.bs.offcanvas')\n    },\n    destroyHidden () {\n      this.$refs.offcanvas.removeListener('hidden.bs.offcanvas')\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}