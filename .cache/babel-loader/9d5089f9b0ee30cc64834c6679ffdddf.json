{"ast":null,"code":"import { toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers(function () {\n      return _ctx.submitupdateQuestionForm && _ctx.submitupdateQuestionForm.apply(_ctx, arguments);\n    }, [\"prevent\"])),\n    \"class\": \"post-text ml-3 w-100 row\"\n  }, _toDisplayString($props.questionToupdate), 33\n  /* TEXT, HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAEK,MAFL,EAEK;IAFEC,QAAM;MAAA,OAAUC,qFAAV;IAAA,GAAkC,WAAlC,EAER;IAF4C,SAAM;EAElD,CAFL,mBACIC,wBADJ,EACoB;EAAA;EADpB","names":["_createElementBlock","onSubmit","_ctx","$props"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\Questions\\UpdateQuestion.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitupdateQuestionForm\" class=\"post-text ml-3 w-100 row\">\r\n    {{questionToupdate}}\r\n</form>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices'\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  created() {\r\n\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  props: {\r\n    questionToupdate: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      updateQuestionForm: {\r\n      },\r\n    };\r\n  },\r\n  };\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}