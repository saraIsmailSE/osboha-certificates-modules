{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nexport default {\n  name: \"Chart\",\n  mounted: function mounted() {\n    this.targetContainer = document.getElementById(\"fluidDiv\");\n    this.fillPercentage = 90;\n    this.options.fontSize = \"30px\";\n    this.options.drawPercentageSign = true;\n    this.options.drawBubbles = false;\n    this.options.size = 300;\n    this.options.borderWidth = 19;\n    this.options.backgroundColor = \"#e2e2e2\";\n    this.options.foregroundColor = \"#fafafa\";\n    this.foregroundFluidLayer.fillStyle = \"#16E1FF\";\n    this.foregroundFluidLayer.angularSpeed = 30;\n    this.foregroundFluidLayer.maxAmplitude = 5;\n    this.foregroundFluidLayer.frequency = 30;\n    this.foregroundFluidLayer.horizontalSpeed = -20;\n    this.backgroundFluidLayer.fillStyle = \"#4F8FC6\";\n    this.backgroundFluidLayer.angularSpeed = 100;\n    this.backgroundFluidLayer.maxAmplitude = 3;\n    this.backgroundFluidLayer.frequency = 22;\n    this.backgroundFluidLayer.horizontalSpeed = 20;\n    this.init();\n    this.setPercentage(90);\n    this.drawMeterBackground(); // this.setupCanvas();\n    // this.draw();\n    // this.drawFluid(this.dt);\n    // this.drawFluidLayer(this.foregroundFluidLayer, this.dt)\n    // this.drawFluidMask(this.foregroundFluidLayer)\n  },\n  created: function created() {},\n  props: {\n    percintage: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        drawShadow: true,\n        drawText: true,\n        drawPercentageSign: true,\n        drawBubbles: true,\n        fontSize: \"70px\",\n        fontFamily: \"Arial\",\n        fontFillStyle: \"white\",\n        size: 300,\n        borderWidth: 25,\n        backgroundColor: \"#e2e2e2\",\n        foregroundColor: \"#fafafa\"\n      },\n      context: null,\n      targetContainer: null,\n      time: null,\n      dt: null,\n      currentFillPercentage: 0,\n      fillPercentage: 0,\n      //#region fluid context values\n      foregroundFluidLayer: {\n        fillStyle: \"purple\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 0,\n        maxAmplitude: 9,\n        frequency: 30,\n        horizontalSpeed: -150,\n        initialHeight: 0\n      },\n      backgroundFluidLayer: {\n        fillStyle: \"pink\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 140,\n        maxAmplitude: 12,\n        frequency: 40,\n        horizontalSpeed: 150,\n        initialHeight: 0\n      }\n    };\n  },\n  methods: {\n    setupCanvas: function setupCanvas() {\n      var canvas = document.createElement('canvas');\n      canvas.width = this.options.size;\n      canvas.height = this.options.size;\n      canvas.imageSmoothingEnabled = true;\n      this.context = canvas.getContext(\"2d\");\n      this.targetContainer.appendChild(canvas); // shadow is not required  to be on the draw loop\n      //#region shadow\n\n      if (this.options.drawShadow) {\n        this.context.save();\n        this.context.beginPath();\n        this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\n        this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.fill();\n        this.context.restore();\n      } //#endregion\n\n    },\n    draw: function draw() {\n      var now = new Date().getTime();\n      this.dt = (now - (this.time || now)) / 1000;\n      this.time = now; // requestAnimationFrame(draw);\n\n      this.context.clearRect(0, 0, this.options.size, this.options.size);\n      this.drawMeterBackground();\n      this.drawFluid(this.dt);\n\n      if (this.options.drawText) {\n        this.drawText();\n      }\n\n      this.drawMeterForeground();\n    },\n    drawMeterBackground: function drawMeterBackground() {\n      this.context.save();\n      this.context.fillStyle = this.options.backgroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.fill();\n      this.context.restore();\n    },\n    drawMeterForeground: function drawMeterForeground() {\n      this.context.save();\n      this.context.lineWidth = this.options.borderWidth;\n      this.context.strokeStyle = this.options.foregroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.stroke();\n      this.context.restore();\n    },\n    drawFluid: function drawFluid(dt) {\n      this.context.save();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, Math.PI * 2);\n      this.context.clip();\n      this.drawFluidLayer(this.backgroundFluidLayer, this.dt);\n      this.drawFluidLayer(this.foregroundFluidLayer, this.dt);\n      this.context.restore();\n    },\n    drawFluidLayer: function drawFluidLayer(layer, dt) {\n      // calculate wave angle\n      if (layer.angularSpeed > 0) {\n        layer.angle += layer.angularSpeed * dt;\n        layer.angle = layer.angle < 0 ? layer.angle + 360 : layer.angle;\n      } // calculate horizontal position\n\n\n      layer.horizontalPosition += layer.horizontalSpeed * dt;\n\n      if (layer.horizontalSpeed > 0) {\n        layer.horizontalPosition > Math.pow(2, 53) ? 0 : layer.horizontalPosition;\n      } else if (layer.horizontalPosition < 0) {\n        layer.horizontalPosition < -1 * Math.pow(2, 53) ? 0 : layer.horizontalPosition;\n      }\n\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      var meterBottom = this.options.size - (this.options.size - this.getMeterRadius()) / 2 - this.options.borderWidth;\n      var fluidAmount = this.currentFillPercentage * (this.getMeterRadius() - this.options.borderWidth * 2) / 100;\n\n      if (this.currentFillPercentage < this.fillPercentage) {\n        this.currentFillPercentage += 15 * dt;\n      } else if (this.currentFillPercentage > this.fillPercentage) {\n        this.currentFillPercentage -= 15 * dt;\n      }\n\n      layer.initialHeight = meterBottom - fluidAmount;\n      this.context.save();\n      this.context.beginPath();\n      this.context.lineTo(0, layer.initialHeight);\n\n      while (x < this.options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        this.context.lineTo(x, y);\n        x++;\n      }\n\n      this.context.lineTo(x, this.options.size);\n      this.context.lineTo(0, this.options.size);\n      this.context.closePath();\n      this.context.fillStyle = layer.fillStyle;\n      this.context.fill();\n      this.context.restore();\n    },\n    drawFluidMask: function drawFluidMask(layer) {\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      this.context.beginPath();\n      this.context.lineTo(0, layer.initialHeight);\n\n      while (x < this.options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        this.context.lineTo(x, y);\n        x++;\n      }\n\n      this.context.lineTo(x, this.options.size);\n      this.context.lineTo(0, this.options.size);\n      this.context.closePath();\n      this.context.clip();\n    },\n    // drawBubblesLayer(this.dt) {\n    //   this.context.save();\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\n    //     var bubble = bubblesLayer.bubbles[i];\n    //     this.context.beginPath();\n    //     this.context.strokeStyle = 'white';\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\n    //     this.context.stroke();\n    //     this.context.closePath();\n    //     var currentSpeed = bubblesLayer.current * this.dt;\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\n    //     bubble.y = bubble.y - bubble.velY * this.dt;\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\n    //     // determine if current bubble is outside the safe area\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\n    //     if (bubble.y <= meterBottom - fluidAmount) {\n    //       bubblesLayer.reset(bubble);\n    //     }\n    //   }\n    //   this.context.restore();\n    // },\n    drawText: function drawText() {\n      var text = this.options.drawPercentageSign ? this.currentFillPercentage.toFixed(0) + \"%\" : this.currentFillPercentage.toFixed(0);\n      this.context.save();\n      this.context.font = this.getFontSize();\n      this.context.fillStyle = this.options.fontFillStyle;\n      this.context.textAlign = \"center\";\n      this.context.textBaseline = 'middle';\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\";\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\n      this.context.restore();\n    },\n    //#region helper methods\n    clamp: function clamp(number, min, max) {\n      return Math.min(Math.max(number, min), max);\n    },\n    getMeterRadius: function getMeterRadius() {\n      return this.options.size * 0.9;\n    },\n    random: function random(min, max) {\n      var delta = max - min;\n      return max === min ? min : Math.random() * delta + min;\n    },\n    getFontSize: function getFontSize() {\n      return this.options.fontSize + \" \" + this.options.fontFamily;\n    },\n    init: function init(env) {\n      if (!this.targetContainer) throw \"empty or invalid container\"; // this.targetContainer = this.targetContainer;\n\n      this.fillPercentage = this.clamp(this.fillPercentage, 0, 100);\n\n      if (this.options) {\n        this.options.drawShadow = this.options.drawShadow === false ? false : true; // this.options.size = this.options.size;\n\n        this.options.drawBubbles = this.options.drawBubbles === false ? false : true;\n        this.options.borderWidth = this.options.borderWidth || this.options.borderWidth;\n        this.options.foregroundFluidColor = this.options.foregroundFluidColor || this.options.foregroundFluidColor;\n        this.options.backgroundFluidColor = this.options.backgroundFluidColor || this.options.backgroundFluidColor;\n        this.options.backgroundColor = this.options.backgroundColor || this.options.backgroundColor;\n        this.options.foregroundColor = this.options.foregroundColor || this.options.foregroundColor;\n        this.options.drawText = this.options.drawText === false ? false : true;\n        this.options.drawPercentageSign = this.options.drawPercentageSign === false ? false : true;\n        this.options.fontSize = this.options.fontSize || this.options.fontSize;\n        this.options.fontFamily = this.options.fontFamily || this.options.fontFamily;\n        this.options.fontFillStyle = this.options.fontFillStyle || this.options.fontFillStyle; // fluid settings\n\n        if (this.options.foregroundFluidLayer) {\n          console.log(\"h\");\n          this.foregroundFluidLayer.fillStyle = this.options.foregroundFluidLayer.fillStyle || this.foregroundFluidLayer.fillStyle;\n          this.foregroundFluidLayer.angularSpeed = this.options.foregroundFluidLayer.angularSpeed || this.foregroundFluidLayer.angularSpeed;\n          this.foregroundFluidLayer.maxAmplitude = this.options.foregroundFluidLayer.maxAmplitude || this.foregroundFluidLayer.maxAmplitude;\n          this.foregroundFluidLayer.frequency = this.options.foregroundFluidLayer.frequency || this.foregroundFluidLayer.frequency;\n          this.foregroundFluidLayer.horizontalSpeed = this.options.foregroundFluidLayer.horizontalSpeed || this.foregroundFluidLayer.horizontalSpeed;\n        }\n\n        if (this.options.backgroundFluidLayer) {\n          this.backgroundFluidLayer.fillStyle = this.options.backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\n          this.backgroundFluidLayer.angularSpeed = this.options.backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\n          this.backgroundFluidLayer.maxAmplitude = this.options.backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\n          this.backgroundFluidLayer.frequency = this.options.backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\n          this.backgroundFluidLayer.horizontalSpeed = this.options.backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\n        }\n      } // bubblesLayer.init();\n\n\n      this.setupCanvas();\n      this.draw();\n    },\n    setPercentage: function setPercentage(percentage) {\n      this.fillPercentage = this.clamp(percentage, 0, 100);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","mounted","targetContainer","document","getElementById","fillPercentage","options","fontSize","drawPercentageSign","drawBubbles","size","borderWidth","backgroundColor","foregroundColor","foregroundFluidLayer","fillStyle","angularSpeed","maxAmplitude","frequency","horizontalSpeed","backgroundFluidLayer","init","setPercentage","drawMeterBackground","created","props","percintage","required","data","drawShadow","drawText","fontFamily","fontFillStyle","context","time","dt","currentFillPercentage","angle","horizontalPosition","initialHeight","methods","setupCanvas","canvas","createElement","width","height","imageSmoothingEnabled","getContext","appendChild","save","beginPath","filter","arc","getMeterRadius","Math","PI","closePath","fill","restore","draw","now","Date","getTime","clearRect","drawFluid","drawMeterForeground","lineWidth","strokeStyle","stroke","clip","drawFluidLayer","layer","pow","x","y","amplitude","sin","meterBottom","fluidAmount","lineTo","drawFluidMask","text","toFixed","font","getFontSize","textAlign","textBaseline","fillText","clamp","number","min","max","random","delta","env","foregroundFluidColor","backgroundFluidColor","console","log","percentage"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\chart.vue"],"sourcesContent":["<template>\r\n  <div class=\"col  text-center\">\r\n    <div id=\"fluidDiv\"></div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Chart\",\r\n  mounted() {\r\n    this.targetContainer = document.getElementById(\"fluidDiv\");\r\n    this.fillPercentage = 90;\r\n    this.options.fontSize = \"30px\";\r\n    this.options.drawPercentageSign = true;\r\n    this.options.drawBubbles = false;\r\n    this.options.size = 300;\r\n    this.options.borderWidth = 19;\r\n    this.options.backgroundColor = \"#e2e2e2\";\r\n    this.options.foregroundColor = \"#fafafa\";\r\n\r\n    this.foregroundFluidLayer.fillStyle = \"#16E1FF\";\r\n    this.foregroundFluidLayer.angularSpeed = 30;\r\n    this.foregroundFluidLayer.maxAmplitude = 5;\r\n    this.foregroundFluidLayer.frequency = 30;\r\n    this.foregroundFluidLayer.horizontalSpeed = -20;\r\n    this.backgroundFluidLayer.fillStyle = \"#4F8FC6\";\r\n    this.backgroundFluidLayer.angularSpeed = 100;\r\n    this.backgroundFluidLayer.maxAmplitude = 3;\r\n    this.backgroundFluidLayer.frequency = 22;\r\n    this.backgroundFluidLayer.horizontalSpeed = 20;\r\nthis.init();\r\nthis.setPercentage(90)\r\nthis.drawMeterBackground()\r\n\r\n    // this.setupCanvas();\r\n    // this.draw();\r\n    // this.drawFluid(this.dt);\r\n    // this.drawFluidLayer(this.foregroundFluidLayer, this.dt)\r\n    // this.drawFluidMask(this.foregroundFluidLayer)\r\n\r\n  },\r\n  created() {\r\n  },\r\n  props: {\r\n    percintage: {\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      options: {\r\n        drawShadow: true,\r\n        drawText: true,\r\n        drawPercentageSign: true,\r\n        drawBubbles: true,\r\n        fontSize: \"70px\",\r\n        fontFamily: \"Arial\",\r\n        fontFillStyle: \"white\",\r\n        size: 300,\r\n        borderWidth: 25,\r\n        backgroundColor: \"#e2e2e2\",\r\n        foregroundColor: \"#fafafa\"\r\n      },\r\n      context: null,\r\n      targetContainer: null,\r\n      time: null,\r\n      dt: null,\r\n      currentFillPercentage: 0,\r\n      fillPercentage: 0,\r\n\r\n      //#region fluid context values\r\n      foregroundFluidLayer: {\r\n        fillStyle: \"purple\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 0,\r\n        maxAmplitude: 9,\r\n        frequency: 30,\r\n        horizontalSpeed: -150,\r\n        initialHeight: 0\r\n      },\r\n      backgroundFluidLayer: {\r\n        fillStyle: \"pink\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 140,\r\n        maxAmplitude: 12,\r\n        frequency: 40,\r\n        horizontalSpeed: 150,\r\n        initialHeight: 0\r\n      },\r\n\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    setupCanvas() {\r\n      var canvas = document.createElement('canvas');\r\n      canvas.width = this.options.size;\r\n      canvas.height = this.options.size;\r\n      canvas.imageSmoothingEnabled = true;\r\n      this.context = canvas.getContext(\"2d\");\r\n      this.targetContainer.appendChild(canvas);\r\n\r\n      // shadow is not required  to be on the draw loop\r\n      //#region shadow\r\n      if (this.options.drawShadow) {\r\n        this.context.save();\r\n        this.context.beginPath();\r\n        this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\r\n        this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n        this.context.restore();\r\n      }\r\n      //#endregion\r\n    },\r\n    draw() {\r\n      var now = new Date().getTime();\r\n      this.dt = (now - (this.time || now)) / 1000;\r\n      this.time = now;\r\n      // requestAnimationFrame(draw);\r\n      this.context.clearRect(0, 0, this.options.size, this.options.size);\r\n      this.drawMeterBackground();\r\n      this.drawFluid(this.dt);\r\n      if (this.options.drawText) {\r\n        this.drawText();\r\n      }\r\n      this.drawMeterForeground();\r\n    },\r\n\r\n    drawMeterBackground() {\r\n      this.context.save();\r\n      this.context.fillStyle = this.options.backgroundColor;\r\n      this.context.beginPath();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\r\n      this.context.closePath();\r\n      this.context.fill();\r\n      this.context.restore();\r\n    },\r\n\r\n    drawMeterForeground() {\r\n      this.context.save();\r\n      this.context.lineWidth = this.options.borderWidth;\r\n      this.context.strokeStyle = this.options.foregroundColor;\r\n      this.context.beginPath();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\r\n      this.context.closePath();\r\n      this.context.stroke();\r\n      this.context.restore();\r\n    },\r\n    drawFluid(dt) {\r\n      this.context.save();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, Math.PI * 2);\r\n      this.context.clip();\r\n      this.drawFluidLayer(this.backgroundFluidLayer, this.dt);\r\n      this.drawFluidLayer(this.foregroundFluidLayer, this.dt);\r\n      this.context.restore();\r\n    },\r\n    drawFluidLayer(layer, dt) {\r\n      // calculate wave angle\r\n      if (layer.angularSpeed > 0) {\r\n        layer.angle += layer.angularSpeed * dt;\r\n        layer.angle = layer.angle < 0 ? layer.angle + 360 : layer.angle;\r\n      }\r\n\r\n      // calculate horizontal position\r\n      layer.horizontalPosition += layer.horizontalSpeed * dt;\r\n      if (layer.horizontalSpeed > 0) {\r\n        layer.horizontalPosition > Math.pow(2, 53) ? 0 : layer.horizontalPosition;\r\n      }\r\n      else if (layer.horizontalPosition < 0) {\r\n        layer.horizontalPosition < -1 * Math.pow(2, 53) ? 0 : layer.horizontalPosition;\r\n      }\r\n\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      var meterBottom = (this.options.size - (this.options.size - this.getMeterRadius()) / 2) - this.options.borderWidth;\r\n      var fluidAmount = this.currentFillPercentage * (this.getMeterRadius() - this.options.borderWidth * 2) / 100;\r\n\r\n      if (this.currentFillPercentage < this.fillPercentage) {\r\n        this.currentFillPercentage += 15 * dt;\r\n      } else if (this.currentFillPercentage > this.fillPercentage) {\r\n        this.currentFillPercentage -= 15 * dt;\r\n      }\r\n\r\n      layer.initialHeight = meterBottom - fluidAmount;\r\n\r\n      this.context.save();\r\n      this.context.beginPath();\r\n\r\n      this.context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        this.context.lineTo(x, y);\r\n        x++;\r\n      }\r\n\r\n      this.context.lineTo(x, this.options.size);\r\n      this.context.lineTo(0, this.options.size);\r\n      this.context.closePath();\r\n\r\n      this.context.fillStyle = layer.fillStyle;\r\n      this.context.fill();\r\n      this.context.restore();\r\n\r\n    },\r\n    drawFluidMask(layer) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      this.context.beginPath();\r\n\r\n      this.context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        this.context.lineTo(x, y);\r\n        x++;\r\n      }\r\n      this.context.lineTo(x, this.options.size);\r\n      this.context.lineTo(0, this.options.size);\r\n      this.context.closePath();\r\n      this.context.clip();\r\n    },\r\n    // drawBubblesLayer(this.dt) {\r\n    //   this.context.save();\r\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\r\n    //     var bubble = bubblesLayer.bubbles[i];\r\n\r\n    //     this.context.beginPath();\r\n    //     this.context.strokeStyle = 'white';\r\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\r\n    //     this.context.stroke();\r\n    //     this.context.closePath();\r\n\r\n    //     var currentSpeed = bubblesLayer.current * this.dt;\r\n\r\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\r\n    //     bubble.y = bubble.y - bubble.velY * this.dt;\r\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\r\n\r\n    //     // determine if current bubble is outside the safe area\r\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\r\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\r\n\r\n    //     if (bubble.y <= meterBottom - fluidAmount) {\r\n    //       bubblesLayer.reset(bubble);\r\n    //     }\r\n\r\n    //   }\r\n    //   this.context.restore();\r\n    // },\r\n    drawText() {\r\n\r\n      var text = this.options.drawPercentageSign ?\r\n        this.currentFillPercentage.toFixed(0) + \"%\" : this.currentFillPercentage.toFixed(0);\r\n\r\n      this.context.save();\r\n      this.context.font = this.getFontSize();\r\n      this.context.fillStyle = this.options.fontFillStyle;\r\n      this.context.textAlign = \"center\";\r\n      this.context.textBaseline = 'middle';\r\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\"\r\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\r\n      this.context.restore();\r\n    },\r\n    //#region helper methods\r\n    clamp(number, min, max) {\r\n      return Math.min(Math.max(number, min), max);\r\n    },\r\n    getMeterRadius() {\r\n      return this.options.size * 0.9;\r\n    },\r\n\r\n    random(min, max) {\r\n      var delta = max - min;\r\n      return max === min ? min : Math.random() * delta + min;\r\n    },\r\n\r\n    getFontSize() {\r\n      return this.options.fontSize + \" \" + this.options.fontFamily;\r\n    },\r\n    init(env) {\r\n    if (!this.targetContainer)\r\n      throw \"empty or invalid container\";\r\n\r\n    // this.targetContainer = this.targetContainer;\r\n    this.fillPercentage = this.clamp(this.fillPercentage, 0, 100);\r\n\r\n    if (this.options) {\r\n      this.options.drawShadow = this.options.drawShadow === false ? false : true;\r\n      // this.options.size = this.options.size;\r\n      this.options.drawBubbles = this.options.drawBubbles === false ? false : true;\r\n      this.options.borderWidth = this.options.borderWidth || this.options.borderWidth;\r\n      this.options.foregroundFluidColor = this.options.foregroundFluidColor || this.options.foregroundFluidColor;\r\n      this.options.backgroundFluidColor = this.options.backgroundFluidColor || this.options.backgroundFluidColor;\r\n      this.options.backgroundColor = this.options.backgroundColor || this.options.backgroundColor;\r\n      this.options.foregroundColor = this.options.foregroundColor || this.options.foregroundColor;\r\n\r\n      this.options.drawText = this.options.drawText === false ? false : true;\r\n      this.options.drawPercentageSign = this.options.drawPercentageSign === false ? false : true;\r\n      this.options.fontSize = this.options.fontSize || this.options.fontSize;\r\n      this.options.fontFamily = this.options.fontFamily || this.options.fontFamily;\r\n      this.options.fontFillStyle = this.options.fontFillStyle || this.options.fontFillStyle;\r\n      // fluid settings\r\n\r\n      if (this.options.foregroundFluidLayer) {\r\n        console.log(\"h\")\r\n        this.foregroundFluidLayer.fillStyle = this.options.foregroundFluidLayer.fillStyle || this.foregroundFluidLayer.fillStyle;\r\n        this.foregroundFluidLayer.angularSpeed = this.options.foregroundFluidLayer.angularSpeed || this.foregroundFluidLayer.angularSpeed;\r\n        this.foregroundFluidLayer.maxAmplitude = this.options.foregroundFluidLayer.maxAmplitude || this.foregroundFluidLayer.maxAmplitude;\r\n        this.foregroundFluidLayer.frequency = this.options.foregroundFluidLayer.frequency || this.foregroundFluidLayer.frequency;\r\n        this.foregroundFluidLayer.horizontalSpeed = this.options.foregroundFluidLayer.horizontalSpeed || this.foregroundFluidLayer.horizontalSpeed;\r\n      }\r\n\r\n      if (this.options.backgroundFluidLayer) {\r\n        this.backgroundFluidLayer.fillStyle = this.options.backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\r\n        this.backgroundFluidLayer.angularSpeed = this.options.backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\r\n        this.backgroundFluidLayer.maxAmplitude = this.options.backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\r\n        this.backgroundFluidLayer.frequency = this.options.backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\r\n        this.backgroundFluidLayer.horizontalSpeed = this.options.backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\r\n      }\r\n    }\r\n    // bubblesLayer.init();\r\n    this.setupCanvas();\r\n    this.draw();\r\n  },\r\n    setPercentage(percentage) {\r\n      this.fillPercentage = this.clamp(percentage, 0, 100);\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}