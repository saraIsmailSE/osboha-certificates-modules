{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport questionServices from '../../api/questionServices';\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: \"UpdateQuestion\",\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return questionServices.getById(_this.$route.params.id);\n\n            case 2:\n              _this.questionToupdate = _context.sent;\n              _this.book = _this.questionToupdate.user_book.book;\n              _this.questionForm.question = _this.questionToupdate.question;\n              _this.questionForm.starting_page = _this.questionToupdate.starting_page;\n              _this.questionForm.ending_page = _this.questionToupdate.ending_page;\n              _this.questionForm.quotes = _this.questionToupdate.quotation;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  components: {},\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data: function data() {\n    return {\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: this.$route.params.id,\n        quotes: [{\n          text: ''\n        }]\n      },\n      book: []\n    };\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        question: {\n          required: required\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(2)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAkFA,OAAOA,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,eAAe;EACbC,IAAI,EAAE,gBADO;EAEPC,OAFO,qBAEG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACgBL,gBAAgB,CAACM,OAAjB,CAAyB,KAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,EAA5C,CADhB;;YAAA;cACd,KAAI,CAACC,gBADS;cAEd,KAAI,CAACC,IAAL,GAAU,KAAI,CAACD,gBAAL,CAAsBE,SAAtB,CAAgCD,IAA1C;cACA,KAAI,CAACE,YAAL,CAAkBC,QAAlB,GAA2B,KAAI,CAACJ,gBAAL,CAAsBI,QAAjD;cACA,KAAI,CAACD,YAAL,CAAkBE,aAAlB,GAAgC,KAAI,CAACL,gBAAL,CAAsBK,aAAtD;cACA,KAAI,CAACF,YAAL,CAAkBG,WAAlB,GAA8B,KAAI,CAACN,gBAAL,CAAsBM,WAApD;cACA,KAAI,CAACH,YAAL,CAAkBI,MAAlB,GAAyB,KAAI,CAACP,gBAAL,CAAsBQ,SAA/C;;YANc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAOf,CATY;EAUbC,UAAU,EAAE,EAVC;EAYbC,KAZa,mBAYL;IACN,OAAO;MAAEC,EAAE,EAAEpB,YAAY;IAAlB,CAAP;EACD,CAdY;EAebqB,IAfa,kBAeN;IACL,OAAO;MACLT,YAAY,EAAE;QACZC,QAAQ,EAAE,EADE;QAEZC,aAAa,EAAE,EAFH;QAGZC,WAAW,EAAE,EAHD;QAIZO,YAAY,EAAE,KAAKhB,MAAL,CAAYC,MAAZ,CAAmBC,EAJrB;QAKZQ,MAAM,EAAE,CACN;UAAEO,IAAI,EAAE;QAAR,CADM;MALI,CADT;MASFb,IAAI,EAAE;IATJ,CAAP;EAWD,CA3BY;EA4Bbc,WA5Ba,yBA4BC;IACZ,OAAO;MACLZ,YAAY,EAAE;QACZC,QAAQ,EAAE;UACRZ,QAAO,EAAPA;QADQ,CADE;QAGTa,aAAa,EAAE;UAChBb,QAAO,EAAPA;QADgB,CAHN;QAKTc,WAAW,EAAE;UACdd,QAAO,EAAPA;QADc,CALJ;QAOTe,MAAM,EAAE;UACTf,QAAQ,EAARA,QADS;UAETC,SAAS,EAAEA,SAAS,CAAC,CAAD,CAFX;UAGTuB,KAAK,EAAE;YACLF,IAAI,EAAE;cACJrB,SAAS,EAAEA,SAAS,CAAC,CAAD;YADhB;UADD;QAHE;MAPC;IADT,CAAP;EAmBD,CAhDY;EAiDbwB,OAAO,EAAE;IACPC,QADO,oBACEC,KADF,EACSC,SADT,EACoB;MACzBA,SAAS,CAACC,IAAV,CAAe;QAAEP,IAAI,EAAE;MAAR,CAAf;IACD,CAHM;IAIPQ,WAJO,uBAIKC,KAJL,EAIYH,SAJZ,EAIuB;MAC5BA,SAAS,CAACI,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;IACD;EANM;AAjDI,CAAf","names":["questionServices","useVuelidate","required","minLength","name","created","getById","$route","params","id","questionToupdate","book","user_book","questionForm","question","starting_page","ending_page","quotes","quotation","components","setup","v$","data","user_book_id","text","validations","$each","methods","addField","value","fieldType","push","removeField","index","splice"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Questions\\update.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-sm-12 mt-3 text-center\">\r\n    <iq-card class=\"iq-card\">\r\n      <div class=\"iq-card-header-toolbar d-flex align-items-center mx-auto\">\r\n        <h4 class=\"text-center mt-3 mb-3\">\r\n          اعادة تعيين كلمة المرور\r\n        </h4>\r\n      </div>\r\n      <div class=\"iq-card-body p-0\">\r\n        <div class=\"image-block text-center\">\r\n          <img src=\"@/assets/images/forgot-password.png\" class=\"img-fluid rounded w-25\" alt=\"blog-img\">\r\n        </div>\r\n\r\n        <div class=\"d-flex align-items-center mt-3\">\r\n          <form @submit.prevent=\"submitQuestionForm\" class=\"post-text ml-3 w-100 row\">\r\n            <div class=\"form-group col-6\">\r\n              <select v-model=\"v$.questionForm.starting_page.$model\" class=\"form-select\" data-trigger\r\n                name=\"choices-single-default\" id=\"choices-single-default\">\r\n                <option value=\"\">اختر صفحة البداية</option>\r\n                <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                  {{ i }}\r\n                </option>\r\n              </select>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.starting_page.$error\">الرجاء قم بادخال صفحة\r\n                البداية</small>\r\n            </div>\r\n            <div class=\"form-group col-6\">\r\n\r\n              <select class=\"form-select\" v-model=\"v$.questionForm.ending_page.$model\" data-trigger\r\n                name=\"choices-single-default\" id=\"choices-single-default\">\r\n                <option value=\"\">اختر صفحة النهاية</option>\r\n                <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                  {{ i }}\r\n                </option>\r\n              </select>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.ending_page.$error\">الرجاء قم بادخال صفحة\r\n                النهاية</small>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \" class=\"rounded form-control\" id=\"bookQuestion\"\r\n                v-model=\"v$.questionForm.question.$model\"></textarea>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال السؤال </small>\r\n            </div>\r\n            <div>\r\n              <h4>كيف أحدد الاقتباسات</h4>\r\n              <hr>\r\n              <div class=\"col-12\">\r\n                <p>\r\n                  يعتبر الاقتباس من المحسنات اللفظية، وهو حفظك للأقوال المأثورة عن الشخصيات المعروفة وأقوالهم، وخلال\r\n                  الكتاب ستجد أن هناك جمل مهمة جدا تلخص أفكارًا أساسية في الكتاب. قم بتحديد أهم الاقتباسات داخل هذا\r\n                  الكتاب لتقوم بحفظها فهي تساعدك على إجابة الأسئلة المعرفية وتعينك على الاستشهاد بها لإثبات وجهة نظر\r\n                  الكاتب </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n\r\n              <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \" v-for=\"(v,index) in questionForm.quotes\" :key=\"index\"\r\n                class=\"rounded form-control mt-2\" id=\"bookQuote\" v-model=\"v.text\">\r\n                </textarea>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال اقتباس واحد على الاقل\r\n              </small>\r\n              <hr>\r\n              <a class=\"btn btn-primary rounded-pill mb-3 me-1\" @click=\"addField(textarea, questionForm.quotes)\">\r\n                اضافة اقتباس\r\n              </a>\r\n              <a class=\"btn btn-danger rounded-pill mb-3 me-1\"\r\n                v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n                @click=\"removeField(index, questionForm.quotes)\">\r\n                حذف اقتباس\r\n              </a>\r\n\r\n\r\n            </div>\r\n            <input type=\"submit\" value=\"أضافة\" href=\"javascript:void(0);\" class=\"btn btn-primary d-block mt-3\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </iq-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport questionServices from '../../api/questionServices';\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  async created() {\r\n    this.questionToupdate = await questionServices.getById(this.$route.params.id)\r\n    this.book=this.questionToupdate.user_book.book\r\n    this.questionForm.question=this.questionToupdate.question\r\n    this.questionForm.starting_page=this.questionToupdate.starting_page\r\n    this.questionForm.ending_page=this.questionToupdate.ending_page\r\n    this.questionForm.quotes=this.questionToupdate.quotation\r\n  },\r\n  components: {\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  data() {\r\n    return {\r\n      questionForm: {\r\n        question: '',\r\n        starting_page: \"\",\r\n        ending_page: \"\",\r\n        user_book_id: this.$route.params.id,\r\n        quotes: [\r\n          { text: '' }\r\n        ]\r\n      }, book: []\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      questionForm: {\r\n        question: {\r\n          required\r\n        }, starting_page: {\r\n          required\r\n        }, ending_page: {\r\n          required\r\n        }, quotes: {\r\n          required,\r\n          minLength: minLength(1),\r\n          $each: {\r\n            text: {\r\n              minLength: minLength(2)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    addField(value, fieldType) {\r\n      fieldType.push({ text: \"\" });\r\n    },\r\n    removeField(index, fieldType) {\r\n      fieldType.splice(index, 1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}