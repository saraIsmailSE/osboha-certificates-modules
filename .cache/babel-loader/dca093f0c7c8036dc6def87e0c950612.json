{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\nimport ListQuestion from \"../../components/Questions/ListQuestion.vue\";\nimport questionServices from '../../api/questionServices';\nexport default {\n  name: \"Questions\",\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQuestions();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {\n    ListQuestion: ListQuestion\n  },\n  data: function data() {\n    return {\n      auditable: false,\n      book: null,\n      user_book: null,\n      status: \"\",\n      pageError: '',\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: null,\n        quotes: [{\n          text: ''\n        }]\n      },\n      questions: [],\n      show: \"\",\n      current: 1,\n      insertSuccessful: false\n    };\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        question: {\n          required: required,\n          minLength: minLength(100),\n          maxLength: maxLength(250)\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required,\n          valdiatePages: this.validatePages\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(250)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    getQuestions: function getQuestions() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return questionServices.getByBook(_this2.$route.params.id);\n\n              case 2:\n                response = _context2.sent;\n                _this2.book = response.user_book.book;\n                _this2.questions = response.questions;\n                _this2.user_book = response.user_book;\n                _this2.questionForm.user_book_id = response.user_book.id;\n                _this2.status = _this2.user_book.status;\n                _this2.auditable = _this2.questions.some(function (element) {\n                  if (element.status === \"retard\" || element.status === null) {\n                    return true;\n                  }\n\n                  return false;\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    submitQuestionForm: function submitQuestionForm() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var question;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this3.v$.$touch();\n\n                if (_this3.v$.questionForm.$invalid) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _this3.insertSuccessful = false;\n                _context3.next = 5;\n                return questionServices.addQuestion(_this3.questionForm);\n\n              case 5:\n                question = _context3.sent;\n                _this3.questionForm.question = \"\";\n                _this3.questionForm.starting_page = \"\";\n                _this3.questionForm.ending_page = \"\";\n                _this3.questionForm.quotes = [{\n                  text: ''\n                }];\n\n                _this3.v$.questionForm.$reset();\n\n                _this3.questions.push(question);\n\n                _this3.auditable = true;\n                _this3.insertSuccessful = true;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    validatePages: function validatePages() {\n      var error = parseInt(this.questionForm.starting_page) < parseInt(this.questionForm.ending_page);\n      if (!error) this.pageError = 'يجب ان تكون صفحة البداية اقل من صفحة النهاية';else this.pageError = '';\n      return error;\n    },\n    reviewQuestions: function reviewQuestions() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var swalWithBootstrapButtons;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                swalWithBootstrapButtons = _this4.$swal.mixin({\n                  customClass: {\n                    confirmButton: 'btn btn-primary btn-lg',\n                    cancelButton: 'btn btn-outline-primary btn-lg ms-2'\n                  },\n                  buttonsStyling: false\n                });\n                swalWithBootstrapButtons.fire({\n                  title: 'هل أنت متأكد؟',\n                  text: \"في حال الاعتماد لن يمكنك اضافة سؤال جديد أو التعديل على الأسئلة التي كتبتها \",\n                  icon: 'warning',\n                  showCancelButton: true,\n                  confirmButtonText: 'نعم قم بالاعتماد ',\n                  cancelButtonText: 'تراجع  ',\n                  showClass: {\n                    popup: 'animate__animated animate__zoomIn'\n                  },\n                  hideClass: {\n                    popup: 'animate__animated animate__zoomOut'\n                  }\n                }).then(function (willDelete) {\n                  if (willDelete.isConfirmed) {\n                    questionServices.reviewQuestion(_this4.user_book.id).then(function (response) {\n                      swalWithBootstrapButtons.fire({\n                        title: 'تم الارسال',\n                        text: 'تم اعتماد الأسئلة',\n                        icon: 'success',\n                        showClass: {\n                          popup: 'animate__animated animate__zoomIn'\n                        },\n                        hideClass: {\n                          popup: 'animate__animated animate__zoomOut'\n                        }\n                      });\n                      _this4.auditable = false;\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    },\n    back: function back() {\n      this.$router.push({\n        path: \"/achievement/\".concat(this.$route.params.id, \"/steps\"),\n        params: {\n          bookId: this.$route.params.id\n        }\n      });\n    },\n    changeTab: function changeTab(tab) {\n      this.current = tab;\n      window.scrollTo({\n        behavior: 'smooth'\n      });\n    },\n    checkActive: function checkActive(item, active) {\n      var className = '';\n\n      if (this.current > item) {\n        className = 'active';\n      }\n\n      if (this.current > active) {\n        className = className + ' done';\n      }\n\n      return className;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["useVuelidate","required","minLength","maxLength","ListQuestion","questionServices","name","created","getQuestions","setup","v$","components","data","auditable","book","user_book","status","pageError","questionForm","question","starting_page","ending_page","user_book_id","quotes","text","questions","show","current","insertSuccessful","validations","valdiatePages","validatePages","$each","methods","getByBook","$route","params","id","response","some","element","submitQuestionForm","$touch","$invalid","addQuestion","$reset","push","error","parseInt","reviewQuestions","swalWithBootstrapButtons","$swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","icon","showCancelButton","confirmButtonText","cancelButtonText","showClass","popup","hideClass","then","willDelete","isConfirmed","reviewQuestion","console","log","addField","value","fieldType","removeField","index","splice","back","$router","path","bookId","changeTab","tab","window","scrollTo","behavior","checkActive","item","active","className"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Achievement\\Questions.vue"],"sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <iq-card>\r\n                <div class=\"iq-card-body profile-page p-0\">\r\n                    <div class=\"profile-header\">\r\n                        <div class=\"cover-container\">\r\n                            <img src=\"../../assets/images/book-banner.png\" alt=\"profile-bg\" class=\"rounded img-fluid\" />\r\n                        </div>\r\n                        <div class=\"user-detail text-center mb-3\">\r\n                            <div class=\"profile-img\">\r\n                                <img src=\"../../assets/images/reader.png\" alt=\"profile-img\"\r\n                                    class=\"avatar-130 img-fluid\" />\r\n                            </div>\r\n                            <div class=\"profile-detail mt-1\">\r\n                                <br />\r\n                                <h3 class=\"\" v-if=\"book\">{{book.book_name}} - قسم الأسئلة العامة</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n            <iq-card class=\"iq-card\">\r\n                <div class=\"iq-card-body p-0\">\r\n                    <div class=\"user-tabing\">\r\n                        <tab-nav :pills=\"true\" id=\"pills-tab\"\r\n                            class=\"nav nav-pills d-flex align-items-center justify-content-center profile-feed-items p-0 m-0\">\r\n                            <tab-nav-items class=\"w-50 p-0\" :active=\"true\" id=\"pills-feed-tab\"\r\n                                href=\"#questions_container\" ariaControls=\"pills-home\" role=\"tab\" :ariaSelected=\"true\"\r\n                                title=\"المرحلة الثالثة - الاسئلة المعرفية\" />\r\n                            <tab-nav-items class=\"w-50 p-0\" id=\"return\" title=\"صفحة الانجاز\" @click=\"back()\" />\r\n\r\n                        </tab-nav>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"tab-content\">\r\n                <!-- START QUESTIONS -->\r\n                <tab-content-item :active=\"true\" id=\"questions_container\" aria-labelled-by=\"pills-feed-tab\">\r\n                    <div class=\"iq-card-body p-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div id=\"post-modal-data\" class=\"iq-card\">\r\n                                    <div>\r\n                                        <iq-card id=\"post-modal-data\"\r\n                                            body-class=\"iq-card iq-card-block iq-card-stretch iq-card-height\">\r\n                                            <template v-slot:headerTitle>\r\n                                                <h4 class=\"card-title\">إضافة الأسئلة والاقتباسات</h4>\r\n                                            </template>\r\n                                            <template v-slot:body>\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <div v-if=\"(questions.length < 12 && auditable) || questions.length==0\"\r\n                                                        class=\"d-flex align-items-center mt-3 w-100\">\r\n                                                        <form v-if=\"book\" @submit.prevent=\"submitQuestionForm\"\r\n                                                            class=\"post-text ml-3 w-100 row\">\r\n                                                            <div class=\"form-group col-6\">\r\n                                                                <select v-model=\"v$.questionForm.starting_page.$model\"\r\n                                                                    class=\"form-select\" data-trigger\r\n                                                                    name=\"choices-single-default\"\r\n                                                                    id=\"choices-single-default\">\r\n                                                                    <option value=\"\">اختر صفحة البداية</option>\r\n                                                                    <option v-for=\"(i, index) in book.pages\"\r\n                                                                        :key=\"index\" :value=\"i\">\r\n                                                                        {{ i }}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                                <small style=\"color: red\"\r\n                                                                    v-if=\"v$.questionForm.starting_page.$error\">{{pageError\r\n                                                                    ? pageError\r\n                                                                    :'الرجاء قم بادخال صفحة البداية'}}</small>\r\n                                                            </div>\r\n                                                            <div class=\"form-group col-6\">\r\n                                                                <select class=\"form-select\"\r\n                                                                    v-model=\"v$.questionForm.ending_page.$model\"\r\n                                                                    data-trigger name=\"choices-single-default\"\r\n                                                                    id=\"choices-single-default\">\r\n                                                                    <option value=\"\">اختر صفحة النهاية</option>\r\n                                                                    <option v-for=\"(i, index) in book.pages\"\r\n                                                                        :key=\"index\" :value=\"i\">\r\n                                                                        {{ i }}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                                <small style=\"color: red\"\r\n                                                                    v-if=\"v$.questionForm.ending_page.$error\">{{pageError\r\n                                                                    ? pageError :` الرجاء قم بادخال صفحة\r\n                                                                    النهاية`}}</small>\r\n                                                            </div>\r\n                                                            <div class=\"form-group\">\r\n                                                                <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \"\r\n                                                                    class=\"rounded form-control\" id=\"bookQuestion\"\r\n                                                                    v-model=\"v$.questionForm.question.$model\"></textarea>\r\n                                                                <small style=\"color:red;\"\r\n                                                                    v-if=\"v$.questionForm.question.$error\">\r\n                                                                    لطفًا قم بكتابة سؤال عدد حروفه بين 100 و 250\r\n                                                                </small>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                            </div>\r\n                                                            <div class=\"form-group\">\r\n                                                                <h4 class=\"card-title\">الاقتباسات </h4>\r\n                                                                <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \"\r\n                                                                    v-for=\"(v,index) in questionForm.quotes\"\r\n                                                                    :key=\"index\" class=\"rounded form-control mt-2\"\r\n                                                                    id=\"bookQuote\" v-model=\"v.text\">\r\n                                                                </textarea>\r\n                                                                <small style=\"color:red;\"\r\n                                                                    v-if=\"v$.questionForm.quotes.$error\">\r\n                                                                    قم بادخال اقتباس واحد على الاقل عدد حروفه لا يزيد عن\r\n                                                                    250\r\n                                                                </small>\r\n                                                                <hr>\r\n                                                                <a class=\"btn btn-primary rounded-pill mb-3 me-1\"\r\n                                                                    @click=\"addField(textarea, questionForm.quotes)\">\r\n                                                                    اضافة اقتباس\r\n                                                                </a>\r\n                                                                <a class=\"btn btn-danger rounded-pill mb-3 me-1\"\r\n                                                                    v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n                                                                    @click=\"removeField(index, questionForm.quotes)\">\r\n                                                                    حذف اقتباس\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <input type=\"submit\" value=\"أضافة\"\r\n                                                                href=\"javascript:void(0);\"\r\n                                                                class=\"btn btn-primary d-block mt-3\" />\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <hr />\r\n                                            </template>\r\n                                        </iq-card>\r\n                                    </div>\r\n                                </div>\r\n                                <alert v-if=\"insertSuccessful\" variant=\"primary\"\r\n                                    className=\"d-flex align-items-center text-center\">\r\n                                    <template v-slot>\r\n                                        <div>\r\n                                            <h5 class=\"card-title\">\r\n                                                تمت الاضافة بنجاح\r\n                                            </h5>\r\n                                        </div>\r\n                                    </template>\r\n                                </alert>\r\n\r\n                                <iq-card v-if=\"questions.length>0\">\r\n                                    <template v-slot:headerTitle>\r\n                                        <h4 class=\"card-title\">الأسئلة</h4>\r\n                                    </template>\r\n                                    <template v-slot:body>\r\n                                        <form id=\"form-wizard1\" class=\"text-center mt-3\">\r\n                                            <ul id=\"top-tab-list\" class=\"p-0 row list-inline\">\r\n                                                <li v-for=\"(question,index) in  questions\" :key=\"index\"\r\n                                                    :class=\"checkActive(index, index+1)\" class=\"col-2 mb-2 text-start\"\r\n                                                    @click=\"changeTab(index+1)\" id=\"account\">\r\n                                                    <a href=\"javascript:void(0);\">\r\n                                                        <span> {{ index+1 }}</span>\r\n                                                    </a>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <!-- fieldsets -->\r\n                                            <fieldset v-for=\"(question,index) in  questions\" :key=\"index\"\r\n                                                :class=\"current == index+1 ? 'd-block' : 'd-none'\">\r\n                                                <ListQuestion :question=\"question\" :index='index' :book=\"book\"\r\n                                                    :user_book=\"user_book\" />\r\n                                            </fieldset>\r\n                                        </form>\r\n                                    </template>\r\n                                </iq-card>\r\n\r\n                                <div class=\"col-lg-4\">\r\n                                    <iq-card v-if=\"questions.length >= 5 && auditable\">\r\n                                        <template v-slot:body>\r\n                                            <button class=\"btn btn-primary d-block w-100\" @click=\"reviewQuestions\">\r\n                                                اعتماد</button>\r\n                                        </template>\r\n                                    </iq-card>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tab-content-item>\r\n                <!-- END QUESTIONS -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template >\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\r\nimport ListQuestion from \"../../components/Questions/ListQuestion.vue\";\r\nimport questionServices from '../../api/questionServices'\r\n\r\nexport default {\r\n    name: \"Questions\",\r\n    async created() {\r\n        await this.getQuestions();\r\n    },\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n    components: {\r\n        ListQuestion,\r\n    },\r\n    data() {\r\n        return {\r\n            auditable: false,\r\n            book: null,\r\n            user_book: null,\r\n            status: \"\",\r\n            pageError: '',\r\n            questionForm: {\r\n                question: '',\r\n                starting_page: \"\",\r\n                ending_page: \"\",\r\n                user_book_id: null,\r\n                quotes: [\r\n                    { text: '' }\r\n                ]\r\n            },\r\n            questions: [],\r\n            show: \"\",\r\n            current: 1,\r\n            insertSuccessful: false\r\n        };\r\n    },\r\n    validations() {\r\n        return {\r\n            questionForm: {\r\n                question: {\r\n                    required,\r\n                    minLength: minLength(100),\r\n                    maxLength: maxLength(250)\r\n                }, starting_page: {\r\n                    required\r\n                },\r\n                ending_page: {\r\n                    required, valdiatePages: this.validatePages\r\n                }, quotes: {\r\n                    required,\r\n                    minLength: minLength(1),\r\n                    $each: {\r\n                        text: {\r\n                            minLength: minLength(250)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async getQuestions() {\r\n            const response = await questionServices.getByBook(this.$route.params.id);\r\n            this.book = response.user_book.book\r\n            this.questions = response.questions\r\n            this.user_book = response.user_book\r\n            this.questionForm.user_book_id = response.user_book.id;\r\n            this.status = this.user_book.status\r\n            this.auditable = this.questions.some((element) => {\r\n                if (element.status === \"retard\" || element.status === null) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n        },\r\n        async submitQuestionForm() {\r\n            this.v$.$touch();\r\n\r\n            if (!this.v$.questionForm.$invalid) {\r\n                this.insertSuccessful=false\r\n                const question = await questionServices.addQuestion(this.questionForm);\r\n                this.questionForm.question = \"\";\r\n                this.questionForm.starting_page = \"\";\r\n                this.questionForm.ending_page = \"\";\r\n                this.questionForm.quotes = [{ text: '' }];\r\n                this.v$.questionForm.$reset()\r\n                this.questions.push(question)\r\n                this.auditable = true\r\n                this.insertSuccessful = true\r\n\r\n            }\r\n        },\r\n        validatePages() {\r\n            const error = parseInt(this.questionForm.starting_page) < parseInt(this.questionForm.ending_page)\r\n            if (!error) this.pageError = 'يجب ان تكون صفحة البداية اقل من صفحة النهاية'\r\n            else this.pageError = ''\r\n            return error;\r\n        },\r\n        async reviewQuestions() {\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary btn-lg',\r\n                    cancelButton: 'btn btn-outline-primary btn-lg ms-2'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'هل أنت متأكد؟',\r\n                text: \"في حال الاعتماد لن يمكنك اضافة سؤال جديد أو التعديل على الأسئلة التي كتبتها \",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'نعم قم بالاعتماد ',\r\n                cancelButtonText: 'تراجع  ',\r\n                showClass: {\r\n                    popup: 'animate__animated animate__zoomIn'\r\n                },\r\n                hideClass: {\r\n                    popup: 'animate__animated animate__zoomOut'\r\n                }\r\n            })\r\n                .then((willDelete) => {\r\n                    if (willDelete.isConfirmed) {\r\n                        questionServices.reviewQuestion(this.user_book.id)\r\n                            .then(response => {\r\n                                swalWithBootstrapButtons.fire({\r\n                                    title: 'تم الارسال',\r\n                                    text: 'تم اعتماد الأسئلة',\r\n                                    icon: 'success',\r\n                                    showClass: {\r\n                                        popup: 'animate__animated animate__zoomIn'\r\n                                    },\r\n                                    hideClass: {\r\n                                        popup: 'animate__animated animate__zoomOut'\r\n                                    }\r\n                                })\r\n                                this.auditable = false;\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            })\r\n                    }\r\n                })\r\n        },\r\n\r\n        addField(value, fieldType) {\r\n\r\n            fieldType.push({ text: \"\" });\r\n        },\r\n        removeField(index, fieldType) {\r\n            fieldType.splice(index, 1);\r\n        },\r\n\r\n        back() {\r\n            this.$router.push({ path: `/achievement/${this.$route.params.id}/steps`, params: { bookId: this.$route.params.id } })\r\n        },\r\n        changeTab(tab) {\r\n            this.current = tab\r\n            window.scrollTo({ behavior: 'smooth' })\r\n        },\r\n        checkActive(item, active) {\r\n            let className = ''\r\n            if (this.current > item) {\r\n                className = 'active'\r\n            }\r\n            if (this.current > active) {\r\n                className = className + ' done'\r\n            }\r\n            return className\r\n        }\r\n\r\n    },\r\n};\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module"}