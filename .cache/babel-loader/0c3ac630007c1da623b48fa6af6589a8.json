{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: \"Chart\",\n  created: function created() {},\n  props: {\n    percintage: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        drawShadow: true,\n        drawText: true,\n        drawPercentageSign: true,\n        drawBubbles: true,\n        fontSize: \"70px\",\n        fontFamily: \"Arial\",\n        fontFillStyle: \"white\",\n        size: 300,\n        borderWidth: 25,\n        backgroundColor: \"#e2e2e2\",\n        foregroundColor: \"#fafafa\"\n      },\n      context: context,\n      targetContainer: targetContainer,\n      time: null,\n      dt: null\n    };\n  },\n  methods: {\n    drawFluidMask: function drawFluidMask(layer) {\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      context.beginPath();\n      context.lineTo(0, layer.initialHeight);\n\n      while (x < this.options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        thiscontext.lineTo(x, y);\n        x++;\n      }\n\n      this.context.lineTo(x, options.size);\n      this.context.lineTo(0, options.size);\n      this.context.closePath();\n      this.context.clip();\n    },\n    drawBubblesLayer: function drawBubblesLayer(dt) {\n      context.save();\n\n      for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\n        var bubble = bubblesLayer.bubbles[i];\n        context.beginPath();\n        context.strokeStyle = 'white';\n        context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\n        context.stroke();\n        context.closePath();\n        var currentSpeed = bubblesLayer.current * dt;\n        bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\n        bubble.y = bubble.y - bubble.velY * dt;\n        bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5; // determine if current bubble is outside the safe area\n\n        var meterBottom = options.size - (options.size - getMeterRadius()) / 2 - options.borderWidth;\n        var fluidAmount = currentFillPercentage * (getMeterRadius() - options.borderWidth * 2) / 100;\n\n        if (bubble.y <= meterBottom - fluidAmount) {\n          bubblesLayer.reset(bubble);\n        }\n      }\n\n      context.restore();\n    },\n    drawText: function drawText() {\n      var text = this.options.drawPercentageSign ? currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\n      this.context.save();\n      this.context.font = getFontSize();\n      this.context.fillStyle = options.fontFillStyle;\n      this.context.textAlign = \"center\";\n      this.context.textBaseline = 'middle';\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\";\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\n      this.context.restore();\n    },\n    //#region helper methods\n    clamp: function clamp(number, min, max) {\n      return Math.min(Math.max(number, min), max);\n    },\n    getMeterRadius: function getMeterRadius() {\n      return options.size * 0.9;\n    },\n    random: function random(min, max) {\n      var delta = max - min;\n      return max === min ? min : Math.random() * delta + min;\n    },\n    getFontSize: function getFontSize() {\n      return this.options.fontSize + \" \" + this.options.fontFamily;\n    },\n    init: function init(env) {\n      if (!env.targetContainer) throw \"empty or invalid container\";\n      targetContainer = env.targetContainer;\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\n\n      if (env.options) {\n        this.options.drawShadow = env.options.drawShadow === false ? false : true;\n        this.options.size = env.options.size;\n        this.options.drawBubbles = env.options.drawBubbles === false ? false : true;\n        this.options.borderWidth = env.options.borderWidth || this.options.borderWidth;\n        this.options.foregroundFluidColor = env.options.foregroundFluidColor || this.options.foregroundFluidColor;\n        this.options.backgroundFluidColor = env.options.backgroundFluidColor || this.options.backgroundFluidColor;\n        this.options.backgroundColor = env.options.backgroundColor || this.options.backgroundColor;\n        this.options.foregroundColor = env.options.foregroundColor || this.options.foregroundColor;\n        this.options.drawText = env.options.drawText === false ? false : true;\n        this.options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\n        this.options.fontSize = env.options.fontSize || this.options.fontSize;\n        this.options.fontFamily = env.options.fontFamily || this.options.fontFamily;\n        this.options.fontFillStyle = env.options.fontFillStyle || this.options.fontFillStyle; // fluid settings\n\n        if (env.options.foregroundFluidLayer) {\n          foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || foregroundFluidLayer.fillStyle;\n          foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || foregroundFluidLayer.angularSpeed;\n          foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || foregroundFluidLayer.maxAmplitude;\n          foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || foregroundFluidLayer.frequency;\n          foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || foregroundFluidLayer.horizontalSpeed;\n        }\n\n        if (env.options.backgroundFluidLayer) {\n          backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || backgroundFluidLayer.fillStyle;\n          backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || backgroundFluidLayer.angularSpeed;\n          backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || backgroundFluidLayer.maxAmplitude;\n          backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || backgroundFluidLayer.frequency;\n          backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || backgroundFluidLayer.horizontalSpeed;\n        }\n      }\n\n      bubblesLayer.init();\n      setupCanvas();\n      draw();\n    },\n    setPercentage: function setPercentage(percentage) {\n      fillPercentage = clamp(percentage, 0, 100);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","created","props","percintage","required","data","options","drawShadow","drawText","drawPercentageSign","drawBubbles","fontSize","fontFamily","fontFillStyle","size","borderWidth","backgroundColor","foregroundColor","context","targetContainer","time","dt","methods","drawFluidMask","layer","x","y","amplitude","maxAmplitude","Math","sin","angle","PI","beginPath","lineTo","initialHeight","horizontalPosition","frequency","thiscontext","closePath","clip","drawBubblesLayer","save","i","bubblesLayer","bubbles","length","bubble","strokeStyle","arc","r","stroke","currentSpeed","current","velX","abs","velY","swing","cos","meterBottom","getMeterRadius","fluidAmount","currentFillPercentage","reset","restore","text","toFixed","font","getFontSize","fillStyle","textAlign","textBaseline","filter","fillText","clamp","number","min","max","random","delta","init","env","fillPercentage","foregroundFluidColor","backgroundFluidColor","foregroundFluidLayer","angularSpeed","horizontalSpeed","backgroundFluidLayer","setupCanvas","draw","setPercentage","percentage"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\chart.vue"],"sourcesContent":["<template>\r\n  <div class=\"col  text-center\">\r\n    <div id=\"fluid-meter-3\"></div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Chart\",\r\n  created() { },\r\n  props: {\r\n    percintage: {\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      options: {\r\n        drawShadow: true,\r\n        drawText: true,\r\n        drawPercentageSign: true,\r\n        drawBubbles: true,\r\n        fontSize: \"70px\",\r\n        fontFamily: \"Arial\",\r\n        fontFillStyle: \"white\",\r\n        size: 300,\r\n        borderWidth: 25,\r\n        backgroundColor: \"#e2e2e2\",\r\n        foregroundColor: \"#fafafa\"\r\n      },\r\n      context,\r\n      targetContainer,\r\n      time: null,\r\n      dt: null,\r\n\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    drawFluidMask(layer) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      context.beginPath();\r\n\r\n      context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        thiscontext.lineTo(x, y);\r\n        x++;\r\n      }\r\n      this.context.lineTo(x, options.size);\r\n      this.context.lineTo(0, options.size);\r\n      this.context.closePath();\r\n      this.context.clip();\r\n    },\r\n    drawBubblesLayer(dt) {\r\n      context.save();\r\n      for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\r\n        var bubble = bubblesLayer.bubbles[i];\r\n\r\n        context.beginPath();\r\n        context.strokeStyle = 'white';\r\n        context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\r\n        context.stroke();\r\n        context.closePath();\r\n\r\n        var currentSpeed = bubblesLayer.current * dt;\r\n\r\n        bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\r\n        bubble.y = bubble.y - bubble.velY * dt;\r\n        bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\r\n\r\n        // determine if current bubble is outside the safe area\r\n        var meterBottom = (options.size - (options.size - getMeterRadius()) / 2) - options.borderWidth;\r\n        var fluidAmount = currentFillPercentage * (getMeterRadius() - options.borderWidth * 2) / 100;\r\n\r\n        if (bubble.y <= meterBottom - fluidAmount) {\r\n          bubblesLayer.reset(bubble);\r\n        }\r\n\r\n      }\r\n      context.restore();\r\n    },\r\n    drawText() {\r\n\r\n      var text = this.options.drawPercentageSign ?\r\n        currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\r\n\r\n      this.context.save();\r\n      this.context.font = getFontSize();\r\n      this.context.fillStyle = options.fontFillStyle;\r\n      this.context.textAlign = \"center\";\r\n      this.context.textBaseline = 'middle';\r\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\"\r\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\r\n      this.context.restore();\r\n    },\r\n    //#region helper methods\r\n    clamp(number, min, max) {\r\n      return Math.min(Math.max(number, min), max);\r\n    },\r\n    getMeterRadius() {\r\n      return options.size * 0.9;\r\n    },\r\n\r\n    random(min, max) {\r\n      var delta = max - min;\r\n      return max === min ? min : Math.random() * delta + min;\r\n    },\r\n\r\n    getFontSize() {\r\n      return this.options.fontSize + \" \" + this.options.fontFamily;\r\n    },\r\n    init: function (env) {\r\n      if (!env.targetContainer)\r\n        throw \"empty or invalid container\";\r\n\r\n      targetContainer = env.targetContainer;\r\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\r\n\r\n      if (env.options) {\r\n        this.options.drawShadow = env.options.drawShadow === false ? false : true;\r\n        this.options.size = env.options.size;\r\n        this.options.drawBubbles = env.options.drawBubbles === false ? false : true;\r\n        this.options.borderWidth = env.options.borderWidth || this.options.borderWidth;\r\n        this.options.foregroundFluidColor = env.options.foregroundFluidColor || this.options.foregroundFluidColor;\r\n        this.options.backgroundFluidColor = env.options.backgroundFluidColor || this.options.backgroundFluidColor;\r\n        this.options.backgroundColor = env.options.backgroundColor || this.options.backgroundColor;\r\n        this.options.foregroundColor = env.options.foregroundColor || this.options.foregroundColor;\r\n\r\n        this.options.drawText = env.options.drawText === false ? false : true;\r\n        this.options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\r\n        this.options.fontSize = env.options.fontSize || this.options.fontSize;\r\n        this.options.fontFamily = env.options.fontFamily || this.options.fontFamily;\r\n        this.options.fontFillStyle = env.options.fontFillStyle || this.options.fontFillStyle;\r\n        // fluid settings\r\n\r\n        if (env.options.foregroundFluidLayer) {\r\n          foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || foregroundFluidLayer.fillStyle;\r\n          foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || foregroundFluidLayer.angularSpeed;\r\n          foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || foregroundFluidLayer.maxAmplitude;\r\n          foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || foregroundFluidLayer.frequency;\r\n          foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || foregroundFluidLayer.horizontalSpeed;\r\n        }\r\n\r\n        if (env.options.backgroundFluidLayer) {\r\n          backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || backgroundFluidLayer.fillStyle;\r\n          backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || backgroundFluidLayer.angularSpeed;\r\n          backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || backgroundFluidLayer.maxAmplitude;\r\n          backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || backgroundFluidLayer.frequency;\r\n          backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || backgroundFluidLayer.horizontalSpeed;\r\n        }\r\n      }\r\n      bubblesLayer.init();\r\n      setupCanvas();\r\n      draw();\r\n    },\r\n    setPercentage(percentage) {\r\n      fillPercentage = clamp(percentage, 0, 100);\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}