{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  \"class\": \"mt-4 mb-3\"\n}, \"Menu Style\", -1);\n\nvar _hoisted_2 = {\n  \"class\": \"d-grid gap-3 grid-cols-3 mb-4\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Mini \");\n\nvar _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Hover \");\n\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Soft \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_checkbox_input = _resolveComponent(\"checkbox-input\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_checkbox_input, {\n    \"btn-name\": \"sidebar_type\",\n    imgComponent: true,\n    \"label-title\": \"Mini\",\n    id: \"sidebar-mini\",\n    \"default-checked\": $setup.menuStyle.value,\n    value: \"sidebar-mini\",\n    onOnChange: $setup.updateCheckbox\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_3];\n    }),\n    _: 1\n  }, 8, [\"default-checked\", \"onOnChange\"]), _createVNode(_component_checkbox_input, {\n    \"btn-name\": \"sidebar_type\",\n    imgComponent: true,\n    \"label-title\": \"Hover\",\n    id: \"sidebar-hover\",\n    \"default-checked\": $setup.menuStyle.value,\n    value: \"sidebar-hover\",\n    onOnChange: $setup.updateCheckbox\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_4];\n    }),\n    _: 1\n  }, 8, [\"default-checked\", \"onOnChange\"]), _createVNode(_component_checkbox_input, {\n    \"btn-name\": \"sidebar_type\",\n    imgComponent: true,\n    \"label-title\": \"Hover\",\n    id: \"sidebar-soft\",\n    \"default-checked\": $setup.menuStyle.value,\n    value: \"sidebar-soft\",\n    onOnChange: $setup.updateCheckbox\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_5];\n    }),\n    _: 1\n  }, 8, [\"default-checked\", \"onOnChange\"])])]);\n}","map":{"version":3,"mappings":";;8BAEIA,oBAAqC,IAArC,EAAqC;EAAjC,SAAM;AAA2B,CAArC,EAAsB,YAAtB,EAAgC,EAAhC;;;EACK,SAAM;;;+CAC4K;;+CAGG;;+CAGF;;;;;uBAT1LC,oBAaM,KAbN,EAaM,IAbN,EAaM,CAZJC,UAYI,EAXJF,oBAUM,KAVN,cAUM,CATJG,aAEiBC,yBAFjB,EAEiB;IAFD,YAAS,cAER;IAFwBC,YAAY,EAAE,IAEtC;IAF4C,eAAY,MAExD;IAF+DC,EAAE,EAAC,cAElE;IAFkF,mBAAiBC,iBAAUC,KAE7G;IAFoHA,KAAK,EAAC,cAE1H;IAF0IC,UAAQ,EAAEF;EAEpJ,CAFjB;wBAAqL;MAAA,OAErL,YAFqL;IAAA;;GAArL,uCASI,EANJJ,aAEiBC,yBAFjB,EAEiB;IAFD,YAAS,cAER;IAFwBC,YAAY,EAAE,IAEtC;IAF4C,eAAY,OAExD;IAFgEC,EAAE,EAAC,eAEnE;IAFoF,mBAAiBC,iBAAUC,KAE/G;IAFsHA,KAAK,EAAC,eAE5H;IAF6IC,UAAQ,EAAEF;EAEvJ,CAFjB;wBAAwL;MAAA,OAExL,YAFwL;IAAA;;GAAxL,uCAMI,EAHJJ,aAEiBC,yBAFjB,EAEiB;IAFD,YAAS,cAER;IAFwBC,YAAY,EAAE,IAEtC;IAF4C,eAAY,OAExD;IAFgEC,EAAE,EAAC,cAEnE;IAFmF,mBAAiBC,iBAAUC,KAE9G;IAFqHA,KAAK,EAAC,cAE3H;IAF2IC,UAAQ,EAAEF;EAErJ,CAFjB;wBAAsL;MAAA,OAEtL,YAFsL;IAAA;;GAAtL,uCAGI,CAVN,CAWI,CAbN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_checkbox_input","imgComponent","id","$setup","value","onOnChange"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\custom\\setting\\sections\\MenuStyle.vue"],"sourcesContent":["<template>\n  <div>\n    <h5 class=\"mt-4 mb-3\">Menu Style</h5>\n    <div class=\"d-grid gap-3 grid-cols-3 mb-4\">\n      <checkbox-input btn-name=\"sidebar_type\" :imgComponent=\"true\" label-title=\"Mini\" id=\"sidebar-mini\" :default-checked=\"menuStyle.value\" value=\"sidebar-mini\" @onChange=\"updateCheckbox\">\n        Mini\n      </checkbox-input>\n      <checkbox-input btn-name=\"sidebar_type\" :imgComponent=\"true\" label-title=\"Hover\" id=\"sidebar-hover\" :default-checked=\"menuStyle.value\" value=\"sidebar-hover\" @onChange=\"updateCheckbox\">\n        Hover\n      </checkbox-input>\n      <checkbox-input btn-name=\"sidebar_type\" :imgComponent=\"true\" label-title=\"Hover\" id=\"sidebar-soft\" :default-checked=\"menuStyle.value\" value=\"sidebar-soft\" @onChange=\"updateCheckbox\">\n        Soft\n      </checkbox-input>\n    </div>\n  </div>\n</template>\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport CheckboxInput from '@/components/custom/elements/CheckboxInput'\nimport _ from 'lodash'\nexport default {\n  components: {\n    CheckboxInput\n  },\n  setup () {\n    const store = useStore()\n    const menuStyle = computed(() => _.cloneDeep(store.state.setting.setting.sidebar_type))\n\n    const updateCheckbox = (value, name) => {\n      store.dispatch(`setting/${name}`, value)\n    }\n    return {\n      menuStyle,\n      updateCheckbox\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}