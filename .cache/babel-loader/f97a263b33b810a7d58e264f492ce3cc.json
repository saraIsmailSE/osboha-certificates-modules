{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nexport default {\n  name: \"Chart\",\n  created: function created() {},\n  props: {\n    percintage: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        drawShadow: true,\n        drawText: true,\n        drawPercentageSign: true,\n        drawBubbles: true,\n        fontSize: \"70px\",\n        fontFamily: \"Arial\",\n        fontFillStyle: \"white\",\n        size: 300,\n        borderWidth: 25,\n        backgroundColor: \"#e2e2e2\",\n        foregroundColor: \"#fafafa\"\n      },\n      context: context,\n      targetContainer: targetContainer,\n      time: null,\n      dt: null,\n      currentFillPercentage: 0,\n      fillPercentage: 0,\n      //#region fluid context values\n      foregroundFluidLayer: {\n        fillStyle: \"purple\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 0,\n        maxAmplitude: 9,\n        frequency: 30,\n        horizontalSpeed: -150,\n        initialHeight: 0\n      },\n      backgroundFluidLayer: {\n        fillStyle: \"pink\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 140,\n        maxAmplitude: 12,\n        frequency: 40,\n        horizontalSpeed: 150,\n        initialHeight: 0\n      }\n    };\n  },\n  methods: {\n    setupCanvas: function setupCanvas() {\n      var canvas = document.createElement('canvas');\n      canvas.width = this.options.size;\n      canvas.height = this.options.size;\n      canvas.imageSmoothingEnabled = true;\n      this.context = canvas.getContext(\"2d\");\n      targetContainer.appendChild(canvas); // shadow is not required  to be on the draw loop\n      //#region shadow\n\n      if (this.options.drawShadow) {\n        this.context.save();\n        this.context.beginPath();\n        this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\n        this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.fill();\n        this.context.restore();\n      } //#endregion\n\n    },\n    draw: function (_draw) {\n      function draw() {\n        return _draw.apply(this, arguments);\n      }\n\n      draw.toString = function () {\n        return _draw.toString();\n      };\n\n      return draw;\n    }(function () {\n      var now = new Date().getTime();\n      dt = (now - (this.time || now)) / 1000;\n      this.time = now;\n      requestAnimationFrame(draw);\n      this.context.clearRect(0, 0, this.options.size, this.options.size);\n      drawMeterBackground();\n      drawFluid(dt);\n\n      if (this.options.drawText) {\n        drawText();\n      }\n\n      drawMeterForeground();\n    }),\n    drawMeterBackground: function drawMeterBackground() {\n      this.context.save();\n      this.context.fillStyle = this.options.backgroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.fill();\n      this.context.restore();\n    },\n    drawMeterForeground: function drawMeterForeground() {\n      this.context.save();\n      this.context.lineWidth = this.options.borderWidth;\n      this.context.strokeStyle = this.options.foregroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.stroke();\n      this.context.restore();\n    },\n    drawFluidMask: function drawFluidMask(layer) {\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      this[\"this\"].context.beginPath();\n      this[\"this\"].context.lineTo(0, layer.initialHeight);\n\n      while (x < this[\"this\"].options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        this[\"this\"].context.lineTo(x, y);\n        x++;\n      }\n\n      this[\"this\"].context.lineTo(x, this.options.size);\n      this[\"this\"].context.lineTo(0, this.options.size);\n      this[\"this\"].context.closePath();\n      this[\"this\"].context.clip();\n    },\n    // drawBubblesLayer(dt) {\n    //   this.context.save();\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\n    //     var bubble = bubblesLayer.bubbles[i];\n    //     this.context.beginPath();\n    //     this.context.strokeStyle = 'white';\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\n    //     this.context.stroke();\n    //     this.context.closePath();\n    //     var currentSpeed = bubblesLayer.current * dt;\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\n    //     bubble.y = bubble.y - bubble.velY * dt;\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\n    //     // determine if current bubble is outside the safe area\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\n    //     if (bubble.y <= meterBottom - fluidAmount) {\n    //       bubblesLayer.reset(bubble);\n    //     }\n    //   }\n    //   this.context.restore();\n    // },\n    drawText: function drawText() {\n      var text = this[\"this\"].options.drawPercentageSign ? currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\n      this[\"this\"].context.save();\n      this[\"this\"].context.font = getFontSize();\n      this[\"this\"].context.fillStyle = this.options.fontFillStyle;\n      this[\"this\"].context.textAlign = \"center\";\n      this[\"this\"].context.textBaseline = 'middle';\n      this[\"this\"].context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\";\n      this[\"this\"].context.fillText(text, this[\"this\"].options.size / 2, this[\"this\"].options.size / 2);\n      this[\"this\"].context.restore();\n    },\n    //#region helper methods\n    clamp: function clamp(number, min, max) {\n      return Math.min(Math.max(number, min), max);\n    },\n    getMeterRadius: function getMeterRadius() {\n      return this.options.size * 0.9;\n    },\n    random: function random(min, max) {\n      var delta = max - min;\n      return max === min ? min : Math.random() * delta + min;\n    },\n    getFontSize: function getFontSize() {\n      return this[\"this\"].options.fontSize + \" \" + this[\"this\"].options.fontFamily;\n    },\n    init: function init(env) {\n      if (!env.targetContainer) throw \"empty or invalid container\";\n      targetContainer = env.targetContainer;\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\n\n      if (env[\"this\"].options) {\n        this[\"this\"].options.drawShadow = env[\"this\"].options.drawShadow === false ? false : true;\n        this[\"this\"].options.size = env[\"this\"].options.size;\n        this[\"this\"].options.drawBubbles = env[\"this\"].options.drawBubbles === false ? false : true;\n        this[\"this\"].options.borderWidth = env[\"this\"].options.borderWidth || this[\"this\"].options.borderWidth;\n        this[\"this\"].options.foregroundFluidColor = env[\"this\"].options.foregroundFluidColor || this[\"this\"].options.foregroundFluidColor;\n        this[\"this\"].options.backgroundFluidColor = env[\"this\"].options.backgroundFluidColor || this[\"this\"].options.backgroundFluidColor;\n        this[\"this\"].options.backgroundColor = env[\"this\"].options.backgroundColor || this[\"this\"].options.backgroundColor;\n        this[\"this\"].options.foregroundColor = env[\"this\"].options.foregroundColor || this[\"this\"].options.foregroundColor;\n        this[\"this\"].options.drawText = env[\"this\"].options.drawText === false ? false : true;\n        this[\"this\"].options.drawPercentageSign = env[\"this\"].options.drawPercentageSign === false ? false : true;\n        this[\"this\"].options.fontSize = env[\"this\"].options.fontSize || this[\"this\"].options.fontSize;\n        this[\"this\"].options.fontFamily = env[\"this\"].options.fontFamily || this[\"this\"].options.fontFamily;\n        this[\"this\"].options.fontFillStyle = env[\"this\"].options.fontFillStyle || this[\"this\"].options.fontFillStyle; // fluid settings\n\n        if (env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer) {\n          this[\"this\"].foregroundFluidLayer.fillStyle = env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer.fillStyle || this[\"this\"].foregroundFluidLayer.fillStyle;\n          this[\"this\"].foregroundFluidLayer.angularSpeed = env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer.angularSpeed || this[\"this\"].foregroundFluidLayer.angularSpeed;\n          this[\"this\"].foregroundFluidLayer.maxAmplitude = env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer.maxAmplitude || this[\"this\"].foregroundFluidLayer.maxAmplitude;\n          this[\"this\"].foregroundFluidLayer.frequency = env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer.frequency || this[\"this\"].foregroundFluidLayer.frequency;\n          this[\"this\"].foregroundFluidLayer.horizontalSpeed = env[\"this\"].options[\"this\"][\"this\"].foregroundFluidLayer.horizontalSpeed || this[\"this\"].foregroundFluidLayer.horizontalSpeed;\n        }\n\n        if (env[\"this\"].options[\"this\"].backgroundFluidLayer) {\n          this.backgroundFluidLayer.fillStyle = env[\"this\"].options[\"this\"].backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\n          this.backgroundFluidLayer.angularSpeed = env[\"this\"].options[\"this\"].backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\n          this.backgroundFluidLayer.maxAmplitude = env[\"this\"].options[\"this\"].backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\n          this.backgroundFluidLayer.frequency = env[\"this\"].options[\"this\"].backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\n          this.backgroundFluidLayer.horizontalSpeed = env[\"this\"].options[\"this\"].backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\n        }\n      }\n\n      bubblesLayer.init();\n      setupCanvas();\n      draw();\n    },\n    setPercentage: function setPercentage(percentage) {\n      fillPercentage = clamp(percentage, 0, 100);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","created","props","percintage","required","data","options","drawShadow","drawText","drawPercentageSign","drawBubbles","fontSize","fontFamily","fontFillStyle","size","borderWidth","backgroundColor","foregroundColor","context","targetContainer","time","dt","currentFillPercentage","fillPercentage","foregroundFluidLayer","fillStyle","angle","horizontalPosition","angularSpeed","maxAmplitude","frequency","horizontalSpeed","initialHeight","backgroundFluidLayer","methods","setupCanvas","canvas","document","createElement","width","height","imageSmoothingEnabled","getContext","appendChild","save","beginPath","filter","arc","getMeterRadius","Math","PI","closePath","fill","restore","draw","now","Date","getTime","requestAnimationFrame","clearRect","drawMeterBackground","drawFluid","drawMeterForeground","lineWidth","strokeStyle","stroke","drawFluidMask","layer","x","y","amplitude","sin","lineTo","clip","text","toFixed","font","getFontSize","textAlign","textBaseline","fillText","clamp","number","min","max","random","delta","init","env","foregroundFluidColor","backgroundFluidColor","bubblesLayer","setPercentage","percentage"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\chart.vue"],"sourcesContent":["<template>\r\n  <div class=\"col  text-center\">\r\n    <div id=\"fluid-meter-3\"></div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Chart\",\r\n  created() { },\r\n  props: {\r\n    percintage: {\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      options: {\r\n        drawShadow: true,\r\n        drawText: true,\r\n        drawPercentageSign: true,\r\n        drawBubbles: true,\r\n        fontSize: \"70px\",\r\n        fontFamily: \"Arial\",\r\n        fontFillStyle: \"white\",\r\n        size: 300,\r\n        borderWidth: 25,\r\n        backgroundColor: \"#e2e2e2\",\r\n        foregroundColor: \"#fafafa\"\r\n      },\r\n      context,\r\n      targetContainer,\r\n      time: null,\r\n      dt: null,\r\n      currentFillPercentage: 0,\r\n      fillPercentage: 0,\r\n\r\n      //#region fluid context values\r\n      foregroundFluidLayer: {\r\n        fillStyle: \"purple\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 0,\r\n        maxAmplitude: 9,\r\n        frequency: 30,\r\n        horizontalSpeed: -150,\r\n        initialHeight: 0\r\n      },\r\n      backgroundFluidLayer: {\r\n        fillStyle: \"pink\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 140,\r\n        maxAmplitude: 12,\r\n        frequency: 40,\r\n        horizontalSpeed: 150,\r\n        initialHeight: 0\r\n      },\r\n\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    setupCanvas() {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = this.options.size;\r\n    canvas.height = this.options.size;\r\n    canvas.imageSmoothingEnabled = true;\r\n    this.context = canvas.getContext(\"2d\");\r\n    targetContainer.appendChild(canvas);\r\n\r\n    // shadow is not required  to be on the draw loop\r\n    //#region shadow\r\n    if (this.options.drawShadow) {\r\n      this.context.save();\r\n      this.context.beginPath();\r\n      this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2, 0, 2 * Math.PI);\r\n      this.context.closePath();\r\n      this.context.fill();\r\n      this.context.restore();\r\n    }\r\n    //#endregion\r\n  },\r\n  draw() {\r\n    var now = new Date().getTime();\r\n    dt = (now - (this.time || now)) / 1000;\r\n    this.time = now;\r\n\r\n    requestAnimationFrame(draw);\r\n    this.context.clearRect(0, 0, this.options.size, this.options.size);\r\n    drawMeterBackground();\r\n    drawFluid(dt);\r\n    if (this.options.drawText) {\r\n      drawText();\r\n    }\r\n    drawMeterForeground();\r\n  },\r\n\r\n   drawMeterBackground() {\r\n    this.context.save();\r\n    this.context.fillStyle = this.options.backgroundColor;\r\n    this.context.beginPath();\r\n    this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\r\n    this.context.closePath();\r\n    this.context.fill();\r\n    this.context.restore();\r\n  },\r\n\r\n   drawMeterForeground() {\r\n    this.context.save();\r\n    this.context.lineWidth = this.options.borderWidth;\r\n    this.context.strokeStyle = this.options.foregroundColor;\r\n    this.context.beginPath();\r\n    this.context.arc(this.options.size / 2, this.options.size / 2, getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\r\n    this.context.closePath();\r\n    this.context.stroke();\r\n    this.context.restore();\r\n  },\r\n\r\n    drawFluidMask(layer) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      this.this.context.beginPath();\r\n\r\n      this.this.context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        this.this.context.lineTo(x, y);\r\n        x++;\r\n      }\r\n      this.this.context.lineTo(x, this.options.size);\r\n      this.this.context.lineTo(0, this.options.size);\r\n      this.this.context.closePath();\r\n      this.this.context.clip();\r\n    },\r\n    // drawBubblesLayer(dt) {\r\n    //   this.context.save();\r\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\r\n    //     var bubble = bubblesLayer.bubbles[i];\r\n\r\n    //     this.context.beginPath();\r\n    //     this.context.strokeStyle = 'white';\r\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\r\n    //     this.context.stroke();\r\n    //     this.context.closePath();\r\n\r\n    //     var currentSpeed = bubblesLayer.current * dt;\r\n\r\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\r\n    //     bubble.y = bubble.y - bubble.velY * dt;\r\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\r\n\r\n    //     // determine if current bubble is outside the safe area\r\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\r\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\r\n\r\n    //     if (bubble.y <= meterBottom - fluidAmount) {\r\n    //       bubblesLayer.reset(bubble);\r\n    //     }\r\n\r\n    //   }\r\n    //   this.context.restore();\r\n    // },\r\n    drawText() {\r\n\r\n      var text = this.this.options.drawPercentageSign ?\r\n        currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\r\n\r\n      this.this.context.save();\r\n      this.this.context.font = getFontSize();\r\n      this.this.context.fillStyle = this.options.fontFillStyle;\r\n      this.this.context.textAlign = \"center\";\r\n      this.this.context.textBaseline = 'middle';\r\n      this.this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\"\r\n      this.this.context.fillText(text, this.this.options.size / 2, this.this.options.size / 2);\r\n      this.this.context.restore();\r\n    },\r\n    //#region helper methods\r\n    clamp(number, min, max) {\r\n      return Math.min(Math.max(number, min), max);\r\n    },\r\n    getMeterRadius() {\r\n      return this.options.size * 0.9;\r\n    },\r\n\r\n    random(min, max) {\r\n      var delta = max - min;\r\n      return max === min ? min : Math.random() * delta + min;\r\n    },\r\n\r\n    getFontSize() {\r\n      return this.this.options.fontSize + \" \" + this.this.options.fontFamily;\r\n    },\r\n    init: function (env) {\r\n      if (!env.targetContainer)\r\n        throw \"empty or invalid container\";\r\n\r\n      targetContainer = env.targetContainer;\r\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\r\n\r\n      if (env.this.options) {\r\n        this.this.options.drawShadow = env.this.options.drawShadow === false ? false : true;\r\n        this.this.options.size = env.this.options.size;\r\n        this.this.options.drawBubbles = env.this.options.drawBubbles === false ? false : true;\r\n        this.this.options.borderWidth = env.this.options.borderWidth || this.this.options.borderWidth;\r\n        this.this.options.foregroundFluidColor = env.this.options.foregroundFluidColor || this.this.options.foregroundFluidColor;\r\n        this.this.options.backgroundFluidColor = env.this.options.backgroundFluidColor || this.this.options.backgroundFluidColor;\r\n        this.this.options.backgroundColor = env.this.options.backgroundColor || this.this.options.backgroundColor;\r\n        this.this.options.foregroundColor = env.this.options.foregroundColor || this.this.options.foregroundColor;\r\n\r\n        this.this.options.drawText = env.this.options.drawText === false ? false : true;\r\n        this.this.options.drawPercentageSign = env.this.options.drawPercentageSign === false ? false : true;\r\n        this.this.options.fontSize = env.this.options.fontSize || this.this.options.fontSize;\r\n        this.this.options.fontFamily = env.this.options.fontFamily || this.this.options.fontFamily;\r\n        this.this.options.fontFillStyle = env.this.options.fontFillStyle || this.this.options.fontFillStyle;\r\n        // fluid settings\r\n\r\n        if (env.this.options.this.this.foregroundFluidLayer) {\r\n          this.this.foregroundFluidLayer.fillStyle = env.this.options.this.this.foregroundFluidLayer.fillStyle || this.this.foregroundFluidLayer.fillStyle;\r\n          this.this.foregroundFluidLayer.angularSpeed = env.this.options.this.this.foregroundFluidLayer.angularSpeed || this.this.foregroundFluidLayer.angularSpeed;\r\n          this.this.foregroundFluidLayer.maxAmplitude = env.this.options.this.this.foregroundFluidLayer.maxAmplitude || this.this.foregroundFluidLayer.maxAmplitude;\r\n          this.this.foregroundFluidLayer.frequency = env.this.options.this.this.foregroundFluidLayer.frequency || this.this.foregroundFluidLayer.frequency;\r\n          this.this.foregroundFluidLayer.horizontalSpeed = env.this.options.this.this.foregroundFluidLayer.horizontalSpeed || this.this.foregroundFluidLayer.horizontalSpeed;\r\n        }\r\n\r\n        if (env.this.options.this.backgroundFluidLayer) {\r\n          this.backgroundFluidLayer.fillStyle = env.this.options.this.backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\r\n          this.backgroundFluidLayer.angularSpeed = env.this.options.this.backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\r\n          this.backgroundFluidLayer.maxAmplitude = env.this.options.this.backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\r\n          this.backgroundFluidLayer.frequency = env.this.options.this.backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\r\n          this.backgroundFluidLayer.horizontalSpeed = env.this.options.this.backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\r\n        }\r\n      }\r\n      bubblesLayer.init();\r\n      setupCanvas();\r\n      draw();\r\n    },\r\n    setPercentage(percentage) {\r\n      fillPercentage = clamp(percentage, 0, 100);\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}