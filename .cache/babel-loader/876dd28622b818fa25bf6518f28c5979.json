{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\nimport questionServices from '../../api/questionServices';\nimport UpdateQuestion from '../../components/Questions/UpdateQuestion.vue';\nexport default {\n  name: \"UpdateQuestion\",\n  created: function created() {\n    console.log(questionServices.getById(this.$route.params.id));\n    console.log(this.book);\n  },\n  components: {\n    UpdateQuestion: UpdateQuestion\n  },\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data: function data() {\n    return {\n      updateQuestionForm: {},\n      book: []\n    };\n  },\n  validations: function validations() {\n    return {\n      updateQuestionForm: {\n        question: {\n          required: required\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required\n        },\n        quotation: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(2)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    addField: function addField(value, fieldType) {\n      console.log(this.questionForm.quotes);\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    },\n    submitupdateQuestionForm: function submitupdateQuestionForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var question;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.v$.$touch();\n\n                if (_this.v$.updateQuestionForm.$invalid) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 4;\n                return questionServices.updateQuestion(_this.updateQuestionForm, _this.questionToupdate.id);\n\n              case 4:\n                question = _context.sent;\n                _this.updateQuestionForm.question = \"\";\n                _this.updateQuestionForm.pageEnd = \"\";\n                _this.updateQuestionForm.pageStart = \"\";\n                _this.updateQuestionForm.quotation = [{\n                  text: ''\n                }];\n\n                _this.v$.updateQuestionForm.$reset();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAgBA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,eAAe;EACbC,IAAI,EAAE,gBADO;EAEbC,OAFa,qBAEH;IACRC,OAAO,CAACC,GAAR,CAAYL,gBAAgB,CAACM,OAAjB,CAAyB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAA5C,CAAZ;IACAL,OAAO,CAACC,GAAR,CAAY,KAAKK,IAAjB;EAED,CANY;EAObC,UAAU,EAAC;IACTV,cAAc,EAAdA;EADS,CAPE;EAUbW,KAVa,mBAUL;IACN,OAAO;MAAEC,EAAE,EAAEhB,YAAY;IAAlB,CAAP;EACD,CAZY;EAabiB,IAba,kBAaN;IACL,OAAO;MACLC,kBAAkB,EAAE,EADf;MAGLL,IAAI,EAAE;IAHD,CAAP;EAKD,CAnBY;EAoBbM,WApBa,yBAoBC;IACZ,OAAO;MACLD,kBAAkB,EAAE;QAClBE,QAAQ,EAAE;UACRnB,QAAO,EAAPA;QADQ,CADQ;QAGfoB,aAAa,EAAE;UAChBpB,QAAO,EAAPA;QADgB,CAHA;QAKfqB,WAAW,EAAE;UACdrB,QAAO,EAAPA;QADc,CALE;QAOfsB,SAAS,EAAE;UACZtB,QAAQ,EAARA,QADY;UAEZC,SAAS,EAAEA,SAAS,CAAC,CAAD,CAFR;UAGZsB,KAAK,EAAE;YACLC,IAAI,EAAE;cAEJvB,SAAS,EAAEA,SAAS,CAAC,CAAD;YAFhB;UADD;QAHK;MAPI;IADf,CAAP;EAoBD,CAzCY;EA0CbwB,OAAO,EAAE;IACPC,QADO,oBACEC,KADF,EACSC,SADT,EACoB;MACzBtB,OAAO,CAACC,GAAR,CAAY,KAAKsB,YAAL,CAAkBC,MAA9B;MACAF,SAAS,CAACG,IAAV,CAAe;QAAEP,IAAI,EAAE;MAAR,CAAf;IACD,CAJM;IAKPQ,WALO,uBAKKC,KALL,EAKYL,SALZ,EAKuB;MAC5BA,SAAS,CAACM,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;IACD,CAPM;IAQDE,wBARC,sCAQ0B;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC/B,KAAI,CAACpB,EAAL,CAAQqB,MAAR;;gBAD+B,IAG1B,KAAI,CAACrB,EAAL,CAAQE,kBAAR,CAA2BoB,QAHD;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAKNnC,gBAAgB,CAACoC,cAAjB,CAAgC,KAAI,CAACrB,kBAArC,EAAyD,KAAI,CAACsB,gBAAL,CAAsB5B,EAA/E,CALM;;cAAA;gBAKvBQ,QALuB;gBAM7B,KAAI,CAACF,kBAAL,CAAwBE,QAAxB,GAAmC,EAAnC;gBACA,KAAI,CAACF,kBAAL,CAAwBuB,OAAxB,GAAkC,EAAlC;gBACA,KAAI,CAACvB,kBAAL,CAAwBwB,SAAxB,GAAoC,EAApC;gBACA,KAAI,CAACxB,kBAAL,CAAwBK,SAAxB,GAAoC,CAAC;kBAAEE,IAAI,EAAE;gBAAR,CAAD,CAApC;;gBACA,KAAI,CAACT,EAAL,CAAQE,kBAAR,CAA2ByB,MAA3B;;cAV6B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYhC;EApBM;AA1CI,CAAf","names":["useVuelidate","required","minLength","questionServices","UpdateQuestion","name","created","console","log","getById","$route","params","id","book","components","setup","v$","data","updateQuestionForm","validations","question","starting_page","ending_page","quotation","$each","text","methods","addField","value","fieldType","questionForm","quotes","push","removeField","index","splice","submitupdateQuestionForm","$touch","$invalid","updateQuestion","questionToupdate","pageEnd","pageStart","$reset"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Questions\\update.vue"],"sourcesContent":["<template>\r\n  <modal id=\"UpdateQuestionmodal\" dialogClass=\"modal-fullscreen-sm-down\" tabindex=\"-1\" title=\"Create Post\"\r\n    aria-labelledby=\"modalsLabel\" >\r\n    <model-header>\r\n      <h5 class=\"modal-title\" id=\"modalsLabel\">تعديل السؤال</h5>\r\n      <a href=\"javascript:void(0);\" class=\"lh-1\" data-bs-dismiss=\"modal\">\r\n        <span class=\"material-symbols-outlined\">close</span>\r\n      </a>\r\n    </model-header>\r\n    <model-body>\r\n      <UpdateQuestion :questionToupdate='questionToupdate' :book=\"book\" />\r\n    </model-body>\r\n  </modal>\r\n\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices'; \r\nimport UpdateQuestion from '../../components/Questions/UpdateQuestion.vue'\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  created() {\r\n    console.log(questionServices.getById(this.$route.params.id))\r\n    console.log(this.book)\r\n\r\n  },\r\n  components:{\r\n    UpdateQuestion,\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  data() {\r\n    return {\r\n      updateQuestionForm: {\r\n      },\r\n      book: []\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      updateQuestionForm: {\r\n        question: {\r\n          required\r\n        }, starting_page: {\r\n          required\r\n        }, ending_page: {\r\n          required\r\n        }, quotation: {\r\n          required,\r\n          minLength: minLength(1),\r\n          $each: {\r\n            text: {\r\n\r\n              minLength: minLength(2)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    addField(value, fieldType) {\r\n      console.log(this.questionForm.quotes)\r\n      fieldType.push({ text: \"\" });\r\n    },\r\n    removeField(index, fieldType) {\r\n      fieldType.splice(index, 1);\r\n    },\r\n    async submitupdateQuestionForm() {\r\n      this.v$.$touch();\r\n\r\n      if (!this.v$.updateQuestionForm.$invalid) {\r\n\r\n        const question = await questionServices.updateQuestion(this.updateQuestionForm, this.questionToupdate.id);\r\n        this.updateQuestionForm.question = \"\";\r\n        this.updateQuestionForm.pageEnd = \"\";\r\n        this.updateQuestionForm.pageStart = \"\";\r\n        this.updateQuestionForm.quotation = [{ text: '' }];\r\n        this.v$.updateQuestionForm.$reset()\r\n      }\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}