{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"sidebar-body pt-0 data-scrollbar\"\n};\nvar _hoisted_2 = {\n  \"class\": \"sidebar-list\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"sidebar-footer\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_vertical_nav = _resolveComponent(\"vertical-nav\");\n\n  return _openBlock(), _createElementBlock(\"aside\", {\n    \"class\": _normalizeClass(\"sidebar sidebar-default \".concat($setup.sidebarMenuStyle, \" \").concat($setup.sidebarType.join(' '))),\n    id: \"first-tour\",\n    \"data-toggle\": \"main-sidebar\",\n    \"data-sidebar\": \"responsive\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_vertical_nav)])]), _hoisted_3], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;EAES,SAAM;;;EACF,SAAM;;;8BAIfA,oBAAkC,KAAlC,EAAkC;EAA7B,SAAM;AAAuB,CAAlC,EAA2B,IAA3B,EAA2B;AAAA;AAA3B;;;;;uBANAC,oBAOI,OAPJ,EAOI;IAPI,SAAKC,kDAA6BC,uBAA7B,cAAiDA,mBAAYC,IAAZ,CAAgB,GAAhB,CAAjD,EAOT;IAPmFC,EAAE,EAAC,YAOtF;IAPmG,eAAY,cAO/G;IAP8H,gBAAa;EAO3I,CAPJ,GACAL,oBAIM,KAJN,cAIM,CAHFA,oBAEM,KAFN,cAEM,CADFM,aAAeC,uBAAf,CACE,CAFN,CAGE,CAJN,GAKAC,WANA;;EAAA","names":["_createElementVNode","_createElementBlock","_normalizeClass","$setup","join","id","_createVNode","_component_vertical_nav","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\custom\\partials\\Sidebar\\DefaultSidebar.vue"],"sourcesContent":["<template>\n    <aside :class=\"`sidebar sidebar-default ${sidebarMenuStyle} ${sidebarType.join(' ')}`\" id=\"first-tour\" data-toggle=\"main-sidebar\" data-sidebar=\"responsive\">\n    <div class=\"sidebar-body pt-0 data-scrollbar\">\n        <div class=\"sidebar-list\">\n            <vertical-nav/>\n        </div>\n    </div>\n    <div class=\"sidebar-footer\"></div>\n</aside>\n</template>\n<script>\nimport VerticalNav from './VerticalNav.vue'\nimport { onMounted, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport Scrollbar from 'smooth-scrollbar'\nimport UserInfo from '../../../services/userInfo.service'\n\nexport default {\n  name: 'DefaultSidebar',\n  components: { VerticalNav },\n  data(){\n    return{\n      role:'',\n    }\n  },\n  setup () {\n    const store = useStore()\n    const sidebarType = computed(() => store.getters['setting/sidebar_type'])\n    const sidebarMenuStyle = computed(() => store.getters['setting/sidebar_menu_style'])\n    const toggleSidebar = () => {\n      // Code Here\n      if (sidebarType.value.includes('sidebar-mini')) {\n        store.dispatch(\n          'setting/sidebar_type',\n          sidebarType.value.filter((item) => item !== 'sidebar-mini')\n        )\n      } else {\n        store.dispatch('setting/sidebar_type', [...sidebarType.value, 'sidebar-mini'])\n      }\n    }\n    onMounted(() => {\n      Scrollbar.init(document.querySelector('.data-scrollbar'), { continuousScrolling: false })\n      const resizePlugins = () => {\n        // For sidebar-mini & responsive\n        const sidebarResponsive = document.querySelector('[data-sidebar=\"responsive\"]')\n        if (window.innerWidth < 1025) {\n          if (sidebarResponsive !== null) {\n            if (!sidebarResponsive.classList.contains('sidebar-mini')) {\n              sidebarResponsive.classList.add('sidebar-mini', 'on-resize')\n            }\n          }\n        } else {\n          if (sidebarResponsive !== null) {\n            if (sidebarResponsive.classList.contains('sidebar-mini') && sidebarResponsive.classList.contains('on-resize')) {\n              sidebarResponsive.classList.remove('sidebar-mini', 'on-resize')\n            }\n          }\n        }\n      }\n\n      /* ------------DOMContentLoaded-------------- */\n      document.addEventListener('DOMContentLoaded', (event) => {\n        resizePlugins()\n      })\n      /* ------------Window Resize------------------ */\n      window.addEventListener('resize', function (event) {\n        resizePlugins()\n      })\n    })\n    return { sidebarType, sidebarMenuStyle, toggleSidebar }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}