{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\nimport questionServices from '../../api/questionServices';\nexport default {\n  name: \"UpdateQuestion\",\n  created: function created() {},\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  props: {\n    question: {\n      type: [Object],\n      required: true\n    },\n    book: {\n      type: [Object],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: this.$route.params.id,\n        quotes: [{\n          text: ''\n        }]\n      }\n    };\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        question: {\n          required: required\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(2)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"mappings":";AAyDA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,eAAe;EACbC,IAAI,EAAE,gBADO;EAEbC,OAFa,qBAEH,CACT,CAHY;EAIbC,KAJa,mBAIL;IACN,OAAO;MAAEC,EAAE,EAAEP,YAAY;IAAlB,CAAP;EACD,CANY;EAObQ,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAE,CAACC,MAAD,CADE;MAERV,QAAQ,EAAE;IAFF,CADL;IAKLW,IAAI,EAAE;MACJF,IAAI,EAAE,CAACC,MAAD,CADF;MAEJV,QAAQ,EAAE;IAFN;EALD,CAPM;EAkBbY,IAlBa,kBAkBN;IACL,OAAO;MACLC,YAAY,EAAE;QACZL,QAAQ,EAAE,EADE;QAEZM,aAAa,EAAE,EAFH;QAGZC,WAAW,EAAE,EAHD;QAIZC,YAAY,EAAE,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAJrB;QAKZC,MAAM,EAAE,CACN;UAAEC,IAAI,EAAE;QAAR,CADM;MALI;IADT,CAAP;EAWD,CA9BY;EA+BbC,WA/Ba,yBA+BC;IACZ,OAAO;MACLT,YAAY,EAAE;QACZL,QAAQ,EAAE;UACRR,QAAO,EAAPA;QADQ,CADE;QAGTc,aAAa,EAAE;UAChBd,QAAO,EAAPA;QADgB,CAHN;QAKTe,WAAW,EAAE;UACdf,QAAO,EAAPA;QADc,CALJ;QAOToB,MAAM,EAAE;UACTpB,QAAQ,EAARA,QADS;UAETC,SAAS,EAAEA,SAAS,CAAC,CAAD,CAFX;UAGTsB,KAAK,EAAE;YACLF,IAAI,EAAE;cAEJpB,SAAS,EAAEA,SAAS,CAAC,CAAD;YAFhB;UADD;QAHE;MAPC;IADT,CAAP;EAoBD,CApDY;EAqDbuB,OAAO,EAAE;IACPC,QADO,oBACEC,KADF,EACSC,SADT,EACoB;MAEzBA,SAAS,CAACC,IAAV,CAAe;QAAEP,IAAI,EAAE;MAAR,CAAf;IACD,CAJM;IAKPQ,WALO,uBAKKC,KALL,EAKYH,SALZ,EAKuB;MAC5BA,SAAS,CAACI,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;IACD;EAPM;AArDI,CAAf","names":["useVuelidate","required","minLength","questionServices","name","created","setup","v$","props","question","type","Object","book","data","questionForm","starting_page","ending_page","user_book_id","$route","params","id","quotes","text","validations","$each","methods","addField","value","fieldType","push","removeField","index","splice"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\Questions\\UpdateQuestion.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitQuestionForm\" class=\"post-text ml-3 w-100 row\">\r\n    <div class=\"form-group col-6\">\r\n      <select v-model=\"v$.questionForm.starting_page.$model\" class=\"form-select\" data-trigger\r\n        name=\"choices-single-default\" id=\"choices-single-default\">\r\n        <option value=\"\">اختر صفحة البداية</option>\r\n        <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n          {{ i }}\r\n        </option>\r\n      </select>\r\n      <small style=\"color:red;\" v-if=\"v$.questionForm.starting_page.$error\">الرجاء قم بادخال صفحة\r\n        البداية</small>\r\n    </div>\r\n    <div class=\"form-group col-6\">\r\n\r\n      <select class=\"form-select\" v-model=\"v$.questionForm.ending_page.$model\" data-trigger\r\n        name=\"choices-single-default\" id=\"choices-single-default\">\r\n        <option value=\"\">اختر صفحة النهاية</option>\r\n        <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n          {{ i }}\r\n        </option>\r\n      </select>\r\n      <small style=\"color:red;\" v-if=\"v$.questionForm.ending_page.$error\">الرجاء قم بادخال صفحة\r\n        النهاية</small>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \" class=\"rounded form-control\" id=\"bookQuestion\"\r\n        v-model=\"v$.questionForm.question.$model\"></textarea>\r\n      <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال السؤال </small>\r\n    </div>\r\n    <div>\r\n      <h4> الاقتباسات</h4>\r\n      <hr>\r\n    </div>\r\n    <div class=\"form-group\">\r\n\r\n      <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \" v-for=\"(v,index) in questionForm.quotes\" :key=\"index\"\r\n        class=\"rounded form-control mt-2\" id=\"bookQuote\" v-model=\"v.text\">\r\n                </textarea>\r\n      <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال اقتباس واحد على الاقل\r\n      </small>\r\n      <hr>\r\n      <a class=\"btn btn-primary rounded-pill mb-3 me-1\" @click=\"addField(textarea, questionForm.quotes)\">\r\n        اضافة اقتباس\r\n      </a>\r\n      <a class=\"btn btn-danger rounded-pill mb-3 me-1\" v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n        @click=\"removeField(index, questionForm.quotes)\">\r\n        حذف اقتباس\r\n      </a>\r\n\r\n\r\n    </div>\r\n    <input type=\"submit\" value=\"تعديل\" href=\"javascript:void(0);\" class=\"btn btn-primary d-block mt-3\" />\r\n  </form>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices'\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  created() {\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  props: {\r\n    question: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n    book: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      questionForm: {\r\n        question: '',\r\n        starting_page: \"\",\r\n        ending_page: \"\",\r\n        user_book_id: this.$route.params.id,\r\n        quotes: [\r\n          { text: '' }\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      questionForm: {\r\n        question: {\r\n          required\r\n        }, starting_page: {\r\n          required\r\n        }, ending_page: {\r\n          required\r\n        }, quotes: {\r\n          required,\r\n          minLength: minLength(1),\r\n          $each: {\r\n            text: {\r\n\r\n              minLength: minLength(2)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    addField(value, fieldType) {\r\n\r\n      fieldType.push({ text: \"\" });\r\n    },\r\n    removeField(index, fieldType) {\r\n      fieldType.splice(index, 1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}