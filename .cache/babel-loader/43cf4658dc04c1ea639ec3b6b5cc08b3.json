{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": _normalizeClass($props.isdismissable ? \"alert  alert-dismissible  \".concat($props.className, \" alert-\") + $props.variant : \"alert  \".concat($props.className, \" alert-\") + $props.variant),\n    ref: \"alert\",\n    role: \"alert\"\n  }, [$props.isheader ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    \"class\": _normalizeClass(\"alert-heading \".concat($props.headingClass))\n  }, _toDisplayString($props.headerText), 3\n  /* TEXT, CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _renderSlot(_ctx.$slots, \"default\"), $props.isdismissable ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    type: \"button\",\n    \"class\": _normalizeClass(\"btn-close \".concat($props.buttonClass)),\n    \"data-bs-dismiss\": \"alert\",\n    \"aria-label\": \"Close\"\n  }, null, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;uBACAA,oBAIM,KAJN,EAIM;IAJA,SAAKC,gBAAEC,uBAAa,oCAA+BA,gBAA/B,eAAkDA,cAA/D,GAAsE,iBAAaA,gBAAb,eAAgCA,cAAxG,CAIL;IAJsHC,GAAG,EAAC,OAI1H;IAJkIC,IAAI,EAAC;EAIvI,CAJN,GACeF,iCAAXF,oBAAkF,KAAlF,EAAkF;UAAA;IAA5D,SAAKC,wCAAmBC,mBAAnB;EAAuD,CAAlF,mBAAgEA,kBAAhE,EAA0E;EAAA;EAA1E,wCACAG,YAAOC,WAAP,EAAO,SAAP,GACcJ,sCAAdF,oBAAmI,QAAnI,EAAmI;UAAA;IAAtGO,IAAI,EAAC,QAAiG;IAAvF,SAAKN,oCAAeC,kBAAf,EAAkF;IAApD,mBAAgB,OAAoC;IAA5B,cAAW;EAAiB,CAAnI;;EAAA,uCAHJ;;EAAA","names":["_createElementBlock","_normalizeClass","$props","ref","role","_renderSlot","_ctx","type"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\bootstrap\\alert\\alert.vue"],"sourcesContent":["<template>\n<div :class=\"isdismissable? `alert  alert-dismissible  ${className} alert-`+variant : `alert  ${className} alert-`+variant\" ref=\"alert\" role=\"alert\">\n    <div v-if=\"isheader\" :class=\"`alert-heading ${headingClass}`\">{{headerText}}</div>\n    <slot/>\n    <button v-if=\"isdismissable\" type=\"button\" :class=\"`btn-close ${buttonClass}`\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n</div>\n</template>\n<script>\nimport { Alert } from 'bootstrap'\nexport default {\n  name: 'alert',\n  props: {\n    variant: { type: String },\n    className: { type: String, default: '' },\n    headingClass: { type: String, default: '' },\n    isdismissable: { type: Boolean, default: false },\n    isheader: { type: Boolean, default: false },\n    headerText: { type: String },\n    buttonClass: { type: String }\n  },\n  data () {\n    return {\n      elem: {}\n    }\n  },\n  mounted () {\n    this.elem = new Alert(this.$refs.alert)\n    this.initClose()\n    this.initClosed()\n  },\n  methods: {\n    initClose () {\n      this.$refs.alert.addEventListener('close.bs.alert', () => {\n        this.$emit('close')\n      })\n    },\n    initClosed () {\n      this.$refs.alert.addEventListener('closed.bs.alert', () => {\n        this.$emit('closed')\n      })\n    },\n    destroyClose () {\n       (this.$refs.alert)\n      this.$refs.alert.removeListener('close.bs.alert')\n    },\n    destroyClosed () {\n      this.$refs.alert.removeListener('closed.bs.alert')\n    }\n  }\n  // unmounted () {\n  //   this.destroyClose()\n  //   this.destroyClosed()\n  // }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}