{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport useVuelidate from '@vuelidate/core';\nimport { required, email } from '@vuelidate/validators';\nexport default {\n  name: \"ForgetPassword\",\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {},\n  data: function data() {\n    return {\n      form: {\n        email: ''\n      },\n      error: '',\n      submitStatus: null,\n      options: {\n        centeredSlides: false,\n        loop: false,\n        slidesPerView: 1,\n        autoplay: {\n          delay: 3000\n        },\n        spaceBetween: 15,\n        pagination: {\n          el: '.swiper-pagination'\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        },\n        // And if we need scrollbar\n        scrollbar: {\n          el: '.swiper-scrollbar'\n        }\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.v$.$touch();\n\n                if (_this.v$.form.$invalid) {\n                  console.log('hi');\n                } else {\n                  _this.$store.dispatch('login', {\n                    email: _this.form.email,\n                    password: _this.form.password\n                  }).then(_this.$router.push({\n                    name: 'social.book'\n                  }));\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  validations: function validations() {\n    return {\n      form: {\n        email: {\n          required: required,\n          email: email\n        }\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";;AAuCA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,uBAAhC;AAEA,eAAe;EACbC,IAAI,EAAE,gBADO;EAEbC,KAFa,mBAEL;IACN,OAAO;MAAEC,EAAE,EAAEL,YAAY;IAAlB,CAAP;EACD,CAJY;EAKbM,UAAU,EAAE,EALC;EAMbC,IANa,kBAMN;IACL,OAAO;MACLC,IAAI,EAAE;QACJN,KAAK,EAAE;MADH,CADD;MAILO,KAAK,EAAE,EAJF;MAKLC,YAAY,EAAE,IALT;MAMLC,OAAO,EAAE;QACPC,cAAc,EAAE,KADT;QAEPC,IAAI,EAAE,KAFC;QAGPC,aAAa,EAAE,CAHR;QAIPC,QAAQ,EAAE;UACRC,KAAK,EAAE;QADC,CAJH;QAOPC,YAAY,EAAE,EAPP;QAQPC,UAAU,EAAE;UACVC,EAAE,EAAE;QADM,CARL;QAWPC,UAAU,EAAE;UACVC,MAAM,EAAE,qBADE;UAEVC,MAAM,EAAE;QAFE,CAXL;QAgBP;QACAC,SAAS,EAAE;UACTJ,EAAE,EAAE;QADK;MAjBJ;IANJ,CAAP;EA4BD,CAnCY;EAqCbK,OAAO,EAAE;IACDC,MADC,oBACQ;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACb,KAAI,CAACpB,EAAL,CAAQqB,MAAR;;gBACA,IAAI,KAAI,CAACrB,EAAL,CAAQG,IAAR,CAAamB,QAAjB,EAA2B;kBACzBC,OAAO,CAACC,GAAR,CAAY,IAAZ;gBACF,CAFA,MAEO;kBACL,KAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqB,OAArB,EAA8B;oBAC5B7B,KAAK,EAAE,KAAI,CAACM,IAAL,CAAUN,KADW;oBAE5B8B,QAAQ,EAAE,KAAI,CAACxB,IAAL,CAAUwB;kBAFQ,CAA9B,EAGGC,IAHH,CAGQ,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB;oBAAEhC,IAAI,EAAE;kBAAR,CAAlB,CAHR;gBAIF;;cATa;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUf;EAXO,CArCI;EAkDbiC,WAlDa,yBAkDC;IACZ,OAAO;MACL5B,IAAI,EAAE;QACJN,KAAK,EAAE;UACLD,QAAQ,EAARA,QADK;UAELC,KAAI,EAAJA;QAFK;MADH;IADD,CAAP;EAQD;AA3DY,CAAf","names":["useVuelidate","required","email","name","setup","v$","components","data","form","error","submitStatus","options","centeredSlides","loop","slidesPerView","autoplay","delay","spaceBetween","pagination","el","navigation","nextEl","prevEl","scrollbar","methods","submit","$touch","$invalid","console","log","$store","dispatch","password","then","$router","push","validations"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\AuthPages\\Default\\forgot-password.vue"],"sourcesContent":["<template>\n    <div class=\"col-sm-12 mt-3\" >\n      <iq-card class=\"iq-card\">\n        <div class=\"iq-card-body p-0\">\n          <div class=\"image-block text-center\">\n            <img src=\"@/assets/images/forgot-password.png\" class=\"img-fluid rounded w-25\" alt=\"blog-img\">\n          </div>\n          <h4 class=\"text-center\">\n            أدخل بريدك الالكتروني\n          </h4>\n          <form class=\"mt-4\" @submit.prevent=\"submit\">\n              <div class=\"form-group\">\n                <label class=\"form-label\" for=\"exampleInputEmail1\">الايميل</label>\n                <input type=\"email\" class=\"form-control mb-0\" id=\"exampleInputEmail1\" placeholder=\"ادخال الايميل هنا\"\n                  v-model=\"v$.form.email.$model\">\n                <p style=\"color:red\"  v-if=\"v$.form.email.$error\">الرجاء قم بادخال البريد الالكتروني</p>\n              </div>\n              <div class=\"d-inline-block w-100\">             \n                <button type=\"submit\" class=\"btn btn-primary \">ارسال</button>\n                <button type=\"submit\" class=\"btn btn-primary \">اعادة ارسال</button>\n                <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\n              </div>\n            </form>\n            \n            <div class=\"d-inline-block w-100 text-center\">\n              <button\n                type=\"submit\"\n                class=\"btn d-block btn-primary mt-3 mb-3 w-75 mx-auto\"\n                @click=\"sendMail\"\n              >\n                  اعادة ارسال البريد الالكتروني\n              </button>\n            </div>\n        </div>\n      </iq-card>\n\n    </div>\n</template>\n<script>\nimport useVuelidate from '@vuelidate/core'\nimport { required, email } from '@vuelidate/validators'\n\nexport default {\n  name: \"ForgetPassword\",\n  setup() {\n    return { v$: useVuelidate() }\n  },\n  components: {},\n  data() {\n    return {\n      form: {\n        email: '',\n      },\n      error: '',\n      submitStatus: null,\n      options: {\n        centeredSlides: false,\n        loop: false,\n        slidesPerView: 1,\n        autoplay: {\n          delay: 3000\n        },\n        spaceBetween: 15,\n        pagination: {\n          el: '.swiper-pagination'\n        },\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        },\n\n        // And if we need scrollbar\n        scrollbar: {\n          el: '.swiper-scrollbar'\n        }\n      }\n    }\n  },\n \n  methods: {\n    async submit() {\n      this.v$.$touch()\n      if (this.v$.form.$invalid) {\n        console.log('hi')\n      } else {\n        this.$store.dispatch('login', {\n          email: this.form.email,\n          password: this.form.password\n        }).then(this.$router.push({ name: 'social.book' }))\n      }\n    }\n  },\n  validations() {\n    return {\n      form: {\n        email: {\n          required,\n          email\n        },\n      },\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}