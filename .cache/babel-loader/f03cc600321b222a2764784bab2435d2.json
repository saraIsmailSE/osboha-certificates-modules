{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, integer, requiredIf } from \"@vuelidate/validators\";\nimport thesisServices from '../../api/thesisServices';\nexport default {\n  name: \"UpdateThesis\",\n  created: function created() {\n    this.updateForm.text = this.thesisToupdate.thesis_text;\n    this.updateForm.pageStart = this.thesisToupdate.starting_page;\n    this.updateForm.pageEnd = this.thesisToupdate.ending_page;\n  },\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  props: {\n    book: {\n      type: [Object],\n      required: true\n    },\n    noOfThesis: {\n      type: [Number],\n      required: true\n    },\n    thesisToupdate: {\n      type: [Object],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      updateForm: {\n        text: \"\",\n        pageStart: \"\",\n        pageEnd: \"\",\n        file: [],\n        pages: 0\n      }\n    };\n  },\n  validations: function validations() {\n    return {\n      updateForm: {\n        text: {\n          required: required\n        },\n        pageStart: {\n          required: required\n        },\n        pageEnd: {\n          required: required\n        },\n        file: {\n          required: requiredIf(function (nestedModel) {\n            return this.updateForm.file.length == 0; // New changes\n          })\n        }\n      }\n    };\n  },\n  methods: {\n    submitUpdate: function submitUpdate() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var thesis;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.v$.$touch();\n\n                if (_this.v$.thesis.$invalid) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 4;\n                return thesisServices.updateThesis(_this.thesis, _this.$route.params.id);\n\n              case 4:\n                thesis = _context.sent;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    uploadFile: function uploadFile() {\n      console.log(this.$refs); // this.updateForm.file = this.$refs.file.files;\n    }\n  }\n};","map":{"version":3,"mappings":";;;AA+CA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,uBAA9C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,eAAe;EACbC,IAAI,EAAE,cADO;EAEbC,OAFa,qBAEJ;IAEP,KAAKC,UAAL,CAAgBC,IAAhB,GAAqB,KAAKC,cAAL,CAAoBC,WAAzC;IACA,KAAKH,UAAL,CAAgBI,SAAhB,GAA0B,KAAKF,cAAL,CAAoBG,aAA9C;IACA,KAAKL,UAAL,CAAgBM,OAAhB,GAAwB,KAAKJ,cAAL,CAAoBK,WAA5C;EAED,CARY;EAUbC,KAVa,mBAUL;IACN,OAAO;MAAEC,EAAE,EAAEhB,YAAY;IAAlB,CAAP;EACD,CAZY;EAabiB,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAE,CAACC,MAAD,CADF;MAEJnB,QAAQ,EAAE;IAFN,CADD;IAKLoB,UAAU,EAAE;MACVF,IAAI,EAAE,CAACG,MAAD,CADI;MAEVrB,QAAQ,EAAE;IAFA,CALP;IASLQ,cAAc,EAAE;MACdU,IAAI,EAAE,CAACC,MAAD,CADQ;MAEdnB,QAAQ,EAAE;IAFI;EATX,CAbM;EA2BbsB,IA3Ba,kBA2BN;IACL,OAAO;MACLhB,UAAU,EAAE;QACVC,IAAI,EAAE,EADI;QAEVG,SAAS,EAAE,EAFD;QAGVE,OAAO,EAAE,EAHC;QAIVW,IAAI,EAAE,EAJI;QAKVC,KAAK,EAAC;MALI;IADP,CAAP;EASD,CArCY;EAsCbC,WAtCa,yBAsCC;IACZ,OAAO;MACLnB,UAAU,EAAE;QACVC,IAAI,EAAE;UACJP,QAAQ,EAARA;QADI,CADI;QAIVU,SAAS,EAAE;UACTV,QAAQ,EAARA;QADS,CAJD;QAOVY,OAAO,EAAE;UACPZ,QAAQ,EAARA;QADO,CAPC;QAUVuB,IAAI,EAAE;UACJvB,QAAQ,EAAEE,UAAU,CAAC,UAAUwB,WAAV,EAAuB;YAC1C,OAAO,KAAKpB,UAAL,CAAgBiB,IAAhB,CAAqBI,MAArB,IAA+B,CAAtC,CAD0C,CACD;UAC1C,CAFmB;QADhB;MAVI;IADP,CAAP;EAkBD,CAzDY;EA0DbC,OAAO,EAAE;IACDC,YADC,0BACc;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEnB,KAAI,CAACd,EAAL,CAAQe,MAAR;;gBAFmB,IAGd,KAAI,CAACf,EAAL,CAAQgB,MAAR,CAAeC,QAHD;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAIM7B,cAAc,CAAC8B,YAAf,CAA4B,KAAI,CAACF,MAAjC,EAAwC,KAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmBC,EAA3D,CAJN;;cAAA;gBAITL,MAJS;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMpB,CAPM;IAQLM,UARK,wBAQQ;MACXC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADW,CAEb;IACD;EAXM;AA1DI,CAAf","names":["useVuelidate","required","integer","requiredIf","thesisServices","name","created","updateForm","text","thesisToupdate","thesis_text","pageStart","starting_page","pageEnd","ending_page","setup","v$","props","book","type","Object","noOfThesis","Number","data","file","pages","validations","nestedModel","length","methods","submitUpdate","$touch","thesis","$invalid","updateThesis","$route","params","id","uploadFile","console","log","$refs"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\Thesis\\UpdateThesis.vue"],"sourcesContent":["<template>\r\n      <div>\r\n      <iq-card id=\"post-modal-data\" body-class=\"iq-card iq-card-block iq-card-stretch iq-card-height\">\r\n        <template v-slot:body>\r\n          <div class=\"d-flex align-items-center\">\r\n            <form @submit.prevent=\"submitUpdate\" class=\"post-text ml-3 w-100 row\" v-if=\"book\">\r\n              <div class=\"form-group col-6\">\r\n                <select class=\"form-select\" data-trigger name=\"choices-single-default\" id=\"choices-single-default\"\r\n                  v-model=\"v$.updateForm.pageStart.$model\">\r\n                  <option value=\"\">اختر صفحة البداية</option>\r\n                  <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                    {{ i }}\r\n                  </option>\r\n                </select>\r\n                <small style=\"color:red;\" v-if=\"v$.updateForm.pageStart.$error\">الرجاء قم بادخال صفحة البداية</small>\r\n              </div>  \r\n              <div class=\"form-group col-6\">\r\n                <select class=\"form-select\" data-trigger name=\"choices-single-default\" id=\"choices-single-default\"\r\n                  v-model=\"v$.updateForm.pageEnd.$model\">\r\n                  <option value=\"\">اختر صفحة النهاية</option>\r\n                  <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                    {{ i }}\r\n                  </option>\r\n                </select>\r\n                <small style=\"color:red;\" v-if=\"v$.updateForm.pageEnd.$error\">الرجاء قم بادخال صفحة النهاية</small>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\" for=\"thesisBody\">الأطروحة</label>\r\n                <textarea rows=\"5\" placeholder=\"... اكتب أطروحتك\" class=\"rounded form-control\" id=\"thesisBody\"\r\n                  v-model=\"v$.updateForm.text.$model\"></textarea>\r\n                <p class=\"error\" v-if=\"v$.updateForm.text.$error\">الرجاء قم بكتابة الأطروحة </p>\r\n              </div>\r\n  \r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\" for=\"customFile\">صورة من مجموعة السفراء</label>\r\n              <input class=\"form-control\" type=\"file\" id=\"customFile\" ref=\"file\" @change=\"uploadFile\" multiple />\r\n                <small style=\"color:red;\" v-if=\"v$.updateForm.file.$error\">الرجاء قم برفع صورة او صورتين</small>\r\n              </div>  \r\n              <input type=\"submit\" value=\"تعديل\" href=\"javascript:void(0);\" class=\"btn btn-primary d-block mt-3\" />\r\n            </form>\r\n          </div>\r\n          <hr />\r\n        </template>\r\n      </iq-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, integer, requiredIf } from \"@vuelidate/validators\";\r\nimport thesisServices from '../../api/thesisServices'\r\nexport default {\r\n  name: \"UpdateThesis\",\r\n  created(){\r\n    \r\n    this.updateForm.text=this.thesisToupdate.thesis_text;\r\n    this.updateForm.pageStart=this.thesisToupdate.starting_page;\r\n    this.updateForm.pageEnd=this.thesisToupdate.ending_page;\r\n\r\n  },\r\n  \r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  props: {\r\n    book: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n    noOfThesis: {\r\n      type: [Number],\r\n      required: true,\r\n    },\r\n    thesisToupdate: {\r\n      type: [Object],\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      updateForm: {\r\n        text: \"\",\r\n        pageStart: \"\",\r\n        pageEnd: \"\",\r\n        file: [],\r\n        pages:0,\r\n      },\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      updateForm: {\r\n        text: {\r\n          required,\r\n        },\r\n        pageStart: {\r\n          required,\r\n        },\r\n        pageEnd: {\r\n          required,\r\n        },\r\n        file: {\r\n          required: requiredIf(function (nestedModel) {\r\n            return this.updateForm.file.length == 0; // New changes\r\n          }),\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async submitUpdate() {\r\n  \r\n      this.v$.$touch();\r\n      if (!this.v$.thesis.$invalid) {\r\n          const thesis = await thesisServices.updateThesis(this.thesis,this.$route.params.id)\r\n      } \r\n    },\r\n      uploadFile() { \r\n        console.log(this.$refs)\r\n      // this.updateForm.file = this.$refs.file.files;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}