{"ast":null,"code":"import { renderSlot as _renderSlot, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = [\"id\", \"data-toggle\", \"href\", \"role\", \"aria-controls\", \"aria-selected\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", {\n    \"class\": _normalizeClass($props.liClass)\n  }, [_createElementVNode(\"a\", {\n    \"class\": _normalizeClass('nav-link ' + $data.className + ' ' + $props.widthclass),\n    id: $props.id,\n    \"data-toggle\": $props.dataToggle,\n    href: $options.url,\n    role: $props.role,\n    \"aria-controls\": $props.ariaControls,\n    \"aria-selected\": $props.ariaSelected\n  }, [$options.hasTitleSlot ? _renderSlot(_ctx.$slots, \"title\", {\n    key: 0\n  }) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($props.title), 1)], 64))], 10, _hoisted_1)], 2);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAKK,IALL,EAKK;IALA,SAAKC,gBAAEC,cAAF;EAKL,CALL,GACEC,oBAGI,GAHJ,EAGI;IAHA,SAAKF,8BAAcG,eAAd,GAAuB,GAAvB,GAA4BF,iBAA5B,CAGL;IAH8CG,EAAE,EAAEH,SAGlD;IAHuD,eAAaA,iBAGpE;IAHiFI,IAAI,EAAEC,YAGvF;IAH6FC,IAAI,EAAEN,WAGnG;IAH0G,iBAAeA,mBAGzH;IAHwI,iBAAeA;EAGvJ,CAHJ,GAC2BK,wBAAzBE,YAAwCC,WAAxC,EAAwC,OAAxC,EAAwC;IAAAC;EAAA,CAAxC,mBACAX,oBAAuCY,SAAvC,EAAuC;IAAAD;EAAA,CAAvC,EAAuC,mCAAnBT,eAAK,EAAc,CAAvC,OAFF,kBADF","names":["_createElementBlock","_normalizeClass","$props","_createElementVNode","$data","id","href","$options","role","_renderSlot","_ctx","key","_Fragment"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\bootstrap\\tab\\tab-nav-items.vue"],"sourcesContent":["<template>\n  <li :class=\"liClass\">\n    <a :class=\"'nav-link '+className+' '+widthclass\" :id=\"id\" :data-toggle=\"dataToggle\" :href=\"url\" :role=\"role\" :aria-controls=\"ariaControls\" :aria-selected=\"ariaSelected\">\n      <slot name=\"title\" v-if=\"hasTitleSlot\"/>\n      <template v-else>{{ title }}</template>\n    </a>\n  </li>\n</template>\n<script>\nexport default {\n  name: 'tab-nav-items',\n  props: {\n    id: { type: String, default: '' },\n    active: { type: Boolean, default: false },\n    role: { type: String, default: 'tab' },\n    ariaControls: { type: String, default: 'tabpanel' },\n    ariaSelected: { type: Boolean, default: false },\n    dataToggle: { type: String, default: 'tab' },\n    href: { type: String, default: '' },\n    title: { type: String, default: '' },\n    liClass: { type: String, default: 'nav-item' },\n    widthclass: { type: String, default: '' }\n  },\n  mounted () {\n    if (this.active) {\n      this.className = 'active'\n    }\n  },\n  computed: {\n    hasTitleSlot () {\n      return !!this.$slots.title\n    },\n    url () {\n      if (this.href === '') {\n        return '#' + this.ariaControls\n      }\n      return this.href\n    }\n  },\n  data () {\n    return {\n      className: ''\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}