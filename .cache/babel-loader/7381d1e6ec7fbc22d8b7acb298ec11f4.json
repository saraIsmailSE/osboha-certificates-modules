{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: \"Chart\",\n  created: function created() {},\n  props: {\n    percintage: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    drawFluidMask: function drawFluidMask(layer) {\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      context.beginPath();\n      context.lineTo(0, layer.initialHeight);\n\n      while (x < options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        context.lineTo(x, y);\n        x++;\n      }\n\n      context.lineTo(x, options.size);\n      context.lineTo(0, options.size);\n      context.closePath();\n      context.clip();\n    },\n    drawBubblesLayer: function drawBubblesLayer(dt) {\n      context.save();\n\n      for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\n        var bubble = bubblesLayer.bubbles[i];\n        context.beginPath();\n        context.strokeStyle = 'white';\n        context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\n        context.stroke();\n        context.closePath();\n        var currentSpeed = bubblesLayer.current * dt;\n        bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\n        bubble.y = bubble.y - bubble.velY * dt;\n        bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5; // determine if current bubble is outside the safe area\n\n        var meterBottom = options.size - (options.size - getMeterRadius()) / 2 - options.borderWidth;\n        var fluidAmount = currentFillPercentage * (getMeterRadius() - options.borderWidth * 2) / 100;\n\n        if (bubble.y <= meterBottom - fluidAmount) {\n          bubblesLayer.reset(bubble);\n        }\n      }\n\n      context.restore();\n    },\n    drawText: function drawText() {\n      var text = options.drawPercentageSign ? currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\n      context.save();\n      context.font = getFontSize();\n      context.fillStyle = options.fontFillStyle;\n      context.textAlign = \"center\";\n      context.textBaseline = 'middle';\n      context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\";\n      context.fillText(text, options.size / 2, options.size / 2);\n      context.restore();\n    },\n    //#region helper methods\n    clamp: function clamp(number, min, max) {\n      return Math.min(Math.max(number, min), max);\n    },\n    getMeterRadius: function getMeterRadius() {\n      return options.size * 0.9;\n    },\n    random: function random(min, max) {\n      var delta = max - min;\n      return max === min ? min : Math.random() * delta + min;\n    },\n    getFontSize: function getFontSize() {\n      return options.fontSize + \" \" + options.fontFamily;\n    },\n    init: function init(env) {\n      if (!env.targetContainer) throw \"empty or invalid container\";\n      targetContainer = env.targetContainer;\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\n\n      if (env.options) {\n        options.drawShadow = env.options.drawShadow === false ? false : true;\n        options.size = env.options.size;\n        options.drawBubbles = env.options.drawBubbles === false ? false : true;\n        options.borderWidth = env.options.borderWidth || options.borderWidth;\n        options.foregroundFluidColor = env.options.foregroundFluidColor || options.foregroundFluidColor;\n        options.backgroundFluidColor = env.options.backgroundFluidColor || options.backgroundFluidColor;\n        options.backgroundColor = env.options.backgroundColor || options.backgroundColor;\n        options.foregroundColor = env.options.foregroundColor || options.foregroundColor;\n        options.drawText = env.options.drawText === false ? false : true;\n        options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\n        options.fontSize = env.options.fontSize || options.fontSize;\n        options.fontFamily = env.options.fontFamily || options.fontFamily;\n        options.fontFillStyle = env.options.fontFillStyle || options.fontFillStyle; // fluid settings\n\n        if (env.options.foregroundFluidLayer) {\n          foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || foregroundFluidLayer.fillStyle;\n          foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || foregroundFluidLayer.angularSpeed;\n          foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || foregroundFluidLayer.maxAmplitude;\n          foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || foregroundFluidLayer.frequency;\n          foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || foregroundFluidLayer.horizontalSpeed;\n        }\n\n        if (env.options.backgroundFluidLayer) {\n          backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || backgroundFluidLayer.fillStyle;\n          backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || backgroundFluidLayer.angularSpeed;\n          backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || backgroundFluidLayer.maxAmplitude;\n          backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || backgroundFluidLayer.frequency;\n          backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || backgroundFluidLayer.horizontalSpeed;\n        }\n      }\n\n      bubblesLayer.init();\n      setupCanvas();\n      draw();\n    },\n    setPercentage: function setPercentage(percentage) {\n      fillPercentage = clamp(percentage, 0, 100);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","created","props","percintage","required","data","methods","drawFluidMask","layer","x","y","amplitude","maxAmplitude","Math","sin","angle","PI","context","beginPath","lineTo","initialHeight","options","size","horizontalPosition","frequency","closePath","clip","drawBubblesLayer","dt","save","i","bubblesLayer","bubbles","length","bubble","strokeStyle","arc","r","stroke","currentSpeed","current","velX","abs","velY","swing","cos","meterBottom","getMeterRadius","borderWidth","fluidAmount","currentFillPercentage","reset","restore","drawText","text","drawPercentageSign","toFixed","font","getFontSize","fillStyle","fontFillStyle","textAlign","textBaseline","filter","fillText","clamp","number","min","max","random","delta","fontSize","fontFamily","init","env","targetContainer","fillPercentage","drawShadow","drawBubbles","foregroundFluidColor","backgroundFluidColor","backgroundColor","foregroundColor","foregroundFluidLayer","angularSpeed","horizontalSpeed","backgroundFluidLayer","setupCanvas","draw","setPercentage","percentage"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\chart.vue"],"sourcesContent":["<template>\r\n  <div class=\"col  text-center\">\r\n    <div id=\"fluid-meter-3\"></div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"Chart\",\r\n  created() { },\r\n  props: {\r\n    percintage: {\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  methods: {\r\n    drawFluidMask(layer) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      context.beginPath();\r\n\r\n      context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        context.lineTo(x, y);\r\n        x++;\r\n      }\r\n      context.lineTo(x, options.size);\r\n      context.lineTo(0, options.size);\r\n      context.closePath();\r\n      context.clip();\r\n    },\r\n    drawBubblesLayer(dt) {\r\n      context.save();\r\n      for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\r\n        var bubble = bubblesLayer.bubbles[i];\r\n\r\n        context.beginPath();\r\n        context.strokeStyle = 'white';\r\n        context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\r\n        context.stroke();\r\n        context.closePath();\r\n\r\n        var currentSpeed = bubblesLayer.current * dt;\r\n\r\n        bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\r\n        bubble.y = bubble.y - bubble.velY * dt;\r\n        bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\r\n\r\n        // determine if current bubble is outside the safe area\r\n        var meterBottom = (options.size - (options.size - getMeterRadius()) / 2) - options.borderWidth;\r\n        var fluidAmount = currentFillPercentage * (getMeterRadius() - options.borderWidth * 2) / 100;\r\n\r\n        if (bubble.y <= meterBottom - fluidAmount) {\r\n          bubblesLayer.reset(bubble);\r\n        }\r\n\r\n      }\r\n      context.restore();\r\n    },\r\n    drawText() {\r\n\r\n      var text = options.drawPercentageSign ?\r\n        currentFillPercentage.toFixed(0) + \"%\" : currentFillPercentage.toFixed(0);\r\n\r\n      context.save();\r\n      context.font = getFontSize();\r\n      context.fillStyle = options.fontFillStyle;\r\n      context.textAlign = \"center\";\r\n      context.textBaseline = 'middle';\r\n      context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\"\r\n      context.fillText(text, options.size / 2, options.size / 2);\r\n      context.restore();\r\n    },\r\n    //#region helper methods\r\n    clamp(number, min, max) {\r\n      return Math.min(Math.max(number, min), max);\r\n    },\r\n    getMeterRadius() {\r\n      return options.size * 0.9;\r\n    },\r\n\r\n    random(min, max) {\r\n      var delta = max - min;\r\n      return max === min ? min : Math.random() * delta + min;\r\n    },\r\n\r\n    getFontSize() {\r\n      return options.fontSize + \" \" + options.fontFamily;\r\n    },\r\n    init: function (env) {\r\n      if (!env.targetContainer)\r\n        throw \"empty or invalid container\";\r\n\r\n      targetContainer = env.targetContainer;\r\n      fillPercentage = clamp(env.fillPercentage, 0, 100);\r\n\r\n      if (env.options) {\r\n        options.drawShadow = env.options.drawShadow === false ? false : true;\r\n        options.size = env.options.size;\r\n        options.drawBubbles = env.options.drawBubbles === false ? false : true;\r\n        options.borderWidth = env.options.borderWidth || options.borderWidth;\r\n        options.foregroundFluidColor = env.options.foregroundFluidColor || options.foregroundFluidColor;\r\n        options.backgroundFluidColor = env.options.backgroundFluidColor || options.backgroundFluidColor;\r\n        options.backgroundColor = env.options.backgroundColor || options.backgroundColor;\r\n        options.foregroundColor = env.options.foregroundColor || options.foregroundColor;\r\n\r\n        options.drawText = env.options.drawText === false ? false : true;\r\n        options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\r\n        options.fontSize = env.options.fontSize || options.fontSize;\r\n        options.fontFamily = env.options.fontFamily || options.fontFamily;\r\n        options.fontFillStyle = env.options.fontFillStyle || options.fontFillStyle;\r\n        // fluid settings\r\n\r\n        if (env.options.foregroundFluidLayer) {\r\n          foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || foregroundFluidLayer.fillStyle;\r\n          foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || foregroundFluidLayer.angularSpeed;\r\n          foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || foregroundFluidLayer.maxAmplitude;\r\n          foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || foregroundFluidLayer.frequency;\r\n          foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || foregroundFluidLayer.horizontalSpeed;\r\n        }\r\n\r\n        if (env.options.backgroundFluidLayer) {\r\n          backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || backgroundFluidLayer.fillStyle;\r\n          backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || backgroundFluidLayer.angularSpeed;\r\n          backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || backgroundFluidLayer.maxAmplitude;\r\n          backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || backgroundFluidLayer.frequency;\r\n          backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || backgroundFluidLayer.horizontalSpeed;\r\n        }\r\n      }\r\n      bubblesLayer.init();\r\n      setupCanvas();\r\n      draw();\r\n    },\r\n    setPercentage(percentage) {\r\n      fillPercentage = clamp(percentage, 0, 100);\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}