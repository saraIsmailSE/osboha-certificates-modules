{"ast":null,"code":"import _objectSpread from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport AuthService from '../services/auth.service';\nvar user = JSON.parse(localStorage.getItem('user'));\nvar initialState = user ? {\n  status: {\n    loggedIn: true\n  },\n  user: user\n} : {\n  status: {\n    loggedIn: false\n  },\n  user: null\n};\nexport var auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return AuthService.login(user).then(function (user) {\n        commit('loginSuccess', user);\n        return Promise.resolve(user);\n      }, function (error) {\n        commit('loginFailure');\n        return Promise.reject(error);\n      });\n    },\n    logout: function logout(_ref2) {\n      var commit = _ref2.commit;\n      AuthService.logout();\n      commit('logout');\n    },\n    register: function register(_ref3, user) {\n      var commit = _ref3.commit;\n      console.log(user);\n      return AuthService.register(user).then(function (response) {\n        commit('registerSuccess');\n        return Promise.resolve(response.data);\n      }, function (error) {\n        commit('registerFailure');\n        return Promise.reject(error);\n      });\n    },\n    refreshToken: function refreshToken(_ref4, accessToken) {\n      var commit = _ref4.commit;\n      commit('refreshToken', accessToken);\n    },\n    registerAdmin: function registerAdmin(_ref5, user) {\n      var commit = _ref5.commit;\n      return AuthService.registerAdmin(user).then(function (response) {\n        commit('registerSuccess');\n        return Promise.resolve(response.data);\n      }, function (error) {\n        commit('registerFailure');\n        return Promise.reject(error);\n      });\n    }\n  },\n  mutations: {\n    loginSuccess: function loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure: function loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout: function logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    registerSuccess: function registerSuccess(state) {\n      state.status.loggedIn = false;\n    },\n    registerFailure: function registerFailure(state) {\n      state.status.loggedIn = false;\n    },\n    refreshToken: function refreshToken(state, accessToken) {\n      state.status.loggedIn = true;\n      state.user = _objectSpread(_objectSpread({}, state.user), {}, {\n        accessToken: accessToken\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","user","JSON","parse","localStorage","getItem","initialState","status","loggedIn","auth","namespaced","state","actions","login","commit","then","Promise","resolve","error","reject","logout","register","console","log","response","data","refreshToken","accessToken","registerAdmin","mutations","loginSuccess","loginFailure","registerSuccess","registerFailure"],"sources":["C:/Users/someO/Desktop/vue/osboha-template/src/store/auth.module.js"],"sourcesContent":["import AuthService from '../services/auth.service';\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user\n  ? { status: { loggedIn: true }, user }\n  : { status: { loggedIn: false }, user: null };\n\nexport const auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    login({ commit }, user) {\n      return AuthService.login(user).then(\n        user => {\n          commit('loginSuccess', user);\n          return Promise.resolve(user);\n        },\n        error => {\n          commit('loginFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n    logout({ commit }) {\n      AuthService.logout();\n      commit('logout');\n    },\n    register({ commit }, user) {\n      console.log(user)\n      return AuthService.register(user).then(\n        response => {\n          commit('registerSuccess');\n          return Promise.resolve(response.data);\n        },\n        error => {\n          commit('registerFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n    refreshToken({ commit }, accessToken) {\n      commit('refreshToken', accessToken);\n    },\n    registerAdmin({ commit }, user) {\n      return AuthService.registerAdmin(user).then(\n        response => {\n          commit('registerSuccess');\n          return Promise.resolve(response.data);\n        },\n        error => {\n          commit('registerFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n  },\n  mutations: {\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    registerSuccess(state) {\n      state.status.loggedIn = false;\n    },\n    registerFailure(state) {\n      state.status.loggedIn = false;\n    },\n    refreshToken(state, accessToken) {\n      state.status.loggedIn = true;\n      state.user = { ...state.user, accessToken: accessToken };\n    }\n  }\n};\n "],"mappings":"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"},"metadata":{},"sourceType":"module"}