{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n\nrequire('./js-fluid-meter');\n\nimport FluidMeter from \"./js-fluid-meter\"; // <-- import\n\nexport default {\n  name: \"Chart\",\n  mounted: function mounted() {\n    console.log(FluidMeter.init);\n    this.currentFillPercentage = 80;\n    var env = {\n      targetContainer: document.getElementById(\"fluidDiv\"),\n      fillPercentage: 80,\n      options: {\n        fontSize: \"30px\",\n        drawPercentageSign: true,\n        drawBubbles: false,\n        size: 300,\n        borderWidth: 19,\n        backgroundColor: \"#e2e2e2\",\n        foregroundColor: \"#fafafa\",\n        foregroundFluidLayer: {\n          fillStyle: \"#16E1FF\",\n          angularSpeed: 30,\n          maxAmplitude: 5,\n          frequency: 30,\n          horizontalSpeed: -20\n        },\n        backgroundFluidLayer: {\n          fillStyle: \"#4F8FC6\",\n          angularSpeed: 100,\n          maxAmplitude: 3,\n          frequency: 22,\n          horizontalSpeed: 20\n        }\n      }\n    };\n    this.init(env);\n    this.setPercentage(90);\n  },\n  created: function created() {},\n  props: {\n    percintage: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        drawShadow: true,\n        drawText: true,\n        drawPercentageSign: true,\n        drawBubbles: true,\n        fontSize: \"70px\",\n        fontFamily: \"Arial\",\n        fontFillStyle: \"white\",\n        size: 300,\n        borderWidth: 25,\n        backgroundColor: \"#e2e2e2\",\n        foregroundColor: \"#fafafa\"\n      },\n      context: null,\n      targetContainer: null,\n      time: null,\n      dt: null,\n      currentFillPercentage: 0,\n      fillPercentage: 0,\n      //#region fluid context values\n      foregroundFluidLayer: {\n        fillStyle: \"purple\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 0,\n        maxAmplitude: 9,\n        frequency: 30,\n        horizontalSpeed: -150,\n        initialHeight: 0\n      },\n      backgroundFluidLayer: {\n        fillStyle: \"pink\",\n        angle: 0,\n        horizontalPosition: 0,\n        angularSpeed: 140,\n        maxAmplitude: 12,\n        frequency: 40,\n        horizontalSpeed: 150,\n        initialHeight: 0\n      }\n    };\n  },\n  methods: {\n    setupCanvas: function setupCanvas() {\n      var canvas = document.createElement('canvas');\n      canvas.width = this.options.size;\n      canvas.height = this.options.size;\n      canvas.imageSmoothingEnabled = true;\n      this.context = canvas.getContext(\"2d\");\n      this.targetContainer.appendChild(canvas); // shadow is not required  to be on the draw loop\n      //#region shadow\n\n      if (this.options.drawShadow) {\n        this.context.save();\n        this.context.beginPath();\n        this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\n        this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.fill();\n        this.context.restore();\n      } //#endregion\n\n    },\n    draw: function draw() {\n      var now = new Date().getTime();\n      this.dt = (now - (this.time || now)) / 1000;\n      this.time = now; // requestAnimationFrame(draw);\n\n      this.context.clearRect(0, 0, this.options.size, this.options.size);\n      this.drawMeterBackground();\n      this.drawFluid(this.dt);\n\n      if (this.options.drawText) {\n        this.drawText();\n      }\n\n      this.drawMeterForeground();\n    },\n    drawMeterBackground: function drawMeterBackground() {\n      this.context.save();\n      this.context.fillStyle = this.options.backgroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.fill();\n      this.context.restore();\n    },\n    drawMeterForeground: function drawMeterForeground() {\n      this.context.save();\n      this.context.lineWidth = this.options.borderWidth;\n      this.context.strokeStyle = this.options.foregroundColor;\n      this.context.beginPath();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\n      this.context.closePath();\n      this.context.stroke();\n      this.context.restore();\n    },\n    drawFluid: function drawFluid(dt) {\n      this.context.save();\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, Math.PI * 2);\n      this.context.clip();\n      this.drawFluidLayer(this.backgroundFluidLayer, this.dt);\n      this.drawFluidLayer(this.foregroundFluidLayer, this.dt);\n      this.context.restore();\n    },\n    drawFluidLayer: function drawFluidLayer(layer, dt) {\n      // calculate wave angle\n      if (layer.angularSpeed > 0) {\n        layer.angle += layer.angularSpeed * dt;\n        layer.angle = layer.angle < 0 ? layer.angle + 360 : layer.angle;\n      } // calculate horizontal position\n\n\n      layer.horizontalPosition += layer.horizontalSpeed * dt;\n\n      if (layer.horizontalSpeed > 0) {\n        layer.horizontalPosition > Math.pow(2, 53) ? 0 : layer.horizontalPosition;\n      } else if (layer.horizontalPosition < 0) {\n        layer.horizontalPosition < -1 * Math.pow(2, 53) ? 0 : layer.horizontalPosition;\n      }\n\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      var meterBottom = this.options.size - (this.options.size - this.getMeterRadius()) / 2 - this.options.borderWidth;\n      var fluidAmount = this.currentFillPercentage * (this.getMeterRadius() - this.options.borderWidth * 2) / 100;\n\n      if (this.currentFillPercentage < this.fillPercentage) {\n        this.currentFillPercentage += 15 * dt;\n      } else if (this.currentFillPercentage > this.fillPercentage) {\n        this.currentFillPercentage -= 15 * dt;\n      }\n\n      layer.initialHeight = meterBottom - fluidAmount;\n      this.context.save();\n      this.context.beginPath();\n      this.context.lineTo(0, layer.initialHeight);\n\n      while (x < this.options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        this.context.lineTo(x, y);\n        x++;\n      }\n\n      this.context.lineTo(x, this.options.size);\n      this.context.lineTo(0, this.options.size);\n      this.context.closePath();\n      this.context.fillStyle = layer.fillStyle;\n      this.context.fill();\n      this.context.restore();\n    },\n    drawFluidMask: function drawFluidMask(layer) {\n      var x = 0;\n      var y = 0;\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\n      this.context.beginPath();\n      this.context.lineTo(0, layer.initialHeight);\n\n      while (x < this.options.size) {\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\n        this.context.lineTo(x, y);\n        x++;\n      }\n\n      this.context.lineTo(x, this.options.size);\n      this.context.lineTo(0, this.options.size);\n      this.context.closePath();\n      this.context.clip();\n    },\n    // drawBubblesLayer(this.dt) {\n    //   this.context.save();\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\n    //     var bubble = bubblesLayer.bubbles[i];\n    //     this.context.beginPath();\n    //     this.context.strokeStyle = 'white';\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\n    //     this.context.stroke();\n    //     this.context.closePath();\n    //     var currentSpeed = bubblesLayer.current * this.dt;\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\n    //     bubble.y = bubble.y - bubble.velY * this.dt;\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\n    //     // determine if current bubble is outside the safe area\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\n    //     if (bubble.y <= meterBottom - fluidAmount) {\n    //       bubblesLayer.reset(bubble);\n    //     }\n    //   }\n    //   this.context.restore();\n    // },\n    drawText: function drawText() {\n      var text = this.options.drawPercentageSign ? this.currentFillPercentage.toFixed(0) + \"%\" : this.currentFillPercentage.toFixed(0);\n      this.context.save();\n      this.context.font = this.getFontSize();\n      this.context.fillStyle = this.options.fontFillStyle;\n      this.context.textAlign = \"center\";\n      this.context.textBaseline = 'middle';\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\";\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\n      this.context.restore();\n    },\n    //#region helper methods\n    clamp: function clamp(number, min, max) {\n      return Math.min(Math.max(number, min), max);\n    },\n    getMeterRadius: function getMeterRadius() {\n      return this.options.size * 0.9;\n    },\n    random: function random(min, max) {\n      var delta = max - min;\n      return max === min ? min : Math.random() * delta + min;\n    },\n    getFontSize: function getFontSize() {\n      return this.options.fontSize + \" \" + this.options.fontFamily;\n    },\n    init: function init(env) {\n      if (!env.targetContainer) throw \"empty or invalid container\";\n      this.targetContainer = env.targetContainer;\n      this.fillPercentage = this.clamp(env.fillPercentage, 0, 100);\n\n      if (env.options) {\n        this.options.drawShadow = env.options.drawShadow === false ? false : true;\n        this.options.size = env.options.size;\n        this.options.drawBubbles = env.options.drawBubbles === false ? false : true;\n        this.options.borderWidth = env.options.borderWidth || this.options.borderWidth;\n        this.options.foregroundFluidColor = env.options.foregroundFluidColor || this.options.foregroundFluidColor;\n        this.options.backgroundFluidColor = env.options.backgroundFluidColor || this.options.backgroundFluidColor;\n        this.options.backgroundColor = env.options.backgroundColor || this.options.backgroundColor;\n        this.options.foregroundColor = env.options.foregroundColor || this.options.foregroundColor;\n        this.options.drawText = env.options.drawText === false ? false : true;\n        this.options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\n        this.options.fontSize = env.options.fontSize || this.options.fontSize;\n        this.options.fontFamily = env.options.fontFamily || this.options.fontFamily;\n        this.options.fontFillStyle = env.options.fontFillStyle || this.options.fontFillStyle; // fluid settings\n\n        if (env.options.foregroundFluidLayer) {\n          this.foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || this.foregroundFluidLayer.fillStyle;\n          this.foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || this.foregroundFluidLayer.angularSpeed;\n          this.foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || this.foregroundFluidLayer.maxAmplitude;\n          this.foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || this.foregroundFluidLayer.frequency;\n          this.foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || this.foregroundFluidLayer.horizontalSpeed;\n        }\n\n        if (env.options.backgroundFluidLayer) {\n          this.backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\n          this.backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\n          this.backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\n          this.backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\n          this.backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\n        }\n      } // bubblesLayer.init();\n\n\n      this.setupCanvas();\n      this.draw();\n    },\n    setPercentage: function setPercentage(percentage) {\n      this.fillPercentage = this.clamp(percentage, 0, 100);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["require","FluidMeter","name","mounted","console","log","init","currentFillPercentage","env","targetContainer","document","getElementById","fillPercentage","options","fontSize","drawPercentageSign","drawBubbles","size","borderWidth","backgroundColor","foregroundColor","foregroundFluidLayer","fillStyle","angularSpeed","maxAmplitude","frequency","horizontalSpeed","backgroundFluidLayer","setPercentage","created","props","percintage","required","data","drawShadow","drawText","fontFamily","fontFillStyle","context","time","dt","angle","horizontalPosition","initialHeight","methods","setupCanvas","canvas","createElement","width","height","imageSmoothingEnabled","getContext","appendChild","save","beginPath","filter","arc","getMeterRadius","Math","PI","closePath","fill","restore","draw","now","Date","getTime","clearRect","drawMeterBackground","drawFluid","drawMeterForeground","lineWidth","strokeStyle","stroke","clip","drawFluidLayer","layer","pow","x","y","amplitude","sin","meterBottom","fluidAmount","lineTo","drawFluidMask","text","toFixed","font","getFontSize","textAlign","textBaseline","fillText","clamp","number","min","max","random","delta","foregroundFluidColor","backgroundFluidColor","percentage"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\chart.vue"],"sourcesContent":["<template>\r\n  <div class=\"col  text-center\">\r\n    <div id=\"fluidDiv\"></div>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nrequire('./js-fluid-meter');\r\nimport FluidMeter from \"./js-fluid-meter\"; // <-- import\r\nexport default {\r\n  name: \"Chart\",\r\n  mounted() {\r\n\r\n\r\n\r\nconsole.log( FluidMeter.init)\r\n\r\n    this.currentFillPercentage = 80\r\n    const env = {\r\n      targetContainer: document.getElementById(\"fluidDiv\"),\r\n      fillPercentage: 80,\r\n      options: {\r\n        fontSize: \"30px\",\r\n        drawPercentageSign: true,\r\n        drawBubbles: false,\r\n        size: 300,\r\n        borderWidth: 19,\r\n        backgroundColor: \"#e2e2e2\",\r\n        foregroundColor: \"#fafafa\",\r\n        foregroundFluidLayer: {\r\n          fillStyle: \"#16E1FF\",\r\n          angularSpeed: 30,\r\n          maxAmplitude: 5,\r\n          frequency: 30,\r\n          horizontalSpeed: -20\r\n        },\r\n        backgroundFluidLayer: {\r\n          fillStyle: \"#4F8FC6\",\r\n          angularSpeed: 100,\r\n          maxAmplitude: 3,\r\n          frequency: 22,\r\n          horizontalSpeed: 20\r\n        },\r\n      }\r\n    }\r\n    this.init(env);\r\n    this.setPercentage(90)\r\n\r\n  },\r\n  created() {\r\n  },\r\n  props: {\r\n    percintage: {\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n\r\n      options: {\r\n        drawShadow: true,\r\n        drawText: true,\r\n        drawPercentageSign: true,\r\n        drawBubbles: true,\r\n        fontSize: \"70px\",\r\n        fontFamily: \"Arial\",\r\n        fontFillStyle: \"white\",\r\n        size: 300,\r\n        borderWidth: 25,\r\n        backgroundColor: \"#e2e2e2\",\r\n        foregroundColor: \"#fafafa\"\r\n      },\r\n      context: null,\r\n      targetContainer: null,\r\n      time: null,\r\n      dt: null,\r\n      currentFillPercentage: 0,\r\n      fillPercentage: 0,\r\n\r\n      //#region fluid context values\r\n      foregroundFluidLayer: {\r\n        fillStyle: \"purple\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 0,\r\n        maxAmplitude: 9,\r\n        frequency: 30,\r\n        horizontalSpeed: -150,\r\n        initialHeight: 0\r\n      },\r\n      backgroundFluidLayer: {\r\n        fillStyle: \"pink\",\r\n        angle: 0,\r\n        horizontalPosition: 0,\r\n        angularSpeed: 140,\r\n        maxAmplitude: 12,\r\n        frequency: 40,\r\n        horizontalSpeed: 150,\r\n        initialHeight: 0\r\n      },\r\n\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    setupCanvas() {\r\n      var canvas = document.createElement('canvas');\r\n      canvas.width = this.options.size;\r\n      canvas.height = this.options.size;\r\n      canvas.imageSmoothingEnabled = true;\r\n      this.context = canvas.getContext(\"2d\");\r\n      this.targetContainer.appendChild(canvas);\r\n\r\n      // shadow is not required  to be on the draw loop\r\n      //#region shadow\r\n      if (this.options.drawShadow) {\r\n        this.context.save();\r\n        this.context.beginPath();\r\n        this.context.filter = \"drop-shadow(0px 4px 6px rgba(0,0,0,0.1))\";\r\n        this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2, 0, 2 * Math.PI);\r\n        this.context.closePath();\r\n        this.context.fill();\r\n        this.context.restore();\r\n      }\r\n      //#endregion\r\n    },\r\n    draw() {\r\n      var now = new Date().getTime();\r\n      this.dt = (now - (this.time || now)) / 1000;\r\n      this.time = now;\r\n      // requestAnimationFrame(draw);\r\n      this.context.clearRect(0, 0, this.options.size, this.options.size);\r\n      this.drawMeterBackground();\r\n      this.drawFluid(this.dt);\r\n      if (this.options.drawText) {\r\n        this.drawText();\r\n      }\r\n      this.drawMeterForeground();\r\n    },\r\n\r\n    drawMeterBackground() {\r\n      this.context.save();\r\n      this.context.fillStyle = this.options.backgroundColor;\r\n      this.context.beginPath();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, 2 * Math.PI);\r\n      this.context.closePath();\r\n      this.context.fill();\r\n      this.context.restore();\r\n    },\r\n\r\n    drawMeterForeground() {\r\n      this.context.save();\r\n      this.context.lineWidth = this.options.borderWidth;\r\n      this.context.strokeStyle = this.options.foregroundColor;\r\n      this.context.beginPath();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth / 2, 0, 2 * Math.PI);\r\n      this.context.closePath();\r\n      this.context.stroke();\r\n      this.context.restore();\r\n    },\r\n    drawFluid(dt) {\r\n      this.context.save();\r\n      this.context.arc(this.options.size / 2, this.options.size / 2, this.getMeterRadius() / 2 - this.options.borderWidth, 0, Math.PI * 2);\r\n      this.context.clip();\r\n      this.drawFluidLayer(this.backgroundFluidLayer, this.dt);\r\n      this.drawFluidLayer(this.foregroundFluidLayer, this.dt);\r\n      this.context.restore();\r\n    },\r\n    drawFluidLayer(layer, dt) {\r\n      // calculate wave angle\r\n      if (layer.angularSpeed > 0) {\r\n        layer.angle += layer.angularSpeed * dt;\r\n        layer.angle = layer.angle < 0 ? layer.angle + 360 : layer.angle;\r\n      }\r\n\r\n      // calculate horizontal position\r\n      layer.horizontalPosition += layer.horizontalSpeed * dt;\r\n      if (layer.horizontalSpeed > 0) {\r\n        layer.horizontalPosition > Math.pow(2, 53) ? 0 : layer.horizontalPosition;\r\n      }\r\n      else if (layer.horizontalPosition < 0) {\r\n        layer.horizontalPosition < -1 * Math.pow(2, 53) ? 0 : layer.horizontalPosition;\r\n      }\r\n\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      var meterBottom = (this.options.size - (this.options.size - this.getMeterRadius()) / 2) - this.options.borderWidth;\r\n      var fluidAmount = this.currentFillPercentage * (this.getMeterRadius() - this.options.borderWidth * 2) / 100;\r\n\r\n      if (this.currentFillPercentage < this.fillPercentage) {\r\n        this.currentFillPercentage += 15 * dt;\r\n      } else if (this.currentFillPercentage > this.fillPercentage) {\r\n        this.currentFillPercentage -= 15 * dt;\r\n      }\r\n\r\n      layer.initialHeight = meterBottom - fluidAmount;\r\n\r\n      this.context.save();\r\n      this.context.beginPath();\r\n\r\n      this.context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        this.context.lineTo(x, y);\r\n        x++;\r\n      }\r\n\r\n      this.context.lineTo(x, this.options.size);\r\n      this.context.lineTo(0, this.options.size);\r\n      this.context.closePath();\r\n\r\n      this.context.fillStyle = layer.fillStyle;\r\n      this.context.fill();\r\n      this.context.restore();\r\n\r\n    },\r\n    drawFluidMask(layer) {\r\n      var x = 0;\r\n      var y = 0;\r\n      var amplitude = layer.maxAmplitude * Math.sin(layer.angle * Math.PI / 180);\r\n\r\n      this.context.beginPath();\r\n\r\n      this.context.lineTo(0, layer.initialHeight);\r\n\r\n      while (x < this.options.size) {\r\n        y = layer.initialHeight + amplitude * Math.sin((x + layer.horizontalPosition) / layer.frequency);\r\n        this.context.lineTo(x, y);\r\n        x++;\r\n      }\r\n      this.context.lineTo(x, this.options.size);\r\n      this.context.lineTo(0, this.options.size);\r\n      this.context.closePath();\r\n      this.context.clip();\r\n    },\r\n    // drawBubblesLayer(this.dt) {\r\n    //   this.context.save();\r\n    //   for (var i = 0; i < bubblesLayer.bubbles.length; i++) {\r\n    //     var bubble = bubblesLayer.bubbles[i];\r\n\r\n    //     this.context.beginPath();\r\n    //     this.context.strokeStyle = 'white';\r\n    //     this.context.arc(bubble.x, bubble.y, bubble.r, 2 * Math.PI, false);\r\n    //     this.context.stroke();\r\n    //     this.context.closePath();\r\n\r\n    //     var currentSpeed = bubblesLayer.current * this.dt;\r\n\r\n    //     bubble.velX = Math.abs(bubble.velX) < Math.abs(bubblesLayer.current) ? bubble.velX + currentSpeed : bubblesLayer.current;\r\n    //     bubble.y = bubble.y - bubble.velY * this.dt;\r\n    //     bubble.x = bubble.x + (bubblesLayer.swing ? 0.4 * Math.cos(bubblesLayer.swing += 0.03) * bubblesLayer.swing : 0) + bubble.velX * 0.5;\r\n\r\n    //     // determine if current bubble is outside the safe area\r\n    //     var meterBottom = (this.options.size - (this.options.size - getMeterRadius()) / 2) - this.options.borderWidth;\r\n    //     var fluidAmount = currentFillPercentage * (getMeterRadius() - this.options.borderWidth * 2) / 100;\r\n\r\n    //     if (bubble.y <= meterBottom - fluidAmount) {\r\n    //       bubblesLayer.reset(bubble);\r\n    //     }\r\n\r\n    //   }\r\n    //   this.context.restore();\r\n    // },\r\n    drawText() {\r\n\r\n      var text = this.options.drawPercentageSign ?\r\n        this.currentFillPercentage.toFixed(0) + \"%\" : this.currentFillPercentage.toFixed(0);\r\n\r\n      this.context.save();\r\n      this.context.font = this.getFontSize();\r\n      this.context.fillStyle = this.options.fontFillStyle;\r\n      this.context.textAlign = \"center\";\r\n      this.context.textBaseline = 'middle';\r\n      this.context.filter = \"drop-shadow(0px 0px 5px rgba(0,0,0,0.4))\"\r\n      this.context.fillText(text, this.options.size / 2, this.options.size / 2);\r\n      this.context.restore();\r\n    },\r\n    //#region helper methods\r\n    clamp(number, min, max) {\r\n      return Math.min(Math.max(number, min), max);\r\n    },\r\n    getMeterRadius() {\r\n      return this.options.size * 0.9;\r\n    },\r\n\r\n    random(min, max) {\r\n      var delta = max - min;\r\n      return max === min ? min : Math.random() * delta + min;\r\n    },\r\n\r\n    getFontSize() {\r\n      return this.options.fontSize + \" \" + this.options.fontFamily;\r\n    },\r\n    init: function (env) {\r\n      if (!env.targetContainer)\r\n        throw \"empty or invalid container\";\r\n\r\n      this.targetContainer = env.targetContainer;\r\n      this.fillPercentage = this.clamp(env.fillPercentage, 0, 100);\r\n\r\n      if (env.options) {\r\n        this.options.drawShadow = env.options.drawShadow === false ? false : true;\r\n        this.options.size = env.options.size;\r\n        this.options.drawBubbles = env.options.drawBubbles === false ? false : true;\r\n        this.options.borderWidth = env.options.borderWidth || this.options.borderWidth;\r\n        this.options.foregroundFluidColor = env.options.foregroundFluidColor || this.options.foregroundFluidColor;\r\n        this.options.backgroundFluidColor = env.options.backgroundFluidColor || this.options.backgroundFluidColor;\r\n        this.options.backgroundColor = env.options.backgroundColor || this.options.backgroundColor;\r\n        this.options.foregroundColor = env.options.foregroundColor || this.options.foregroundColor;\r\n\r\n        this.options.drawText = env.options.drawText === false ? false : true;\r\n        this.options.drawPercentageSign = env.options.drawPercentageSign === false ? false : true;\r\n        this.options.fontSize = env.options.fontSize || this.options.fontSize;\r\n        this.options.fontFamily = env.options.fontFamily || this.options.fontFamily;\r\n        this.options.fontFillStyle = env.options.fontFillStyle || this.options.fontFillStyle;\r\n        // fluid settings\r\n\r\n        if (env.options.foregroundFluidLayer) {\r\n          this.foregroundFluidLayer.fillStyle = env.options.foregroundFluidLayer.fillStyle || this.foregroundFluidLayer.fillStyle;\r\n          this.foregroundFluidLayer.angularSpeed = env.options.foregroundFluidLayer.angularSpeed || this.foregroundFluidLayer.angularSpeed;\r\n          this.foregroundFluidLayer.maxAmplitude = env.options.foregroundFluidLayer.maxAmplitude || this.foregroundFluidLayer.maxAmplitude;\r\n          this.foregroundFluidLayer.frequency = env.options.foregroundFluidLayer.frequency || this.foregroundFluidLayer.frequency;\r\n          this.foregroundFluidLayer.horizontalSpeed = env.options.foregroundFluidLayer.horizontalSpeed || this.foregroundFluidLayer.horizontalSpeed;\r\n        }\r\n\r\n        if (env.options.backgroundFluidLayer) {\r\n          this.backgroundFluidLayer.fillStyle = env.options.backgroundFluidLayer.fillStyle || this.backgroundFluidLayer.fillStyle;\r\n          this.backgroundFluidLayer.angularSpeed = env.options.backgroundFluidLayer.angularSpeed || this.backgroundFluidLayer.angularSpeed;\r\n          this.backgroundFluidLayer.maxAmplitude = env.options.backgroundFluidLayer.maxAmplitude || this.backgroundFluidLayer.maxAmplitude;\r\n          this.backgroundFluidLayer.frequency = env.options.backgroundFluidLayer.frequency || this.backgroundFluidLayer.frequency;\r\n          this.backgroundFluidLayer.horizontalSpeed = env.options.backgroundFluidLayer.horizontalSpeed || this.backgroundFluidLayer.horizontalSpeed;\r\n        }\r\n      }\r\n\r\n\r\n\r\n      // bubblesLayer.init();\r\n      this.setupCanvas();\r\n      this.draw();\r\n    },\r\n    setPercentage(percentage) {\r\n      this.fillPercentage = this.clamp(percentage, 0, 100);\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}