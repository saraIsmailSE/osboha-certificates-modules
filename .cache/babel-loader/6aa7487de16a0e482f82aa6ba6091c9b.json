{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\nimport ListQuestion from \"../../components/Questions/ListQuestion.vue\";\nimport questionServices from '../../api/questionServices';\nexport default {\n  name: \"Questions\",\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQuestions();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {\n    ListQuestion: ListQuestion\n  },\n  data: function data() {\n    return {\n      auditable: false,\n      book: null,\n      user_book: null,\n      status: \"\",\n      pageError: '',\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: this.user_book.id,\n        quotes: [{\n          text: ''\n        }]\n      },\n      questions: [],\n      show: \"\"\n    };\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        question: {\n          required: required,\n          minLength: minLength(100),\n          maxLength: maxLength(250)\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required,\n          valdiatePages: this.validatePages\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(250)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    getQuestions: function getQuestions() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return questionServices.getByBook(_this2.$route.params.book_id);\n\n              case 2:\n                response = _context2.sent;\n                _this2.book = response.user_book.book;\n                _this2.questions = response.questions;\n                _this2.user_book = response.user_book;\n                _this2.status = _this2.user_book.status;\n                _this2.auditable = _this2.questions.some(function (element) {\n                  if (element.status === \"rejected\" || element.status === null) {\n                    return true;\n                  }\n\n                  return false;\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    },\n    back: function back() {\n      this.$router.push({\n        path: \"/book\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["useVuelidate","required","minLength","maxLength","ListQuestion","questionServices","name","created","getQuestions","setup","v$","components","data","auditable","book","user_book","status","pageError","questionForm","question","starting_page","ending_page","user_book_id","id","quotes","text","questions","show","validations","valdiatePages","validatePages","$each","methods","getByBook","$route","params","book_id","response","some","element","addField","value","fieldType","push","removeField","index","splice","back","$router","path"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Achievement\\Questions.vue"],"sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <iq-card>\r\n                <div class=\"iq-card-body profile-page p-0\">\r\n                    <div class=\"profile-header\">\r\n                        <div class=\"cover-container\">\r\n                            <img src=\"../../assets/images/book-banner.png\" alt=\"profile-bg\" class=\"rounded img-fluid\" />\r\n                        </div>\r\n                        <div class=\"user-detail text-center mb-3\">\r\n                            <div class=\"profile-img\">\r\n                                <img src=\"../../assets/images/reader.png\" alt=\"profile-img\"\r\n                                    class=\"avatar-130 img-fluid\" />\r\n                            </div>\r\n                            <div class=\"profile-detail mt-1\">\r\n                                <br />\r\n                                <h3 class=\"\" v-if=\"book\">{{book.book_name}} - قسم الأطروحات</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n            <iq-card class=\"iq-card\">\r\n                <div class=\"iq-card-body p-0\">\r\n                    <div class=\"user-tabing\">\r\n                        <tab-nav :pills=\"true\" id=\"pills-tab\"\r\n                            class=\"nav nav-pills d-flex align-items-center justify-content-center profile-feed-items p-0 m-0\">\r\n                            <tab-nav-items class=\"w-100 p-0\" :active=\"true\" id=\"pills-feed-tab\"\r\n                                href=\"#questions_container\" ariaControls=\"pills-home\" role=\"tab\" :ariaSelected=\"true\"\r\n                                title=\"المرحلة الأولى - الأطروحات\" />\r\n                        </tab-nav>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"tab-content\">\r\n                <!-- START STAGE ONE -->\r\n                <tab-content-item :active=\"true\" id=\"questions_container\" aria-labelled-by=\"pills-feed-tab\">\r\n                    <div class=\"iq-card-body p-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div id=\"post-modal-data\" class=\"iq-card\">\r\n                                    <div v-if=\"(questions.length < 12 && status == 'stage_two' && auditable) || questions.length==0\"\r\n                                        class=\"d-flex align-items-center mt-3\">\r\n                                        <form @submit.prevent=\"submitQuestionForm\" class=\"post-text ml-3 w-100 row\">\r\n                                            <div class=\"form-group col-6\">\r\n                                                <select v-model=\"v$.questionForm.starting_page.$model\"\r\n                                                    class=\"form-select\" data-trigger name=\"choices-single-default\"\r\n                                                    id=\"choices-single-default\">\r\n                                                    <option value=\"\">اختر صفحة البداية</option>\r\n                                                    <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                                                        {{ i }}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <small style=\"color: red\"\r\n                                                    v-if=\"v$.questionForm.starting_page.$error\">{{pageError ? pageError\r\n                                                    :'الرجاء قم بادخال صفحة البداية'}}</small>\r\n                                            </div>\r\n                                            <div class=\"form-group col-6\">\r\n\r\n                                                <select class=\"form-select\" v-model=\"v$.questionForm.ending_page.$model\"\r\n                                                    data-trigger name=\"choices-single-default\"\r\n                                                    id=\"choices-single-default\">\r\n                                                    <option value=\"\">اختر صفحة النهاية</option>\r\n                                                    <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                                                        {{ i }}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <small style=\"color: red\"\r\n                                                    v-if=\"v$.questionForm.ending_page.$error\">{{pageError\r\n                                                    ? pageError :' الرجاء قم بادخال صفحة النهاية'}}</small>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group\">\r\n                                                <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \"\r\n                                                    class=\"rounded form-control\" id=\"bookQuestion\"\r\n                                                    v-model=\"v$.questionForm.question.$model\"></textarea>\r\n                                                <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">\r\n                                                    لطفًا قم بكتابة سؤال عدد حروفه بين 100 و 250\r\n                                                </small>\r\n                                            </div>\r\n                                            <div>\r\n                                            </div>\r\n                                            <div class=\"form-group\">\r\n                                                <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \"\r\n                                                    v-for=\"(v,index) in questionForm.quotes\" :key=\"index\"\r\n                                                    class=\"rounded form-control mt-2\" id=\"bookQuote\" v-model=\"v.text\">\r\n                        </textarea>\r\n                                                <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">\r\n                                                    قم بادخال اقتباس واحد على الاقل عدد حروفه لا يزيد عن 250\r\n                                                </small>\r\n                                                <hr>\r\n                                                <a class=\"btn btn-primary rounded-pill mb-3 me-1\"\r\n                                                    @click=\"addField(textarea, questionForm.quotes)\">\r\n                                                    اضافة اقتباس\r\n                                                </a>\r\n                                                <a class=\"btn btn-danger rounded-pill mb-3 me-1\"\r\n                                                    v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n                                                    @click=\"removeField(index, questionForm.quotes)\">\r\n                                                    حذف اقتباس\r\n                                                </a>\r\n                                            </div>\r\n                                            <input type=\"submit\" value=\"أضافة\" href=\"javascript:void(0);\"\r\n                                                class=\"btn btn-primary d-block mt-3\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-for=\"(question,index) in questions\" :key=\"question.id\">\r\n                                    <ListQuestion :question=\"question\" :index='index' :book=\"book\"\r\n                                        :user_book=\"user_book\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-lg-4\">\r\n                                    <iq-card v-if=\"questions.length >= 5 && auditable && status!='finished'\">\r\n                                        <template v-slot:body>\r\n                                            <button class=\"btn btn-primary d-block w-100\" @click=\"reviewQuestions\">طلب\r\n                                                تدقيق</button>\r\n                                        </template>\r\n                                    </iq-card>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tab-content-item>\r\n                <!-- END STAGE ONE -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template >\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\r\nimport ListQuestion from \"../../components/Questions/ListQuestion.vue\";\r\nimport questionServices from '../../api/questionServices'\r\n\r\nexport default {\r\n    name: \"Questions\",\r\n    async created() {\r\n        await this.getQuestions();\r\n    },\r\n    setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n    components: {\r\n        ListQuestion,\r\n    },\r\n    data() {\r\n        return {\r\n            auditable: false,\r\n            book: null,\r\n            user_book: null,\r\n            status: \"\",\r\n            pageError: '',\r\n            questionForm: {\r\n                question: '',\r\n                starting_page: \"\",\r\n                ending_page: \"\",\r\n                user_book_id: this.user_book.id,\r\n                quotes: [\r\n                    { text: '' }\r\n                ]\r\n            },\r\n            questions: [],\r\n            show: \"\",\r\n        };\r\n    },\r\n    validations() {\r\n        return {\r\n            questionForm: {\r\n                question: {\r\n                    required,\r\n                    minLength: minLength(100),\r\n                    maxLength: maxLength(250)\r\n\r\n                }, starting_page: {\r\n                    required\r\n                },\r\n                ending_page: {\r\n                    required, valdiatePages: this.validatePages\r\n                }, quotes: {\r\n                    required,\r\n                    minLength: minLength(1),\r\n                    $each: {\r\n                        text: {\r\n                            minLength: minLength(250)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        async getQuestions() {\r\n            const response = await questionServices.getByBook(this.$route.params.book_id);\r\n            this.book = response.user_book.book\r\n            this.questions = response.questions\r\n            this.user_book = response.user_book\r\n            this.status = this.user_book.status\r\n            this.auditable = this.questions.some((element) => {\r\n                if (element.status === \"rejected\" || element.status === null) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n\r\n        },\r\n        addField(value, fieldType) {\r\n\r\nfieldType.push({ text: \"\" });\r\n},\r\nremoveField(index, fieldType) {\r\nfieldType.splice(index, 1);\r\n},\r\n\r\n        back() {\r\n            this.$router.push({ path: `/book` });\r\n        },\r\n    },\r\n};\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module"}