{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport questionServices from '../../api/questionServices';\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: \"UpdateQuestion\",\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return questionServices.getById(_this.$route.params.id);\n\n            case 2:\n              _this.questionToupdate = _context.sent;\n              _this.book = _this.questionToupdate.user_book.book;\n              _this.questionForm.question = _this.questionToupdate.question;\n              _this.questionForm.starting_page = _this.questionToupdate.starting_page;\n              _this.questionForm.ending_page = _this.questionToupdate.ending_page;\n              _this.questionForm.quotes = _this.questionToupdate.quotation;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  components: {},\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data: function data() {\n    return {\n      loader: false,\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: this.$route.params.id,\n        quotes: [{\n          text: ''\n        }]\n      },\n      book: [],\n      message: ''\n    };\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        question: {\n          required: required\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(2)\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    },\n    submitQuestionUpdate: function submitQuestionUpdate() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var question;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.v$.$touch();\n\n                if (_this2.v$.questionForm.$invalid) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _this2.message = \"\";\n                _this2.loader = true;\n                _context2.next = 6;\n                return questionServices.updateQuestion(_this2.questionForm, _this2.questionToupdate.id);\n\n              case 6:\n                question = _context2.sent;\n                _this2.questionForm.question = \"\";\n                _this2.questionForm.pageEnd = \"\";\n                _this2.questionForm.pageStart = \"\";\n                _this2.questionForm.quotes = [{\n                  text: ''\n                }];\n\n                _this2.v$.questionForm.$reset();\n\n                _this2.loader = false;\n                _this2.message = \"تم التعديل بنجاح\";\n                console.log(question);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["questionServices","useVuelidate","required","minLength","name","created","getById","$route","params","id","questionToupdate","book","user_book","questionForm","question","starting_page","ending_page","quotes","quotation","components","setup","v$","data","loader","user_book_id","text","message","validations","$each","methods","addField","value","fieldType","push","removeField","index","splice","submitQuestionUpdate","$touch","$invalid","updateQuestion","pageEnd","pageStart","$reset","console","log"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Questions\\update.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-sm-12 mt-3 text-center\">\r\n    <iq-card class=\"iq-card\">\r\n      <div class=\"iq-card-header-toolbar d-flex align-items-center mx-auto\">\r\n        <h4 class=\"text-center mt-3 mb-3\">\r\n          تعديل سؤال\r\n        </h4>\r\n      </div>\r\n      <div class=\"iq-card-body p-3\">\r\n        <div class=\"image-block text-center\">\r\n          <img src=\"@/assets/images/forgot-password.png\" class=\"img-fluid rounded w-25\" alt=\"blog-img\">\r\n        </div>\r\n\r\n        <div class=\"d-flex align-items-center mt-3\">\r\n          <form @submit.prevent=\"submitQuestionUpdate\" class=\"post-text ml-3 w-100 row\">\r\n            <div class=\"form-group col-6\">\r\n              <select v-model=\"v$.questionForm.starting_page.$model\" class=\"form-select\" data-trigger\r\n                name=\"choices-single-default\" id=\"choices-single-default\">\r\n                <option value=\"\">اختر صفحة البداية</option>\r\n                <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                  {{ i }}\r\n                </option>\r\n              </select>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.starting_page.$error\">الرجاء قم بادخال صفحة\r\n                البداية</small>\r\n            </div>\r\n            <div class=\"form-group col-6\">\r\n              <select class=\"form-select\" v-model=\"v$.questionForm.ending_page.$model\" data-trigger\r\n                name=\"choices-single-default\" id=\"choices-single-default\">\r\n                <option value=\"\">اختر صفحة النهاية</option>\r\n                <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                  {{ i }}\r\n                </option>\r\n              </select>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.ending_page.$error\">الرجاء قم بادخال صفحة\r\n                النهاية</small>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \" class=\"rounded form-control\" id=\"bookQuestion\"\r\n                v-model=\"v$.questionForm.question.$model\"></textarea>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال السؤال </small>\r\n            </div>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n              <h4>الاقتباسات</h4>\r\n              <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \" v-for=\"(v,index) in questionForm.quotes\" :key=\"index\"\r\n                class=\"rounded form-control mt-2\" id=\"bookQuote\" v-model=\"v.text\">\r\n                </textarea>\r\n              <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">الرجاء قم بادخال اقتباس واحد على الاقل\r\n              </small>\r\n              <hr>\r\n              <a class=\"btn btn-primary rounded-pill mb-3 me-1\" @click=\"addField(textarea, questionForm.quotes)\">\r\n                اضافة اقتباس\r\n              </a>\r\n              <a class=\"btn btn-danger rounded-pill mb-3 me-1\"\r\n                v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n                @click=\"removeField(index, questionForm.quotes)\">\r\n                حذف اقتباس\r\n              </a>\r\n            </div>\r\n            <div class=\"col-sm-12 text-center\" v-if=\"loader\">\r\n              <img src=\"../../assets/images/page-img/page-load-loader.gif\" alt=\"loader\" style=\"height: 100px;\">\r\n            </div>\r\n          <h4 class=\"text-center mt-3 mb-3\" v-if=\"message\"> {{message}}</h4>\r\n          <div class=\"d-inline-block w-100 text-center\">\r\n            <button type=\"submit\" class=\"btn d-block btn-primary mt-3 mb-3 w-75 mx-auto\" v-if=\"message\">\r\n              عودة لصفحة الأنجاز\r\n            </button>\r\n            <input type=\"submit\" value=\"تعديل\" href=\"javascript:void(0);\" class=\"btn btn-primary d-block mt-3 w-100\"  v-else/>\r\n          </div>\r\n          </form>\r\n          \r\n        </div>\r\n      </div>\r\n    </iq-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport questionServices from '../../api/questionServices';\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nexport default {\r\n  name: \"UpdateQuestion\",\r\n  async created() {\r\n    this.questionToupdate = await questionServices.getById(this.$route.params.id)\r\n    this.book = this.questionToupdate.user_book.book\r\n    this.questionForm.question = this.questionToupdate.question\r\n    this.questionForm.starting_page = this.questionToupdate.starting_page\r\n    this.questionForm.ending_page = this.questionToupdate.ending_page\r\n    this.questionForm.quotes = this.questionToupdate.quotation\r\n  },\r\n  components: {\r\n  },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  data() {\r\n    return {\r\n      loader:false,\r\n      questionForm: {\r\n        question: '',\r\n        starting_page: \"\",\r\n        ending_page: \"\",\r\n        user_book_id: this.$route.params.id,\r\n        quotes: [\r\n          { text: '' }\r\n        ]\r\n      },\r\n      book: [],\r\n      message: ''\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      questionForm: {\r\n        question: {\r\n          required\r\n        }, starting_page: {\r\n          required\r\n        }, ending_page: {\r\n          required\r\n        }, quotes: {\r\n          required,\r\n          minLength: minLength(1),\r\n          $each: {\r\n            text: {\r\n              minLength: minLength(2)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    addField(value, fieldType) {\r\n      fieldType.push({ text: \"\" });\r\n    },\r\n    removeField(index, fieldType) {\r\n      fieldType.splice(index, 1);\r\n    },\r\n    async submitQuestionUpdate() {\r\n      this.v$.$touch();\r\n\r\n      if (!this.v$.questionForm.$invalid) {\r\n        this.message = \"\"; \r\n        this.loader=true;\r\n        const question = await questionServices.updateQuestion(this.questionForm , this.questionToupdate.id);\r\n        this.questionForm.question = \"\";\r\n        this.questionForm.pageEnd = \"\";\r\n        this.questionForm.pageStart = \"\";\r\n        this.questionForm.quotes = [{ text: '' }];\r\n        this.v$.questionForm.$reset()\r\n        this.loader=false;\r\n        this.message = \"تم التعديل بنجاح\"\r\n\r\n        console.log(question)\r\n      }\r\n\r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}