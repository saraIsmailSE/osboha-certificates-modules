{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\nimport questionServices from '../../api/questionServices';\nimport ListQuestion from '../../components/Questions/ListQuestion.vue';\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  name: 'Questions',\n  created: function created() {\n    this.getQuestions();\n  },\n  validations: function validations() {\n    return {\n      questionForm: {\n        components: {\n          ListQuestion: ListQuestion\n        },\n        question: {\n          required: required,\n          minLength: minLength(100),\n          maxLength: maxLength(250)\n        },\n        starting_page: {\n          required: required\n        },\n        ending_page: {\n          required: required,\n          valdiatePages: this.validatePages\n        },\n        quotes: {\n          required: required,\n          minLength: minLength(1),\n          $each: {\n            text: {\n              minLength: minLength(250)\n            }\n          }\n        }\n      }\n    };\n  },\n  data: function data() {\n    return {\n      auditable: false,\n      pageError: '',\n      questionForm: {\n        question: '',\n        starting_page: \"\",\n        ending_page: \"\",\n        user_book_id: this.user_book.id,\n        quotes: [{\n          text: ''\n        }]\n      },\n      questions: [],\n      show: false\n    };\n  },\n  methods: {\n    addField: function addField(value, fieldType) {\n      fieldType.push({\n        text: \"\"\n      });\n    },\n    removeField: function removeField(index, fieldType) {\n      fieldType.splice(index, 1);\n    },\n    submitQuestionForm: function submitQuestionForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var question;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.v$.$touch();\n\n                if (_this.v$.questionForm.$invalid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 4;\n                return questionServices.addQuestion(_this.questionForm);\n\n              case 4:\n                question = _context.sent;\n                _this.questionForm.question = \"\";\n                _this.questionForm.starting_page = \"\";\n                _this.questionForm.ending_page = \"\";\n                _this.questionForm.quotes = [{\n                  text: ''\n                }];\n\n                _this.v$.questionForm.$reset();\n\n                _this.questions.push(question);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getQuestions: function getQuestions() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return questionServices.getQuestions(_this2.user_book.id);\n\n              case 2:\n                _this2.questions = _context2.sent;\n                _this2.auditable = _this2.questions.some(function (element) {\n                  if (element.status === 'rejected' || element.status === null) {\n                    return true;\n                  }\n\n                  return false;\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    validatePages: function validatePages() {\n      var error = parseInt(this.questionForm.starting_page) < parseInt(this.questionForm.ending_page);\n      if (!error) this.pageError = 'يجب ان تكون صفحة البداية اقل من صفحة النهاية';else this.pageError = '';\n      return error;\n    },\n    reviewQuestions: function reviewQuestions() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var swalWithBootstrapButtons;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                swalWithBootstrapButtons = _this3.$swal.mixin({\n                  customClass: {\n                    confirmButton: 'btn btn-primary btn-lg',\n                    cancelButton: 'btn btn-outline-primary btn-lg ms-2'\n                  },\n                  buttonsStyling: false\n                });\n                swalWithBootstrapButtons.fire({\n                  title: 'هل أنت متأكد؟',\n                  text: \"في حال طلبك للتدقيق لن يمكنك اضافة سؤال جديد أو التعديل على الأسئلة التي كتبتها \",\n                  icon: 'warning',\n                  showCancelButton: true,\n                  confirmButtonText: 'نعم قم بطلب تدقيق',\n                  cancelButtonText: 'تراجع  ',\n                  showClass: {\n                    popup: 'animate__animated animate__zoomIn'\n                  },\n                  hideClass: {\n                    popup: 'animate__animated animate__zoomOut'\n                  }\n                }).then(function (willDelete) {\n                  if (willDelete.isConfirmed) {\n                    questionServices.reviewQuestion(_this3.user_book.id).then(function (response) {\n                      swalWithBootstrapButtons.fire({\n                        title: 'تم الارسال',\n                        text: 'تم ارسال طلبك للتدقيق',\n                        icon: 'success',\n                        showClass: {\n                          popup: 'animate__animated animate__zoomIn'\n                        },\n                        hideClass: {\n                          popup: 'animate__animated animate__zoomOut'\n                        }\n                      });\n                      _this3.auditable = false;\n                    })[\"catch\"](function (error) {\n                      console.log(error);\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["useVuelidate","required","minLength","maxLength","questionServices","ListQuestion","setup","v$","name","created","getQuestions","validations","questionForm","components","question","starting_page","ending_page","valdiatePages","validatePages","quotes","$each","text","data","auditable","pageError","user_book_id","user_book","id","questions","show","methods","addField","value","fieldType","push","removeField","index","splice","submitQuestionForm","$touch","$invalid","addQuestion","$reset","some","element","status","error","parseInt","reviewQuestions","swalWithBootstrapButtons","$swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","icon","showCancelButton","confirmButtonText","cancelButtonText","showClass","popup","hideClass","then","willDelete","isConfirmed","reviewQuestion","console","log"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Achievement\\Questions.vue"],"sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <iq-card>\r\n                <div class=\"iq-card-body profile-page p-0\">\r\n                    <div class=\"profile-header\">\r\n                        <div class=\"cover-container\">\r\n                            <img src=\"../../assets/images/book-banner.png\" alt=\"profile-bg\" class=\"rounded img-fluid\" />\r\n                        </div>\r\n                        <div class=\"user-detail text-center mb-3\">\r\n                            <div class=\"profile-img\">\r\n                                <img src=\"../../assets/images/reader.png\" alt=\"profile-img\"\r\n                                    class=\"avatar-130 img-fluid\" />\r\n                            </div>\r\n                            <div class=\"profile-detail mt-1\">\r\n                                <br />\r\n                                <h3 class=\"\" v-if=\"book\">{{book.book_name}} - قسم التلخيص والفكرة العامة</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n            <iq-card class=\"iq-card\">\r\n                <div class=\"iq-card-body p-0\">\r\n                    <div class=\"user-tabing\">\r\n                        <tab-nav :pills=\"true\" id=\"pills-tab\"\r\n                            class=\"nav nav-pills d-flex align-items-center justify-content-center profile-feed-items p-0 m-0\">\r\n                            <tab-nav-items class=\"w-100 p-0\" :active=\"true\" id=\"pills-feed-tab\" href=\"#theses_container\"\r\n                                ariaControls=\"pills-home\" role=\"tab\" :ariaSelected=\"true\"\r\n                                title=\"المرحلة الثانية - التلخيص والفكرة العامة\" />\r\n                        </tab-nav>\r\n                    </div>\r\n                </div>\r\n            </iq-card>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"tab-content\">\r\n                <!-- START STAGE ONE -->\r\n                <tab-content-item :active=\"true\" id=\"theses_container\" aria-labelled-by=\"pills-feed-tab\">\r\n                    <div class=\"iq-card-body p-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-4\">\r\n                            </div>\r\n                            <div v-if=\"(questions.length < 12 && status == 'stage_two' && auditable) || questions.length==0\"\r\n                                class=\"d-flex align-items-center mt-3\">\r\n                                <form @submit.prevent=\"submitQuestionForm\" class=\"post-text ml-3 w-100 row\">\r\n                                    <div class=\"form-group col-6\">\r\n                                        <select v-model=\"v$.questionForm.starting_page.$model\" class=\"form-select\"\r\n                                            data-trigger name=\"choices-single-default\" id=\"choices-single-default\">\r\n                                            <option value=\"\">اختر صفحة البداية</option>\r\n                                            <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                                                {{ i }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small style=\"color: red\"\r\n                                            v-if=\"v$.questionForm.starting_page.$error\">{{pageError ? pageError :'\r\n                                            الرجاء قم بادخال صفحة البداية'}}</small>\r\n                                    </div>\r\n                                    <div class=\"form-group col-6\">\r\n\r\n                                        <select class=\"form-select\" v-model=\"v$.questionForm.ending_page.$model\"\r\n                                            data-trigger name=\"choices-single-default\" id=\"choices-single-default\">\r\n                                            <option value=\"\">اختر صفحة النهاية</option>\r\n                                            <option v-for=\"(i, index) in book.pages\" :key=\"index\" :value=\"i\">\r\n                                                {{ i }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small style=\"color: red\" v-if=\"v$.questionForm.ending_page.$error\">{{pageError\r\n                                        ? pageError :' الرجاء قم بادخال صفحة النهاية'}}</small>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <textarea rows=\"5\" placeholder=\"... اكتب سؤالًا \" class=\"rounded form-control\"\r\n                                            id=\"bookQuestion\" v-model=\"v$.questionForm.question.$model\"></textarea>\r\n                                        <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">\r\n                                            لطفًا قم بكتابة سؤال عدد حروفه بين 100 و 250\r\n                                        </small>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4>كيف أحدد الاقتباسات</h4>\r\n                                        <hr>\r\n                                        <div class=\"col-12\">\r\n                                            <p>\r\n                                                يعتبر الاقتباس من المحسنات اللفظية، وهو حفظك للأقوال المأثورة عن\r\n                                                الشخصيات المعروفة وأقوالهم، وخلال\r\n                                                الكتاب ستجد أن هناك جمل مهمة جدا تلخص أفكارًا أساسية في الكتاب. قم\r\n                                                بتحديد أهم الاقتباسات داخل هذا\r\n                                                الكتاب لتقوم بحفظها فهي تساعدك على إجابة الأسئلة المعرفية وتعينك على\r\n                                                الاستشهاد بها لإثبات وجهة نظر\r\n                                                الكاتب </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n\r\n                                        <textarea rows=\"5\" placeholder=\"... اكتب اقتباسًا \"\r\n                                            v-for=\"(v,index) in questionForm.quotes\" :key=\"index\"\r\n                                            class=\"rounded form-control mt-2\" id=\"bookQuote\" v-model=\"v.text\">\r\n                </textarea>\r\n                                        <small style=\"color:red;\" v-if=\"v$.questionForm.question.$error\">\r\n                                            قم بادخال اقتباس واحد على الاقل عدد حروفه لا يزيد عن 250\r\n\r\n                                        </small>\r\n                                        <hr>\r\n                                        <a class=\"btn btn-primary rounded-pill mb-3 me-1\"\r\n                                            @click=\"addField(textarea, questionForm.quotes)\">\r\n                                            اضافة اقتباس\r\n                                        </a>\r\n                                        <a class=\"btn btn-danger rounded-pill mb-3 me-1\"\r\n                                            v-show=\"questionForm.quotes && questionForm.quotes.length > 1\"\r\n                                            @click=\"removeField(index, questionForm.quotes)\">\r\n                                            حذف اقتباس\r\n                                        </a>\r\n\r\n\r\n                                    </div>\r\n                                    <input type=\"submit\" value=\"أضافة\" href=\"javascript:void(0);\"\r\n                                        class=\"btn btn-primary d-block mt-3\" />\r\n                                </form>\r\n                            </div>\r\n                            <hr />\r\n                            <div v-for=\"(question,index) in questions\" :key=\"question.id\">\r\n                                <ListQuestion :question=\"question\" :index='index' :book=\"book\" :user_book=\"user_book\" />\r\n                            </div>\r\n                            <iq-card v-if=\"questions.length >= 5 && auditable && status!='finished'\">\r\n                                <template v-slot:body>\r\n                                    <button class=\"btn btn-primary d-block w-100\" @click=\"reviewQuestions\">طلب\r\n                                        تدقيق</button>\r\n                                </template>\r\n                            </iq-card>\r\n                        </div>\r\n                    </div>\r\n                </tab-content-item>\r\n                <!-- END STAGE ONE -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { required, minLength, maxLength } from \"@vuelidate/validators\";\r\nimport questionServices from '../../api/questionServices'\r\nimport ListQuestion from '../../components/Questions/ListQuestion.vue'\r\n\r\nexport default {\r\n    setup() {\r\n        return { v$: useVuelidate() };\r\n    },\r\n    name: 'Questions',\r\n    created() {\r\n        this.getQuestions();\r\n    },\r\n    validations() {\r\n        return {\r\n            questionForm: {\r\n                components: {\r\n                    ListQuestion,\r\n                },\r\n                question: {\r\n                    required,\r\n                    minLength: minLength(100),\r\n                    maxLength: maxLength(250)\r\n\r\n                }, starting_page: {\r\n                    required\r\n                },\r\n                ending_page: {\r\n                    required, valdiatePages: this.validatePages\r\n                }, quotes: {\r\n                    required,\r\n                    minLength: minLength(1),\r\n                    $each: {\r\n                        text: {\r\n\r\n                            minLength: minLength(250)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            auditable: false,\r\n            pageError: '',\r\n            questionForm: {\r\n                question: '',\r\n                starting_page: \"\",\r\n                ending_page: \"\",\r\n                user_book_id: this.user_book.id,\r\n                quotes: [\r\n                    { text: '' }\r\n                ]\r\n            },\r\n            questions: [],\r\n            show: false,\r\n        }\r\n    },\r\n    methods: {\r\n        addField(value, fieldType) {\r\n\r\n            fieldType.push({ text: \"\" });\r\n        },\r\n        removeField(index, fieldType) {\r\n            fieldType.splice(index, 1);\r\n        },\r\n        async submitQuestionForm() {\r\n            this.v$.$touch();\r\n\r\n            if (!this.v$.questionForm.$invalid) {\r\n                const question = await questionServices.addQuestion(this.questionForm);\r\n                this.questionForm.question = \"\";\r\n                this.questionForm.starting_page = \"\";\r\n                this.questionForm.ending_page = \"\";\r\n                this.questionForm.quotes = [{ text: '' }];\r\n                this.v$.questionForm.$reset()\r\n                this.questions.push(question)\r\n            }\r\n        },\r\n        async getQuestions() {\r\n            this.questions = await questionServices.getQuestions(this.user_book.id);\r\n            this.auditable = this.questions.some(element => {\r\n                if (element.status === 'rejected' || element.status === null) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        },\r\n        validatePages() {\r\n            const error = parseInt(this.questionForm.starting_page) < parseInt(this.questionForm.ending_page)\r\n            if (!error) this.pageError = 'يجب ان تكون صفحة البداية اقل من صفحة النهاية'\r\n            else this.pageError = ''\r\n            return error;\r\n        },\r\n        async reviewQuestions() {\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary btn-lg',\r\n                    cancelButton: 'btn btn-outline-primary btn-lg ms-2'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'هل أنت متأكد؟',\r\n                text: \"في حال طلبك للتدقيق لن يمكنك اضافة سؤال جديد أو التعديل على الأسئلة التي كتبتها \",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'نعم قم بطلب تدقيق',\r\n                cancelButtonText: 'تراجع  ',\r\n                showClass: {\r\n                    popup: 'animate__animated animate__zoomIn'\r\n                },\r\n                hideClass: {\r\n                    popup: 'animate__animated animate__zoomOut'\r\n                }\r\n            })\r\n                .then((willDelete) => {\r\n                    if (willDelete.isConfirmed) {\r\n                        questionServices.reviewQuestion(this.user_book.id)\r\n                            .then(response => {\r\n                                swalWithBootstrapButtons.fire({\r\n                                    title: 'تم الارسال',\r\n                                    text: 'تم ارسال طلبك للتدقيق',\r\n                                    icon: 'success',\r\n                                    showClass: {\r\n                                        popup: 'animate__animated animate__zoomIn'\r\n                                    },\r\n                                    hideClass: {\r\n                                        popup: 'animate__animated animate__zoomOut'\r\n                                    }\r\n                                })\r\n                                this.auditable = false;\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            })\r\n                    }\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module"}