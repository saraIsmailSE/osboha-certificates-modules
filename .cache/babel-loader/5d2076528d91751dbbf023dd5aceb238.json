{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport setting from './setting/index';\nimport { auth } from './auth.module';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport { api } from '../api/Intercepter';\nexport default new Vuex.Store({\n  modules: {\n    setting: setting,\n    auth: auth\n  },\n  state: {\n    user: null,\n    isNewUser: true\n  },\n  mutations: {\n    SET_USER_DATA: function SET_USER_DATA(state, userData) {\n      localStorage.setItem('user', JSON.stringify(userData));\n      console.log(userData);\n      state.user = userData;\n    },\n    LOGOUT: function LOGOUT() {\n      localStorage.removeItem('user');\n      location.reload();\n    },\n    IS_NEW_USER: function IS_NEW_USER(state, isNewUser) {\n      state.isNewUser = isNewUser;\n    }\n  },\n  actions: {\n    register: function register(_ref, credentials) {\n      var commit = _ref.commit;\n      console.log(credentials);\n      var formData = new FormData();\n      formData.append(\"name\", credentials.name);\n      formData.append(\"email\", credentials.email);\n      formData.append(\"password\", credentials.password);\n      formData.append(\"fb_name\", credentials.fb_name);\n      formData.append(\"image\", credentials.file[0]);\n      return api.post('register', formData).then(function (data) {\n        commit('SET_USER_DATA', data.data.data);\n      });\n    },\n    login: function login(_ref2, credentials) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, error;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref2.commit;\n                error = null;\n                _context.next = 4;\n                return api.post('login', credentials).then(function (_ref3) {\n                  var data = _ref3.data;\n                  commit('SET_USER_DATA', data.data);\n                })[\"catch\"](function (e) {\n                  error = e.response.data.data[1];\n                });\n\n              case 4:\n                return _context.abrupt(\"return\", error);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      commit('LOGOUT');\n    },\n    isNewUser: function isNewUser(_ref5, _isNewUser) {\n      var commit = _ref5.commit;\n      commit('IS_NEW_USER', _isNewUser);\n    },\n    registerAdmin: function registerAdmin(_ref6, credentials) {\n      var commit = _ref6.commit;\n      return api.post(\"/register-admin\", credentials).then(function (data) {\n        commit('SET_USER_DATA', data.data.data);\n        return data.data;\n      });\n    }\n  }\n});","map":{"version":3,"names":["setting","auth","Vuex","axios","api","Store","modules","state","user","isNewUser","mutations","SET_USER_DATA","userData","localStorage","setItem","JSON","stringify","console","log","LOGOUT","removeItem","location","reload","IS_NEW_USER","actions","register","credentials","commit","formData","FormData","append","name","email","password","fb_name","file","post","then","data","login","error","e","response","logout","registerAdmin"],"sources":["C:/Users/someO/Desktop/vue/osboha-template/src/store/index.js"],"sourcesContent":["import setting from './setting/index'\nimport {auth} from './auth.module'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport {api} from '../api/Intercepter'\nexport default new Vuex.Store({\n  modules:{\n    setting,\n    auth\n  },\n  state: {\n    user: null,\n    isNewUser: true\n  },\n  mutations: {\n    SET_USER_DATA (state, userData) {\n      localStorage.setItem('user', JSON.stringify(userData))\n      console.log(userData)\n      state.user = userData\n    },\n    LOGOUT () {\n      localStorage.removeItem('user')\n      location.reload()\n    },\n    IS_NEW_USER (state, isNewUser) {\n      state.isNewUser = isNewUser\n    }\n  },\n  actions: {\n    register ({ commit }, credentials) {\n      console.log(credentials)\n      let formData = new FormData();\n      formData.append(\"name\", credentials.name);\n      formData.append(\"email\", credentials.email);\n      formData.append(\"password\", credentials.password); \n      formData.append(\"fb_name\", credentials.fb_name); \n      formData.append(\"image\", credentials.file[0]);\n      return api\n        .post('register', formData)\n        .then(( data) => {\n           \n          commit('SET_USER_DATA', data.data.data)\n        })\n    },\n    async login ({ commit }, credentials) {\n      let error = null;\n       await api\n        .post('login', credentials)\n        .then(({ data }) => {\n          commit('SET_USER_DATA', data.data)\n        }).catch(e => {error = e.response.data.data[1]})\n        return error;\n    },\n    logout ({ commit }) {\n      commit('LOGOUT')\n    },\n    isNewUser ({ commit }, isNewUser) {\n      commit('IS_NEW_USER', isNewUser)\n    },registerAdmin({commit},credentials){\n      return api\n      .post(\"/register-admin\", credentials)\n      .then((data) => {\n            \n        commit('SET_USER_DATA', data.data.data)\n        return data.data\n      });\n    }\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}