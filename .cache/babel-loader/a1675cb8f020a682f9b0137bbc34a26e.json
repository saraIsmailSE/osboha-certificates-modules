{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-56823e33\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  \"class\": \"col-sm-12 mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;;;;;;EACO,SAAM;;;uBAAXA,oBACM,KADN","names":["_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\AuthPages\\Default\\SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"col-sm-12 mt-3\">\n  </div>\n</template>\n<script>\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength, requiredIf } from \"@vuelidate/validators\";\n\nexport default {\n  name: \"SignUp\",\n  setup() {\n    return { v$: useVuelidate() };\n  },\n\n  data() {\n    return {\n      loader: false,\n      options: {\n        centeredSlides: false,\n        loop: false,\n        slidesPerView: 1,\n        autoplay: {\n          delay: 3000,\n        },\n        spaceBetween: 15,\n        pagination: {\n          el: \".swiper-pagination\",\n        },\n        navigation: {\n          nextEl: \".swiper-button-next\",\n          prevEl: \".swiper-button-prev\",\n        },\n\n        // And if we need scrollbar\n        scrollbar: {\n          el: \".swiper-scrollbar\",\n        },\n      },\n      form: {\n        name: \"\",\n        password: \"\",\n        email: \"\",\n        file: [],\n      },\n    };\n  },\n  methods: {\n    uploadFile() {\n\n      this.form.file = this.$refs.file.files;\n    },\n    async onSubmit() {\n      this.v$.$touch();\n\n      if (!this.v$.form.$invalid) {\n        this.loader = true;\n        const res = await this.$store\n\n          .dispatch(\"register\", {\n            email: this.form.email,\n            password: this.form.password,\n            name: this.form.name,\n\n            file: this.form.file,\n\n          })\n        this.loader = false;\n\n        this.$router.push({ name: 'social.book' })\n      }\n    },\n  },\n  validations() {\n    return {\n      form: {\n        email: {\n          required,\n          email,\n        },\n        password: {\n          required,\n          min: minLength(8),\n        },\n        name: {\n          required,\n        },\n        file: {\n          required: requiredIf(function (nestedModel) {\n            return this.form.file.length == 0; // New changes\n          }),\n        },\n      },\n    };\n  },\n};\n</script>\n  \n<style lang=\"scss\" scoped>\nh1,\nh4,\np,\ntitle,\nform {\n  direction: rtl;\n}\n\n.form-check {\n  float: left;\n}\n\na.float-end {\n  margin-top: 10px;\n}\n</style>\n  "]},"metadata":{},"sourceType":"module"}