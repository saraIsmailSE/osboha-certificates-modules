{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderSlot as _renderSlot, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_resolveDynamicComponent($props.tag), {\n    type: $props.type,\n    tabindex: $props.tabindex,\n    id: $props.tooltipTarget,\n    \"class\": _normalizeClass($props.className),\n    \"data-bs-toggle\": \"tooltip\",\n    \"data-bs-placement\": $props.tooltipPlacement,\n    \"data-bs-html\": $props.htmlContent,\n    title: $props.tooltipContent,\n    ref: \"tooltip\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(_toDisplayString($props.tooltipText) + \" \", 1\n      /* TEXT */\n      ), _renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 8\n  /* PROPS */\n  , [\"type\", \"tabindex\", \"id\", \"class\", \"data-bs-placement\", \"data-bs-html\", \"title\"]);\n}","map":{"version":3,"mappings":";;uBACIA,aAGYC,yBAHIC,UAGJ,CAHZ,EAAmB;IAAGC,IAAI,EAAED,WAAT;IAAgBE,QAAQ,EAAEF,eAA1B;IAAqCG,EAAE,EAAEH,oBAAzC;IAAyD,SAAKI,gBAAEJ,gBAAF,CAA9D;IAA2E,kBAAe,SAA1F;IAAqG,qBAAmBA,uBAAxH;IAA2I,gBAAcA,kBAAzJ;IAAuKK,KAAK,EAAEL,qBAA9K;IAA8LM,GAAG,EAAC;EAAlM,CAAnB;wBACG;MAAA,OAAe,mCAAbN,sBAAa,KACd;MAAA;OADc,EACdO,YAAOC,WAAP,EAAO,SAAP,CADc,CAAf;IAAA;;;;GADH;;EAAA","names":["_createBlock","_resolveDynamicComponent","$props","type","tabindex","id","_normalizeClass","title","ref","_renderSlot","_ctx"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\bootstrap\\tooltip\\tooltip.vue"],"sourcesContent":["<template>\n    <component :is=\"tag\" :type=\"type\" :tabindex=\"tabindex\" :id=\"tooltipTarget\" :class=\"className\" data-bs-toggle=\"tooltip\" :data-bs-placement=\"tooltipPlacement\" :data-bs-html=\"htmlContent\" :title=\"tooltipContent\" ref=\"tooltip\">\n       {{tooltipText}}\n        <slot/>\n    </component>\n</template>\n<script>\nimport { Tooltip } from 'bootstrap'\nexport default {\n  name: 'tooltip',\n  props: {\n    tag: { type: String, default: 'button' },\n    type: { type: String, default: 'button' },\n    tabindex: { type: Number },\n    className: { type: String, default: '' },\n    tooltipPlacement: { type: String, default: 'left' },\n    htmlContent: { type: Boolean, default: false },\n    tooltipContent: { type: String, default: '' },\n    tooltipText: { type: String },\n    tooltipTarget: { type: String, default: 'example-tooltip' },\n    toggle: { type: Boolean, default: false, required: false }\n  },\n  mounted () {\n    this.elem = new Tooltip(this.$refs.tooltip)\n    this.initShow()\n    this.initShown()\n    this.initHide()\n    this.initHidden()\n    this.initInserted()\n  },\n  methods: {\n    initShow () {\n      this.$refs.tooltip.addEventListener('show.bs.tooltip', () => {\n        this.$emit('show')\n      })\n    },\n    initShown () {\n      this.$refs.tooltip.addEventListener('shown.bs.tooltip', () => {\n        this.$emit('shown')\n      })\n    },\n    initHide () {\n      this.$refs.tooltip.addEventListener('hide.bs.tooltip', () => {\n        this.$emit('hide')\n      })\n    },\n    initHidden () {\n      this.$refs.tooltip.addEventListener('hidden.bs.tooltip', () => {\n        this.$emit('hidden')\n      })\n    },\n    initInserted () {\n      this.$refs.tooltip.addEventListener('inserted.bs.tooltip', () => {\n        this.$emit('inserted')\n      })\n    },\n    destroyShow () {\n      this.$refs.tooltip.removeListener('show.bs.tooltip')\n    },\n    destroyShown () {\n      this.$refs.tooltip.removeListener('shown.bs.tooltip')\n    },\n    destroyHide () {\n      this.$refs.tooltip.removeListener('hide.bs.tooltip')\n    },\n    destroyHidden () {\n      this.$refs.tooltip.removeListener('hidden.bs.tooltip')\n    },\n    destroyInserted () {\n      this.$refs.tooltip.removeListener('inserted.bs.tooltip')\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}