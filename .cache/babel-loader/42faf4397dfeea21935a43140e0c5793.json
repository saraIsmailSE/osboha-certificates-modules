{"ast":null,"code":"import { socialvue } from '../../config/pluginInit'; // import UpdateThesis from \"../Theses/UpdateThesis.vue\";\n\nimport questionServices from \"../../api/questionServices\";\nexport default {\n  name: 'ListQuestion',\n  mounted: function mounted() {\n    socialvue.index();\n  },\n  components: {},\n  props: {\n    question: {\n      type: [Object],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      show: false\n    };\n  },\n  methods: {\n    resolve_img_url: function resolve_img_url(path) {\n      var images = require.context('../../assets/images', false, /\\.png$|\\.jpg$/);\n\n      return images(\"./\" + path);\n    },\n    deleteQuestion: function deleteQuestion(id) {\n      this.show = !this.show;\n      var swalWithBootstrapButtons = this.$swal.mixin({\n        customClass: {\n          confirmButton: 'btn btn-primary btn-lg',\n          cancelButton: 'btn btn-outline-primary btn-lg ms-2'\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: 'هل أنت متأكد؟',\n        text: \"موافقتك تعني حذف هذه السؤال \",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'نعم قم بالحذف',\n        cancelButtonText: 'تراجع  ',\n        showClass: {\n          popup: 'animate__animated animate__zoomIn'\n        },\n        hideClass: {\n          popup: 'animate__animated animate__zoomOut'\n        }\n      }).then(function (willDelete) {\n        if (willDelete.isConfirmed) {\n          questionServices.deleteQuestion(id).then(function (response) {\n            swalWithBootstrapButtons.fire({\n              title: 'تم الحذف',\n              text: 'تم حذف السؤال',\n              icon: 'success',\n              showClass: {\n                popup: 'animate__animated animate__zoomIn'\n              },\n              hideClass: {\n                popup: 'animate__animated animate__zoomOut'\n              }\n            });\n            location.reload();\n          })[\"catch\"](function (error) {\n            console.log(error);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA+CA,SAASA,SAAT,QAA0B,yBAA1B,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AAEA,eAAe;EACXC,IAAI,EAAE,cADK;EAEXC,OAFW,qBAED;IACNH,SAAS,CAACI,KAAV;EACH,CAJU;EAKXC,UAAU,EAAC,EALA;EAQXC,KAAK,EAAE;IACHC,QAAQ,EAAE;MACNC,IAAI,EAAE,CAACC,MAAD,CADA;MAENC,QAAQ,EAAE;IAFJ;EADP,CARI;EAcXC,IAdW,kBAcJ;IACH,OAAO;MACHC,IAAI,EAAE;IADH,CAAP;EAGH,CAlBU;EAmBXC,OAAO,EAAE;IACLC,eAAe,EAAE,yBAAUC,IAAV,EAAgB;MAC7B,IAAIC,MAAK,GAAIC,OAAO,CAACC,OAAR,CAAgB,qBAAhB,EAAuC,KAAvC,EAA8C,eAA9C,CAAb;;MACA,OAAOF,MAAM,CAAC,OAAOD,IAAR,CAAb;IACH,CAJI;IAKLI,cALK,0BAKUC,EALV,EAKc;MACf,KAAKR,IAAL,GAAY,CAAE,KAAKA,IAAnB;MACA,IAAMS,wBAAuB,GAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiB;QAC9CC,WAAW,EAAE;UACTC,aAAa,EAAE,wBADN;UAETC,YAAY,EAAE;QAFL,CADiC;QAK9CC,cAAc,EAAE;MAL8B,CAAjB,CAAjC;MAQAN,wBAAwB,CAACO,IAAzB,CAA8B;QAC1BC,KAAK,EAAE,eADmB;QAE1BC,IAAI,EAAE,8BAFoB;QAG1BC,IAAI,EAAE,SAHoB;QAI1BC,gBAAgB,EAAE,IAJQ;QAK1BC,iBAAiB,EAAE,eALO;QAM1BC,gBAAgB,EAAE,SANQ;QAO1BC,SAAS,EAAE;UACPC,KAAK,EAAE;QADA,CAPe;QAU1BC,SAAS,EAAE;UACPD,KAAK,EAAE;QADA;MAVe,CAA9B,EAcKE,IAdL,CAcU,UAACC,UAAD,EAAgB;QAClB,IAAIA,UAAU,CAACC,WAAf,EAA4B;UACxBvC,gBAAgB,CAACkB,cAAjB,CAAgCC,EAAhC,EACKkB,IADL,CACU,kBAAO,EAAK;YACdjB,wBAAwB,CAACO,IAAzB,CAA8B;cAC1BC,KAAK,EAAE,UADmB;cAE1BC,IAAI,EAAE,eAFoB;cAG1BC,IAAI,EAAE,SAHoB;cAI1BI,SAAS,EAAE;gBACPC,KAAK,EAAE;cADA,CAJe;cAO1BC,SAAS,EAAE;gBACPD,KAAK,EAAE;cADA;YAPe,CAA9B;YAWAK,QAAQ,CAACC,MAAT;UACH,CAdL,WAeW,eAAI,EAAK;YACZC,OAAO,CAACC,GAAR,CAAYC,KAAZ;UACH,CAjBL;QAoBJ;MACH,CArCL;IAsCH;EArDI;AAnBE,CAAf","names":["socialvue","questionServices","name","mounted","index","components","props","question","type","Object","required","data","show","methods","resolve_img_url","path","images","require","context","deleteQuestion","id","swalWithBootstrapButtons","$swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","showClass","popup","hideClass","then","willDelete","isConfirmed","location","reload","console","log","error"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\Questions\\ListQuestion.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row setup-content\" id=\"user-detail\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"col-md-12 p-0\">\r\n                        <h3 class=\"mb-4\">الاسئلة </h3>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 form-group\">\r\n                                <label for=\"uname\" class=\"form-label\">صفحة البداية</label>\r\n                                <label class=\"form-control-plaintext\">{{  question.start_page  }}</label>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group\">\r\n                                <label for=\"emailid\" class=\"form-label\">صفحة النهاية</label>\r\n                                <label class=\"form-control-plaintext\">{{  question.end_page  }}</label>\r\n                            </div>\r\n                            <hr>\r\n\r\n                            <div class=\"col-md-12 form-group\">\r\n                                <div class=\"col-md-12 form-group\">\r\n                                    <label for=\"emailid\" class=\"form-label\"> السؤال</label>\r\n                                    <p class=\"form-control-plaintext\">{{  question.body  }}</p>\r\n                                </div>\r\n                                <div class=\"col-md-12 form-group\">\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-12 form-group\">\r\n                                <div class=\"col-md-12 form-group\">\r\n                                    <label for=\"emailid\" class=\"form-label\"> الاقتباسات</label>\r\n                                    <ul>\r\n                                        <li v-for=\"qoute in question.qoutes\" :key=\"qoute.id\" class=\"mt-3\">\r\n                                            <p>\r\n                                                {{  qoute  }}\r\n                                            </p>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"col-md-12 form-group\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { socialvue } from '../../config/pluginInit'\r\n// import UpdateThesis from \"../Theses/UpdateThesis.vue\";\r\nimport questionServices from \"../../api/questionServices\";\r\n\r\nexport default {\r\n    name: 'ListQuestion',\r\n    mounted() {\r\n        socialvue.index()\r\n    },\r\n    components:{\r\n        \r\n    },\r\n    props: {\r\n        question: {\r\n            type: [Object],\r\n            required: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            show: false\r\n        }\r\n    },\r\n    methods: {\r\n        resolve_img_url: function (path) {\r\n            let images = require.context('../../assets/images', false, /\\.png$|\\.jpg$/)\r\n            return images(\"./\" + path)\r\n        },\r\n        deleteQuestion(id) {\r\n            this.show = ! this.show;\r\n            const swalWithBootstrapButtons = this.$swal.mixin({\r\n                customClass: {\r\n                    confirmButton: 'btn btn-primary btn-lg',\r\n                    cancelButton: 'btn btn-outline-primary btn-lg ms-2'\r\n                },\r\n                buttonsStyling: false\r\n            })\r\n\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'هل أنت متأكد؟',\r\n                text: \"موافقتك تعني حذف هذه السؤال \",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'نعم قم بالحذف',\r\n                cancelButtonText: 'تراجع  ',\r\n                showClass: {\r\n                    popup: 'animate__animated animate__zoomIn'\r\n                },\r\n                hideClass: {\r\n                    popup: 'animate__animated animate__zoomOut'\r\n                }\r\n            })\r\n                .then((willDelete) => {\r\n                    if (willDelete.isConfirmed) {\r\n                        questionServices.deleteQuestion(id)\r\n                            .then(response => {\r\n                                swalWithBootstrapButtons.fire({\r\n                                    title: 'تم الحذف',\r\n                                    text: 'تم حذف السؤال',\r\n                                    icon: 'success',\r\n                                    showClass: {\r\n                                        popup: 'animate__animated animate__zoomIn'\r\n                                    },\r\n                                    hideClass: {\r\n                                        popup: 'animate__animated animate__zoomOut'\r\n                                    }\r\n                                })\r\n                                location.reload()\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            })\r\n\r\n\r\n                    }\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.dropdown-item {\r\n    color: #212529 !important;\r\n}\r\n\r\n.dropdown-menu .dropdown-item:focus,\r\n.dropdown-menu .dropdown-item:hover {\r\n    background: transparent;\r\n    color: var(--iq-primary) !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}