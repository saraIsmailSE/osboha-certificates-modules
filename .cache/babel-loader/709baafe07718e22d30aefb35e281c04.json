{"ast":null,"code":"import { Alert } from 'bootstrap';\nexport default {\n  name: 'alert',\n  props: {\n    variant: {\n      type: String\n    },\n    className: {\n      type: String,\n      \"default\": ''\n    },\n    headingClass: {\n      type: String,\n      \"default\": ''\n    },\n    isdismissable: {\n      type: Boolean,\n      \"default\": false\n    },\n    isheader: {\n      type: Boolean,\n      \"default\": false\n    },\n    headerText: {\n      type: String\n    },\n    buttonClass: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      elem: {}\n    };\n  },\n  mounted: function mounted() {\n    this.elem = new Alert(this.$refs.alert);\n    this.initClose();\n    this.initClosed();\n  },\n  methods: {\n    initClose: function initClose() {\n      var _this = this;\n\n      this.$refs.alert.addEventListener('close.bs.alert', function () {\n        _this.$emit('close');\n      });\n    },\n    initClosed: function initClosed() {\n      var _this2 = this;\n\n      this.$refs.alert.addEventListener('closed.bs.alert', function () {\n        _this2.$emit('closed');\n      });\n    },\n    destroyClose: function destroyClose() {\n      this.$refs.alert;\n      this.$refs.alert.removeListener('close.bs.alert');\n    },\n    destroyClosed: function destroyClosed() {\n      this.$refs.alert.removeListener('closed.bs.alert');\n    }\n  } // unmounted () {\n  //   this.destroyClose()\n  //   this.destroyClosed()\n  // }\n\n};","map":{"version":3,"mappings":"AAQA,SAASA,KAAT,QAAsB,WAAtB;AACA,eAAe;EACbC,IAAI,EAAE,OADO;EAEbC,KAAK,EAAE;IACLC,OAAO,EAAE;MAAEC,IAAI,EAAEC;IAAR,CADJ;IAELC,SAAS,EAAE;MAAEF,IAAI,EAAEC,MAAR;MAAgB,WAAS;IAAzB,CAFN;IAGLE,YAAY,EAAE;MAAEH,IAAI,EAAEC,MAAR;MAAgB,WAAS;IAAzB,CAHT;IAILG,aAAa,EAAE;MAAEJ,IAAI,EAAEK,OAAR;MAAiB,WAAS;IAA1B,CAJV;IAKLC,QAAQ,EAAE;MAAEN,IAAI,EAAEK,OAAR;MAAiB,WAAS;IAA1B,CALL;IAMLE,UAAU,EAAE;MAAEP,IAAI,EAAEC;IAAR,CANP;IAOLO,WAAW,EAAE;MAAER,IAAI,EAAEC;IAAR;EAPR,CAFM;EAWbQ,IAXa,kBAWL;IACN,OAAO;MACLC,IAAI,EAAE;IADD,CAAP;EAGD,CAfY;EAgBbC,OAhBa,qBAgBF;IACT,KAAKD,IAAL,GAAY,IAAId,KAAJ,CAAU,KAAKgB,KAAL,CAAWC,KAArB,CAAZ;IACA,KAAKC,SAAL;IACA,KAAKC,UAAL;EACD,CApBY;EAqBbC,OAAO,EAAE;IACPF,SADO,uBACM;MAAA;;MACX,KAAKF,KAAL,CAAWC,KAAX,CAAiBI,gBAAjB,CAAkC,gBAAlC,EAAoD,YAAM;QACxD,KAAI,CAACC,KAAL,CAAW,OAAX;MACD,CAFD;IAGD,CALM;IAMPH,UANO,wBAMO;MAAA;;MACZ,KAAKH,KAAL,CAAWC,KAAX,CAAiBI,gBAAjB,CAAkC,iBAAlC,EAAqD,YAAM;QACzD,MAAI,CAACC,KAAL,CAAW,QAAX;MACD,CAFD;IAGD,CAVM;IAWPC,YAXO,0BAWS;MACZ,KAAKP,KAAL,CAAWC,KAAZ;MACD,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,cAAjB,CAAgC,gBAAhC;IACD,CAdM;IAePC,aAfO,2BAeU;MACf,KAAKT,KAAL,CAAWC,KAAX,CAAiBO,cAAjB,CAAgC,iBAAhC;IACF;EAjBO,CArBI,CAwCb;EACA;EACA;EACA;;AA3Ca,CAAf","names":["Alert","name","props","variant","type","String","className","headingClass","isdismissable","Boolean","isheader","headerText","buttonClass","data","elem","mounted","$refs","alert","initClose","initClosed","methods","addEventListener","$emit","destroyClose","removeListener","destroyClosed"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\components\\bootstrap\\alert\\alert.vue"],"sourcesContent":["<template>\n<div :class=\"isdismissable? `alert  alert-dismissible  ${className} alert-`+variant : `alert  ${className} alert-`+variant\" ref=\"alert\" role=\"alert\">\n    <div v-if=\"isheader\" :class=\"`alert-heading ${headingClass}`\">{{headerText}}</div>\n    <slot/>\n    <button v-if=\"isdismissable\" type=\"button\" :class=\"`btn-close ${buttonClass}`\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n</div>\n</template>\n<script>\nimport { Alert } from 'bootstrap'\nexport default {\n  name: 'alert',\n  props: {\n    variant: { type: String },\n    className: { type: String, default: '' },\n    headingClass: { type: String, default: '' },\n    isdismissable: { type: Boolean, default: false },\n    isheader: { type: Boolean, default: false },\n    headerText: { type: String },\n    buttonClass: { type: String }\n  },\n  data () {\n    return {\n      elem: {}\n    }\n  },\n  mounted () {\n    this.elem = new Alert(this.$refs.alert)\n    this.initClose()\n    this.initClosed()\n  },\n  methods: {\n    initClose () {\n      this.$refs.alert.addEventListener('close.bs.alert', () => {\n        this.$emit('close')\n      })\n    },\n    initClosed () {\n      this.$refs.alert.addEventListener('closed.bs.alert', () => {\n        this.$emit('closed')\n      })\n    },\n    destroyClose () {\n       (this.$refs.alert)\n      this.$refs.alert.removeListener('close.bs.alert')\n    },\n    destroyClosed () {\n      this.$refs.alert.removeListener('closed.bs.alert')\n    }\n  }\n  // unmounted () {\n  //   this.destroyClose()\n  //   this.destroyClosed()\n  // }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}