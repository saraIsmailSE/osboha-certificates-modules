{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/someO/Desktop/vue/osboha-template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport BookCard from '../../components/Book/BookCard.vue';\nimport bookService from '../../api/bookServices';\nimport { Dataset, DatasetItem, DatasetInfo, DatasetPager, DatasetSearch, DatasetShow } from 'vue-dataset';\nexport default {\n  name: 'Book',\n  components: {\n    BookCard: BookCard\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getBooks();\n\n            case 2:\n              _this.startWithInput = debounce(function (e) {\n                _this.startsWith = e.target.value;\n              }, 100);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  data: function data() {\n    return {\n      books: [],\n      openBook: []\n    };\n  },\n  methods: {\n    getBooks: function getBooks() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var books;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return bookService.getAllUserBooks();\n\n              case 2:\n                books = _context2.sent;\n                _this2.books = books.books;\n                _this2.openBook = books.open_book;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    filterList: filterList,\n    isoDateToEuroDate: isoDateToEuroDate,\n    searchAsEuroDate: searchAsEuroDate,\n    updateData: function updateData() {\n      var updatedUsers = clone(users).slice(5, 10);\n      this.users = updatedUsers;\n    },\n    startsWithFilter: function startsWithFilter(value) {\n      return value.toLowerCase().startsWith(this.startsWith.toLowerCase());\n    }\n  },\n  computed: {\n    sortFirstName: function sortFirstName() {\n      return this.firstNameAsc ? 'firstName' : '-firstName';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AA0HA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,WANF,QAOO,aAPP;AASA,eAAe;EACbC,IAAI,EAAE,MADO;EAEbC,UAAU,EAAE;IAAET,QAAO,EAAPA;EAAF,CAFC;EAGPU,OAHO,qBAGG;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACR,KAAI,CAACC,QAAL,EADQ;;YAAA;cAEd,KAAI,CAACC,cAAL,GAAsBC,QAAQ,CAAC,UAACC,CAAD,EAAO;gBACpC,KAAI,CAACC,UAAL,GAAkBD,CAAC,CAACE,MAAF,CAASC,KAA3B;cACD,CAF6B,EAE3B,GAF2B,CAA9B;;YAFc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAMf,CATY;EAUbC,IAVa,kBAUN;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,QAAQ,EAAE;IAFL,CAAP;EAID,CAfY;EAeVC,OAAO,EAAE;IACJV,QADI,sBACO;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACKV,WAAW,CAACqB,eAAZ,EADL;;cAAA;gBACTH,KADS;gBAEf,MAAI,CAACA,KAAL,GAAaA,KAAK,CAACA,KAAnB;gBACA,MAAI,CAACC,QAAL,GAAgBD,KAAK,CAACI,SAAtB;;cAHe;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAIhB,CALS;IAMVC,UAAU,EAAVA,UANU;IAOVC,iBAAiB,EAAjBA,iBAPU;IAQVC,gBAAgB,EAAhBA,gBARU;IASVC,UATU,wBASG;MACX,IAAMC,YAAW,GAAIC,KAAK,CAACC,KAAD,CAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAArB;MAEA,KAAKD,KAAL,GAAaF,YAAb;IACD,CAbS;IAcVI,gBAdU,4BAcOf,KAdP,EAcc;MACtB,OAAOA,KAAK,CAACgB,WAAN,GAAoBlB,UAApB,CAA+B,KAAKA,UAAL,CAAgBkB,WAAhB,EAA/B,CAAP;IACF;EAhBU,CAfC;EAiCbC,QAAQ,EAAE;IACRC,aADQ,2BACQ;MACd,OAAO,KAAKC,YAAL,GAAoB,WAApB,GAAkC,YAAzC;IACF;EAHQ;AAjCG,CAAf","names":["BookCard","bookService","Dataset","DatasetItem","DatasetInfo","DatasetPager","DatasetSearch","DatasetShow","name","components","created","getBooks","startWithInput","debounce","e","startsWith","target","value","data","books","openBook","methods","getAllUserBooks","open_book","filterList","isoDateToEuroDate","searchAsEuroDate","updateData","updatedUsers","clone","users","slice","startsWithFilter","toLowerCase","computed","sortFirstName","firstNameAsc"],"sourceRoot":"","sources":["C:\\Users\\someO\\Desktop\\vue\\osboha-template\\src\\views\\Book\\Book.vue"],"sourcesContent":["Template\nScript\nStyle\n<template>\n <div>\n   <h3>Custom filters</h3>\n   <div class=\"row mb-1\">\n     <div class=\"col-md-6 mb-2 mb-md-0\">\n       <div class=\"btn-group\">\n         <button\n           type=\"button\"\n           class=\"btn btn-outline-secondary\"\n           :class=\"[onlineFilter === '' && 'active']\"\n           @click.prevent=\"onlineFilter = ''\"\n         >\n           <span class=\"badge bg-white text-secondary\">{{ users.length }}</span> All\n         </button>\n         <button\n           type=\"button\"\n           class=\"btn btn-outline-secondary\"\n           :class=\"[onlineFilter === 'Active' && 'active']\"\n           @click.prevent=\"onlineFilter = 'Active'\"\n         >\n           <span class=\"badge bg-success text-white\">{{ filterList(users, { onlineStatus: 'Active' }).length }}</span> Active\n         </button>\n         <button\n           type=\"button\"\n           class=\"btn btn-outline-secondary\"\n           :class=\"[onlineFilter === 'Away' && 'active']\"\n           @click.prevent=\"onlineFilter = 'Away'\"\n         >\n           <span class=\"badge bg-warning text-white\">{{ filterList(users, { onlineStatus: 'Away' }).length }}</span> Away\n         </button>\n         <button\n           type=\"button\"\n           class=\"btn btn-outline-secondary\"\n           :class=\"[onlineFilter === 'Do not disturb' && 'active']\"\n           @click.prevent=\"onlineFilter = 'Do not disturb'\"\n         >\n           <span class=\"badge bg-danger text-white\">{{ filterList(users, { onlineStatus: 'Do not disturb' }).length }}</span>\n           Do not disturb\n         </button>\n         <button\n           type=\"button\"\n           class=\"btn btn-outline-secondary\"\n           :class=\"[onlineFilter === 'Invisible' && 'active']\"\n           @click.prevent=\"onlineFilter = 'Invisible'\"\n         >\n           <span class=\"badge bg-secondary text-white\">{{ filterList(users, { onlineStatus: 'Invisible' }).length }}</span>\n           Invisible\n         </button>\n       </div>\n     </div>\n     <div class=\"col-md-6\">\n       <input\n         type=\"text\"\n         class=\"form-control\"\n         placeholder=\"Name starts with\"\n         :value=\"startsWith\"\n         @input=\"startWithInput($event)\"\n       />\n     </div>\n   </div>\n   <hr class=\"mb-1\" />\n   <h3>Sorting</h3>\n   <div class=\"row mb-2\">\n     <div class=\"col-md-6 mb-2 mb-md-0\">\n       <button type=\"button\" class=\"btn btn-outline-secondary\" @click=\"firstNameAsc = !firstNameAsc\">\n         First name {{ firstNameAsc ? 'asc' : 'desc' }}\n       </button>\n     </div>\n   </div>\n   <hr />\n   <dataset\n     v-slot=\"{ ds }\"\n     :ds-data=\"users\"\n     :ds-filter-fields=\"{ onlineStatus: onlineFilter, name: startsWithFilter }\"\n     :ds-sortby=\"[sortFirstName]\"\n     :ds-search-in=\"['balance', 'birthdate', 'name', 'company', 'email', 'phone', 'address', 'favoriteAnimal']\"\n     :ds-search-as=\"{ birthdate: searchAsEuroDate }\"\n   >\n     <div class=\"row mb-2\" :data-page-count=\"ds.dsPagecount\">\n       <div class=\"col-md-6 mb-2 mb-md-0\">\n         <dataset-show />\n       </div>\n       <div class=\"col-md-6\">\n         <dataset-search ds-search-placeholder=\"Search...\" />\n       </div>\n     </div>\n     <div class=\"row\">\n       <div class=\"col-md-12\">\n         <dataset-item class=\"form-row mb-3\" style=\"overflow-y: auto; max-height: 400px\">\n           <template #default=\"{ row, rowIndex }\">\n             <div class=\"col-md-4\">\n               <div class=\"card mb-2\">\n                 <div class=\"card-body pt-3 pb-2 px-3\">\n                   <h5 class=\"card-title text-truncate mb-2\" :title=\"`Index: ${rowIndex}`\">\n                     <span :class=\"['font-16', statusClass[row.onlineStatus]]\">â¬¤</span> {{ row.name }}\n                   </h5>\n                   <h6 class=\"card-subtitle text-truncate text-muted\">{{ row.email }}</h6>\n                   <p class=\"card-text text-truncate mb-0\">{{ row.balance }}</p>\n                   <p class=\"card-text text-truncate text-right\">{{ isoDateToEuroDate(row.birthdate) }}</p>\n                 </div>\n               </div>\n             </div>\n           </template>\n           <template #noDataFound>\n             <div class=\"col-md-12 pt-2\">\n               <p class=\"text-center\">No results found</p>\n             </div>\n           </template>\n         </dataset-item>\n       </div>\n     </div>\n     <div class=\"d-flex flex-md-row flex-column justify-content-between align-items-center\">\n       <dataset-info class=\"mb-2 mb-md-0\" />\n       <dataset-pager />\n     </div>\n   </dataset>\n </div>\n</template>\n<script>\nimport BookCard from '../../components/Book/BookCard.vue'\nimport bookService from '../../api/bookServices'\nimport {\n  Dataset,\n  DatasetItem,\n  DatasetInfo,\n  DatasetPager,\n  DatasetSearch,\n  DatasetShow\n} from 'vue-dataset'\n\nexport default {\n  name: 'Book',\n  components: { BookCard },\n  async created() {\n    await this.getBooks();\n    this.startWithInput = debounce((e) => {\n      this.startsWith = e.target.value\n    }, 100)\n\n  },\n  data() {\n    return {\n      books: [],\n      openBook: []\n    }\n  }, methods: {\n    async getBooks() {\n      const books = await bookService.getAllUserBooks();\n      this.books = books.books;\n      this.openBook = books.open_book\n    },\n    filterList,\n    isoDateToEuroDate,\n    searchAsEuroDate,\n    updateData() {\n      const updatedUsers = clone(users).slice(5, 10)\n\n      this.users = updatedUsers\n    },\n    startsWithFilter(value) {\n      return value.toLowerCase().startsWith(this.startsWith.toLowerCase())\n    }\n  },\n  computed: {\n    sortFirstName() {\n      return this.firstNameAsc ? 'firstName' : '-firstName'\n    }\n  },\n\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}